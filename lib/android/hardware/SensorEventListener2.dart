// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "Sensor.dart" as sensor_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.hardware.SensorEventListener2
///
/// Used for receiving a notification when a flush() has been successfully completed.
class SensorEventListener2 extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/hardware/SensorEventListener2");
  SensorEventListener2.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_onFlushCompleted = jniAccessors.getMethodIDOf(
      _classRef, "onFlushCompleted", "(Landroid/hardware/Sensor;)V");

  /// from: public abstract void onFlushCompleted(android.hardware.Sensor sensor)
  ///
  /// Called after flush() is completed. All the events in the batch at the point when the flush
  /// was called have been delivered to the applications registered for those sensor events. In
  /// android.os.Build.VERSION_CODES\#KITKAT, applications may receive flush complete events
  /// even if some other application has called flush() on the same sensor. Starting with
  /// android.os.Build.VERSION_CODES\#LOLLIPOP, flush Complete events are sent ONLY to the
  /// application that has explicitly called flush(). If the hardware FIFO is flushed due to some
  /// other application calling flush(), flush complete event is not delivered to this application.
  ///
  ///@param sensor The android.hardware.Sensor Sensor on which flush was called.
  ///@see android.hardware.SensorManager\#flush(SensorEventListener)
  void onFlushCompleted(sensor_.Sensor sensor) =>
      jniAccessors.callMethodWithArgs(reference, _id_onFlushCompleted,
          jni.JniType.voidType, [sensor.reference]).check();
}
