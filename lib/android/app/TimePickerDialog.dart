// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "AlertDialog.dart" as alertdialog_;

import "../content/Context.dart" as context_;

import "../widget/TimePicker.dart" as timepicker_;

import "../content/DialogInterface.dart" as dialoginterface_;

import "../os/Bundle.dart" as bundle_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.app.TimePickerDialog
///
/// A dialog that prompts the user for the time of day using a
/// TimePicker.
///
///
/// See the <a href="{@docRoot}guide/topics/ui/controls/pickers.html">Pickers</a>
/// guide.
class TimePickerDialog extends alertdialog_.AlertDialog {
  static final _classRef =
      jniAccessors.getClassOf("android/app/TimePickerDialog");
  TimePickerDialog.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor3 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/app/TimePickerDialog\$OnTimeSetListener;IIZ)V");

  /// from: public void <init>(android.content.Context context, android.app.TimePickerDialog.OnTimeSetListener listener, int hourOfDay, int minute, boolean is24HourView)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a new time picker dialog.
  ///@param context the parent context
  ///@param listener the listener to call when the time is set
  ///@param hourOfDay the initial hour
  ///@param minute the initial minute
  ///@param is24HourView whether this is a 24 hour view or AM/PM
  TimePickerDialog.ctor3(
      context_.Context context,
      TimePickerDialog_OnTimeSetListener listener,
      int hourOfDay,
      int minute,
      bool is24HourView)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor3, [
          context.reference,
          listener.reference,
          hourOfDay,
          minute,
          is24HourView
        ]).object);

  static final _id_ctor4 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;ILandroid/app/TimePickerDialog\$OnTimeSetListener;IIZ)V");

  /// from: public void <init>(android.content.Context context, int themeResId, android.app.TimePickerDialog.OnTimeSetListener listener, int hourOfDay, int minute, boolean is24HourView)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a new time picker dialog with the specified theme.
  ///
  /// The theme is overlaid on top of the theme of the parent {@code context}.
  /// If {@code themeResId} is 0, the dialog will be inflated using the theme
  /// specified by the
  /// android.R.attr\#timePickerDialogTheme android:timePickerDialogTheme
  /// attribute on the parent {@code context}'s theme.
  ///@param context the parent context
  ///@param themeResId the resource ID of the theme to apply to this dialog
  ///@param listener the listener to call when the time is set
  ///@param hourOfDay the initial hour
  ///@param minute the initial minute
  ///@param is24HourView Whether this is a 24 hour view, or AM/PM.
  TimePickerDialog.ctor4(
      context_.Context context,
      int themeResId,
      TimePickerDialog_OnTimeSetListener listener,
      int hourOfDay,
      int minute,
      bool is24HourView)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor4, [
          context.reference,
          themeResId,
          listener.reference,
          hourOfDay,
          minute,
          is24HourView
        ]).object);

  static final _id_onTimeChanged = jniAccessors.getMethodIDOf(
      _classRef, "onTimeChanged", "(Landroid/widget/TimePicker;II)V");

  /// from: public void onTimeChanged(android.widget.TimePicker view, int hourOfDay, int minute)
  void onTimeChanged(timepicker_.TimePicker view, int hourOfDay, int minute) =>
      jniAccessors.callMethodWithArgs(reference, _id_onTimeChanged,
          jni.JniType.voidType, [view.reference, hourOfDay, minute]).check();

  static final _id_show1 = jniAccessors.getMethodIDOf(_classRef, "show", "()V");

  /// from: public void show()
  void show1() => jniAccessors.callMethodWithArgs(
      reference, _id_show1, jni.JniType.voidType, []).check();

  static final _id_onClick = jniAccessors.getMethodIDOf(
      _classRef, "onClick", "(Landroid/content/DialogInterface;I)V");

  /// from: public void onClick(android.content.DialogInterface dialog, int which)
  void onClick(dialoginterface_.DialogInterface dialog, int which) =>
      jniAccessors.callMethodWithArgs(reference, _id_onClick,
          jni.JniType.voidType, [dialog.reference, which]).check();

  static final _id_updateTime =
      jniAccessors.getMethodIDOf(_classRef, "updateTime", "(II)V");

  /// from: public void updateTime(int hourOfDay, int minuteOfHour)
  ///
  /// Sets the current time.
  ///@param hourOfDay The current hour within the day.
  ///@param minuteOfHour The current minute within the hour.
  void updateTime(int hourOfDay, int minuteOfHour) =>
      jniAccessors.callMethodWithArgs(reference, _id_updateTime,
          jni.JniType.voidType, [hourOfDay, minuteOfHour]).check();

  static final _id_onSaveInstanceState1 = jniAccessors.getMethodIDOf(
      _classRef, "onSaveInstanceState", "()Landroid/os/Bundle;");

  /// from: public android.os.Bundle onSaveInstanceState()
  /// The returned object must be deleted after use, by calling the `delete` method.
  bundle_.Bundle onSaveInstanceState1() =>
      bundle_.Bundle.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_onSaveInstanceState1, jni.JniType.objectType, []).object);

  static final _id_onRestoreInstanceState1 = jniAccessors.getMethodIDOf(
      _classRef, "onRestoreInstanceState", "(Landroid/os/Bundle;)V");

  /// from: public void onRestoreInstanceState(android.os.Bundle savedInstanceState)
  void onRestoreInstanceState1(bundle_.Bundle savedInstanceState) =>
      jniAccessors.callMethodWithArgs(reference, _id_onRestoreInstanceState1,
          jni.JniType.voidType, [savedInstanceState.reference]).check();
}

/// from: android.app.TimePickerDialog$OnTimeSetListener
///
/// The callback interface used to indicate the user is done filling in
/// the time (e.g.&nbsp;they clicked on the 'OK' button).
class TimePickerDialog_OnTimeSetListener extends jni.JniObject {
  static final _classRef = jniAccessors
      .getClassOf("android/app/TimePickerDialog\$OnTimeSetListener");
  TimePickerDialog_OnTimeSetListener.fromRef(jni.JObject ref)
      : super.fromRef(ref);

  static final _id_onTimeSet = jniAccessors.getMethodIDOf(
      _classRef, "onTimeSet", "(Landroid/widget/TimePicker;II)V");

  /// from: public abstract void onTimeSet(android.widget.TimePicker view, int hourOfDay, int minute)
  ///
  /// Called when the user is done setting a new time and the dialog has
  /// closed.
  ///@param view the view associated with this listener
  ///@param hourOfDay the hour that was set
  ///@param minute the minute that was set
  void onTimeSet(timepicker_.TimePicker view, int hourOfDay, int minute) =>
      jniAccessors.callMethodWithArgs(reference, _id_onTimeSet,
          jni.JniType.voidType, [view.reference, hourOfDay, minute]).check();
}
