// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../os/Parcelable.dart" as parcelable_;

import "../os/Parcel.dart" as parcel_;

import "../util/Rational.dart" as rational_;

import "../graphics/Rect.dart" as rect_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.app.PictureInPictureParams
///
/// Represents a set of parameters used to initialize and update an Activity in picture-in-picture
/// mode.
class PictureInPictureParams extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/app/PictureInPictureParams");
  PictureInPictureParams.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_CREATOR = jniAccessors.getStaticFieldIDOf(
      _classRef, "CREATOR", "Landroid/os/Parcelable\$Creator;");

  /// from: static public final android.os.Parcelable.Creator<android.app.PictureInPictureParams> CREATOR
  /// The returned object must be deleted after use, by calling the `delete` method.
  static parcelable_.Parcelable_Creator get CREATOR =>
      parcelable_.Parcelable_Creator.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CREATOR, jni.JniType.objectType)
          .object);

  static final _id_describeContents =
      jniAccessors.getMethodIDOf(_classRef, "describeContents", "()I");

  /// from: public int describeContents()
  int describeContents() => jniAccessors.callMethodWithArgs(
      reference, _id_describeContents, jni.JniType.intType, []).integer;

  static final _id_writeToParcel = jniAccessors.getMethodIDOf(
      _classRef, "writeToParcel", "(Landroid/os/Parcel;I)V");

  /// from: public void writeToParcel(android.os.Parcel out, int flags)
  void writeToParcel(parcel_.Parcel out, int flags) =>
      jniAccessors.callMethodWithArgs(reference, _id_writeToParcel,
          jni.JniType.voidType, [out.reference, flags]).check();
}

/// from: android.app.PictureInPictureParams$Builder
///
/// Builder class for PictureInPictureParams objects.
class PictureInPictureParams_Builder extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/app/PictureInPictureParams\$Builder");
  PictureInPictureParams_Builder.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: public void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  PictureInPictureParams_Builder()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_setAspectRatio = jniAccessors.getMethodIDOf(
      _classRef,
      "setAspectRatio",
      "(Landroid/util/Rational;)Landroid/app/PictureInPictureParams\$Builder;");

  /// from: public android.app.PictureInPictureParams.Builder setAspectRatio(android.util.Rational aspectRatio)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Sets the aspect ratio.  This aspect ratio is defined as the desired width / height, and
  /// does not change upon device rotation.
  ///@param aspectRatio the new aspect ratio for the activity in picture-in-picture, must be
  /// between 2.39:1 and 1:2.39 (inclusive).
  ///@return this builder instance.
  PictureInPictureParams_Builder setAspectRatio(
          rational_.Rational aspectRatio) =>
      PictureInPictureParams_Builder.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_setAspectRatio,
          jni.JniType.objectType,
          [aspectRatio.reference]).object);

  static final _id_setActions = jniAccessors.getMethodIDOf(
      _classRef,
      "setActions",
      "(Ljava/util/List;)Landroid/app/PictureInPictureParams\$Builder;");

  /// from: public android.app.PictureInPictureParams.Builder setActions(java.util.List<android.app.RemoteAction> actions)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Sets the user actions.  If there are more than
  /// Activity\#getMaxNumPictureInPictureActions() actions, then the input list
  /// will be truncated to that number.
  ///@param actions the new actions to show in the picture-in-picture menu.
  ///@return this builder instance.
  ///@see RemoteAction
  PictureInPictureParams_Builder setActions(jni.JniObject actions) =>
      PictureInPictureParams_Builder.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_setActions,
          jni.JniType.objectType,
          [actions.reference]).object);

  static final _id_setSourceRectHint = jniAccessors.getMethodIDOf(
      _classRef,
      "setSourceRectHint",
      "(Landroid/graphics/Rect;)Landroid/app/PictureInPictureParams\$Builder;");

  /// from: public android.app.PictureInPictureParams.Builder setSourceRectHint(android.graphics.Rect launchBounds)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Sets the source bounds hint. These bounds are only used when an activity first enters
  /// picture-in-picture, and describe the bounds in window coordinates of activity entering
  /// picture-in-picture that will be visible following the transition. For the best effect,
  /// these bounds should also match the aspect ratio in the arguments.
  ///@param launchBounds window-coordinate bounds indicating the area of the activity that
  /// will still be visible following the transition into picture-in-picture (eg. the video
  /// view bounds in a video player)
  ///@return this builder instance.
  PictureInPictureParams_Builder setSourceRectHint(rect_.Rect launchBounds) =>
      PictureInPictureParams_Builder.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_setSourceRectHint,
          jni.JniType.objectType,
          [launchBounds.reference]).object);

  static final _id_build = jniAccessors.getMethodIDOf(
      _classRef, "build", "()Landroid/app/PictureInPictureParams;");

  /// from: public android.app.PictureInPictureParams build()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// @return an immutable PictureInPictureParams to be used when entering or updating
  /// the activity in picture-in-picture.
  ///@see Activity\#enterPictureInPictureMode(PictureInPictureParams)
  ///@see Activity\#setPictureInPictureParams(PictureInPictureParams)
  PictureInPictureParams build() =>
      PictureInPictureParams.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_build, jni.JniType.objectType, []).object);
}
