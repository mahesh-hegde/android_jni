// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.opengl.GLES11Ext
class GLES11Ext extends jni.JniObject {
  static final _classRef = jniAccessors.getClassOf("android/opengl/GLES11Ext");
  GLES11Ext.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int GL_3DC_XY_AMD
  static const GL_3DC_XY_AMD = 34810;

  /// from: static public final int GL_3DC_X_AMD
  static const GL_3DC_X_AMD = 34809;

  /// from: static public final int GL_ATC_RGBA_EXPLICIT_ALPHA_AMD
  static const GL_ATC_RGBA_EXPLICIT_ALPHA_AMD = 35987;

  /// from: static public final int GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD
  static const GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD = 34798;

  /// from: static public final int GL_ATC_RGB_AMD
  static const GL_ATC_RGB_AMD = 35986;

  /// from: static public final int GL_BGRA
  static const GL_BGRA = 32993;

  /// from: static public final int GL_BLEND_DST_ALPHA_OES
  static const GL_BLEND_DST_ALPHA_OES = 32970;

  /// from: static public final int GL_BLEND_DST_RGB_OES
  static const GL_BLEND_DST_RGB_OES = 32968;

  /// from: static public final int GL_BLEND_EQUATION_ALPHA_OES
  static const GL_BLEND_EQUATION_ALPHA_OES = 34877;

  /// from: static public final int GL_BLEND_EQUATION_OES
  static const GL_BLEND_EQUATION_OES = 32777;

  /// from: static public final int GL_BLEND_EQUATION_RGB_OES
  static const GL_BLEND_EQUATION_RGB_OES = 32777;

  /// from: static public final int GL_BLEND_SRC_ALPHA_OES
  static const GL_BLEND_SRC_ALPHA_OES = 32971;

  /// from: static public final int GL_BLEND_SRC_RGB_OES
  static const GL_BLEND_SRC_RGB_OES = 32969;

  /// from: static public final int GL_BUFFER_ACCESS_OES
  static const GL_BUFFER_ACCESS_OES = 35003;

  /// from: static public final int GL_BUFFER_MAPPED_OES
  static const GL_BUFFER_MAPPED_OES = 35004;

  /// from: static public final int GL_BUFFER_MAP_POINTER_OES
  static const GL_BUFFER_MAP_POINTER_OES = 35005;

  /// from: static public final int GL_COLOR_ATTACHMENT0_OES
  static const GL_COLOR_ATTACHMENT0_OES = 36064;

  /// from: static public final int GL_CURRENT_PALETTE_MATRIX_OES
  static const GL_CURRENT_PALETTE_MATRIX_OES = 34883;

  /// from: static public final int GL_DECR_WRAP_OES
  static const GL_DECR_WRAP_OES = 34056;

  /// from: static public final int GL_DEPTH24_STENCIL8_OES
  static const GL_DEPTH24_STENCIL8_OES = 35056;

  /// from: static public final int GL_DEPTH_ATTACHMENT_OES
  static const GL_DEPTH_ATTACHMENT_OES = 36096;

  /// from: static public final int GL_DEPTH_COMPONENT16_OES
  static const GL_DEPTH_COMPONENT16_OES = 33189;

  /// from: static public final int GL_DEPTH_COMPONENT24_OES
  static const GL_DEPTH_COMPONENT24_OES = 33190;

  /// from: static public final int GL_DEPTH_COMPONENT32_OES
  static const GL_DEPTH_COMPONENT32_OES = 33191;

  /// from: static public final int GL_DEPTH_STENCIL_OES
  static const GL_DEPTH_STENCIL_OES = 34041;

  /// from: static public final int GL_ETC1_RGB8_OES
  static const GL_ETC1_RGB8_OES = 36196;

  /// from: static public final int GL_FIXED_OES
  static const GL_FIXED_OES = 5132;

  /// from: static public final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES
  static const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES = 36049;

  /// from: static public final int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES
  static const GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES = 36048;

  /// from: static public final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES
  static const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES = 36051;

  /// from: static public final int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES
  static const GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES = 36050;

  /// from: static public final int GL_FRAMEBUFFER_BINDING_OES
  static const GL_FRAMEBUFFER_BINDING_OES = 36006;

  /// from: static public final int GL_FRAMEBUFFER_COMPLETE_OES
  static const GL_FRAMEBUFFER_COMPLETE_OES = 36053;

  /// from: static public final int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES
  static const GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES = 36054;

  /// from: static public final int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES
  static const GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES = 36057;

  /// from: static public final int GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES
  static const GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES = 36058;

  /// from: static public final int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES
  static const GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES = 36055;

  /// from: static public final int GL_FRAMEBUFFER_OES
  static const GL_FRAMEBUFFER_OES = 36160;

  /// from: static public final int GL_FRAMEBUFFER_UNSUPPORTED_OES
  static const GL_FRAMEBUFFER_UNSUPPORTED_OES = 36061;

  /// from: static public final int GL_FUNC_ADD_OES
  static const GL_FUNC_ADD_OES = 32774;

  /// from: static public final int GL_FUNC_REVERSE_SUBTRACT_OES
  static const GL_FUNC_REVERSE_SUBTRACT_OES = 32779;

  /// from: static public final int GL_FUNC_SUBTRACT_OES
  static const GL_FUNC_SUBTRACT_OES = 32778;

  /// from: static public final int GL_INCR_WRAP_OES
  static const GL_INCR_WRAP_OES = 34055;

  /// from: static public final int GL_INVALID_FRAMEBUFFER_OPERATION_OES
  static const GL_INVALID_FRAMEBUFFER_OPERATION_OES = 1286;

  /// from: static public final int GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES
  static const GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES = 35742;

  /// from: static public final int GL_MATRIX_INDEX_ARRAY_OES
  static const GL_MATRIX_INDEX_ARRAY_OES = 34884;

  /// from: static public final int GL_MATRIX_INDEX_ARRAY_POINTER_OES
  static const GL_MATRIX_INDEX_ARRAY_POINTER_OES = 34889;

  /// from: static public final int GL_MATRIX_INDEX_ARRAY_SIZE_OES
  static const GL_MATRIX_INDEX_ARRAY_SIZE_OES = 34886;

  /// from: static public final int GL_MATRIX_INDEX_ARRAY_STRIDE_OES
  static const GL_MATRIX_INDEX_ARRAY_STRIDE_OES = 34888;

  /// from: static public final int GL_MATRIX_INDEX_ARRAY_TYPE_OES
  static const GL_MATRIX_INDEX_ARRAY_TYPE_OES = 34887;

  /// from: static public final int GL_MATRIX_PALETTE_OES
  static const GL_MATRIX_PALETTE_OES = 34880;

  /// from: static public final int GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES
  static const GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES = 34076;

  /// from: static public final int GL_MAX_PALETTE_MATRICES_OES
  static const GL_MAX_PALETTE_MATRICES_OES = 34882;

  /// from: static public final int GL_MAX_RENDERBUFFER_SIZE_OES
  static const GL_MAX_RENDERBUFFER_SIZE_OES = 34024;

  /// from: static public final int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
  static const GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 34047;

  /// from: static public final int GL_MAX_VERTEX_UNITS_OES
  static const GL_MAX_VERTEX_UNITS_OES = 34468;

  /// from: static public final int GL_MIRRORED_REPEAT_OES
  static const GL_MIRRORED_REPEAT_OES = 33648;

  /// from: static public final int GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES
  static const GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES = 35213;

  /// from: static public final int GL_NONE_OES
  static const GL_NONE_OES = 0;

  /// from: static public final int GL_NORMAL_MAP_OES
  static const GL_NORMAL_MAP_OES = 34065;

  /// from: static public final int GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES
  static const GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES = 35214;

  /// from: static public final int GL_REFLECTION_MAP_OES
  static const GL_REFLECTION_MAP_OES = 34066;

  /// from: static public final int GL_RENDERBUFFER_ALPHA_SIZE_OES
  static const GL_RENDERBUFFER_ALPHA_SIZE_OES = 36179;

  /// from: static public final int GL_RENDERBUFFER_BINDING_OES
  static const GL_RENDERBUFFER_BINDING_OES = 36007;

  /// from: static public final int GL_RENDERBUFFER_BLUE_SIZE_OES
  static const GL_RENDERBUFFER_BLUE_SIZE_OES = 36178;

  /// from: static public final int GL_RENDERBUFFER_DEPTH_SIZE_OES
  static const GL_RENDERBUFFER_DEPTH_SIZE_OES = 36180;

  /// from: static public final int GL_RENDERBUFFER_GREEN_SIZE_OES
  static const GL_RENDERBUFFER_GREEN_SIZE_OES = 36177;

  /// from: static public final int GL_RENDERBUFFER_HEIGHT_OES
  static const GL_RENDERBUFFER_HEIGHT_OES = 36163;

  /// from: static public final int GL_RENDERBUFFER_INTERNAL_FORMAT_OES
  static const GL_RENDERBUFFER_INTERNAL_FORMAT_OES = 36164;

  /// from: static public final int GL_RENDERBUFFER_OES
  static const GL_RENDERBUFFER_OES = 36161;

  /// from: static public final int GL_RENDERBUFFER_RED_SIZE_OES
  static const GL_RENDERBUFFER_RED_SIZE_OES = 36176;

  /// from: static public final int GL_RENDERBUFFER_STENCIL_SIZE_OES
  static const GL_RENDERBUFFER_STENCIL_SIZE_OES = 36181;

  /// from: static public final int GL_RENDERBUFFER_WIDTH_OES
  static const GL_RENDERBUFFER_WIDTH_OES = 36162;

  /// from: static public final int GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES
  static const GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES = 36200;

  /// from: static public final int GL_RGB565_OES
  static const GL_RGB565_OES = 36194;

  /// from: static public final int GL_RGB5_A1_OES
  static const GL_RGB5_A1_OES = 32855;

  /// from: static public final int GL_RGB8_OES
  static const GL_RGB8_OES = 32849;

  /// from: static public final int GL_RGBA4_OES
  static const GL_RGBA4_OES = 32854;

  /// from: static public final int GL_RGBA8_OES
  static const GL_RGBA8_OES = 32856;

  /// from: static public final int GL_SAMPLER_EXTERNAL_OES
  static const GL_SAMPLER_EXTERNAL_OES = 36198;

  /// from: static public final int GL_STENCIL_ATTACHMENT_OES
  static const GL_STENCIL_ATTACHMENT_OES = 36128;

  /// from: static public final int GL_STENCIL_INDEX1_OES
  static const GL_STENCIL_INDEX1_OES = 36166;

  /// from: static public final int GL_STENCIL_INDEX4_OES
  static const GL_STENCIL_INDEX4_OES = 36167;

  /// from: static public final int GL_STENCIL_INDEX8_OES
  static const GL_STENCIL_INDEX8_OES = 36168;

  /// from: static public final int GL_TEXTURE_BINDING_CUBE_MAP_OES
  static const GL_TEXTURE_BINDING_CUBE_MAP_OES = 34068;

  /// from: static public final int GL_TEXTURE_BINDING_EXTERNAL_OES
  static const GL_TEXTURE_BINDING_EXTERNAL_OES = 36199;

  /// from: static public final int GL_TEXTURE_CROP_RECT_OES
  static const GL_TEXTURE_CROP_RECT_OES = 35741;

  /// from: static public final int GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES
  static const GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES = 34070;

  /// from: static public final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES
  static const GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES = 34072;

  /// from: static public final int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES
  static const GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES = 34074;

  /// from: static public final int GL_TEXTURE_CUBE_MAP_OES
  static const GL_TEXTURE_CUBE_MAP_OES = 34067;

  /// from: static public final int GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES
  static const GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES = 34069;

  /// from: static public final int GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES
  static const GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES = 34071;

  /// from: static public final int GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES
  static const GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES = 34073;

  /// from: static public final int GL_TEXTURE_EXTERNAL_OES
  static const GL_TEXTURE_EXTERNAL_OES = 36197;

  /// from: static public final int GL_TEXTURE_GEN_MODE_OES
  static const GL_TEXTURE_GEN_MODE_OES = 9472;

  /// from: static public final int GL_TEXTURE_GEN_STR_OES
  static const GL_TEXTURE_GEN_STR_OES = 36192;

  /// from: static public final int GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES
  static const GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES = 35215;

  /// from: static public final int GL_TEXTURE_MAX_ANISOTROPY_EXT
  static const GL_TEXTURE_MAX_ANISOTROPY_EXT = 34046;

  /// from: static public final int GL_UNSIGNED_INT_24_8_OES
  static const GL_UNSIGNED_INT_24_8_OES = 34042;

  /// from: static public final int GL_WEIGHT_ARRAY_BUFFER_BINDING_OES
  static const GL_WEIGHT_ARRAY_BUFFER_BINDING_OES = 34974;

  /// from: static public final int GL_WEIGHT_ARRAY_OES
  static const GL_WEIGHT_ARRAY_OES = 34477;

  /// from: static public final int GL_WEIGHT_ARRAY_POINTER_OES
  static const GL_WEIGHT_ARRAY_POINTER_OES = 34476;

  /// from: static public final int GL_WEIGHT_ARRAY_SIZE_OES
  static const GL_WEIGHT_ARRAY_SIZE_OES = 34475;

  /// from: static public final int GL_WEIGHT_ARRAY_STRIDE_OES
  static const GL_WEIGHT_ARRAY_STRIDE_OES = 34474;

  /// from: static public final int GL_WEIGHT_ARRAY_TYPE_OES
  static const GL_WEIGHT_ARRAY_TYPE_OES = 34473;

  /// from: static public final int GL_WRITE_ONLY_OES
  static const GL_WRITE_ONLY_OES = 35001;

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: public void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  GLES11Ext()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_glBlendEquationSeparateOES = jniAccessors
      .getStaticMethodIDOf(_classRef, "glBlendEquationSeparateOES", "(II)V");

  /// from: static public native void glBlendEquationSeparateOES(int modeRGB, int modeAlpha)
  static void glBlendEquationSeparateOES(int modeRGB, int modeAlpha) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glBlendEquationSeparateOES,
          jni.JniType.voidType,
          [modeRGB, modeAlpha]).check();

  static final _id_glBlendFuncSeparateOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glBlendFuncSeparateOES", "(IIII)V");

  /// from: static public native void glBlendFuncSeparateOES(int srcRGB, int dstRGB, int srcAlpha, int dstAlpha)
  static void glBlendFuncSeparateOES(
          int srcRGB, int dstRGB, int srcAlpha, int dstAlpha) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glBlendFuncSeparateOES,
          jni.JniType.voidType,
          [srcRGB, dstRGB, srcAlpha, dstAlpha]).check();

  static final _id_glBlendEquationOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glBlendEquationOES", "(I)V");

  /// from: static public native void glBlendEquationOES(int mode)
  static void glBlendEquationOES(int mode) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glBlendEquationOES,
          jni.JniType.voidType, [mode]).check();

  static final _id_glDrawTexsOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glDrawTexsOES", "(SSSSS)V");

  /// from: static public native void glDrawTexsOES(short x, short y, short z, short width, short height)
  static void glDrawTexsOES(int x, int y, int z, int width, int height) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glDrawTexsOES,
          jni.JniType.voidType, [x, y, z, width, height]).check();

  static final _id_glDrawTexiOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glDrawTexiOES", "(IIIII)V");

  /// from: static public native void glDrawTexiOES(int x, int y, int z, int width, int height)
  static void glDrawTexiOES(int x, int y, int z, int width, int height) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glDrawTexiOES,
          jni.JniType.voidType, [x, y, z, width, height]).check();

  static final _id_glDrawTexxOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glDrawTexxOES", "(IIIII)V");

  /// from: static public native void glDrawTexxOES(int x, int y, int z, int width, int height)
  static void glDrawTexxOES(int x, int y, int z, int width, int height) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glDrawTexxOES,
          jni.JniType.voidType, [x, y, z, width, height]).check();

  static final _id_glDrawTexsvOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glDrawTexsvOES", "([SI)V");

  /// from: static public native void glDrawTexsvOES(short[] coords, int offset)
  static void glDrawTexsvOES(jni.JniObject coords, int offset) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glDrawTexsvOES,
          jni.JniType.voidType, [coords.reference, offset]).check();

  static final _id_glDrawTexsvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glDrawTexsvOES", "(Ljava/nio/ShortBuffer;)V");

  /// from: static public native void glDrawTexsvOES(java.nio.ShortBuffer coords)
  static void glDrawTexsvOES1(jni.JniObject coords) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glDrawTexsvOES1,
          jni.JniType.voidType, [coords.reference]).check();

  static final _id_glDrawTexivOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glDrawTexivOES", "([II)V");

  /// from: static public native void glDrawTexivOES(int[] coords, int offset)
  static void glDrawTexivOES(jni.JniObject coords, int offset) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glDrawTexivOES,
          jni.JniType.voidType, [coords.reference, offset]).check();

  static final _id_glDrawTexivOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glDrawTexivOES", "(Ljava/nio/IntBuffer;)V");

  /// from: static public native void glDrawTexivOES(java.nio.IntBuffer coords)
  static void glDrawTexivOES1(jni.JniObject coords) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glDrawTexivOES1,
          jni.JniType.voidType, [coords.reference]).check();

  static final _id_glDrawTexxvOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glDrawTexxvOES", "([II)V");

  /// from: static public native void glDrawTexxvOES(int[] coords, int offset)
  static void glDrawTexxvOES(jni.JniObject coords, int offset) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glDrawTexxvOES,
          jni.JniType.voidType, [coords.reference, offset]).check();

  static final _id_glDrawTexxvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glDrawTexxvOES", "(Ljava/nio/IntBuffer;)V");

  /// from: static public native void glDrawTexxvOES(java.nio.IntBuffer coords)
  static void glDrawTexxvOES1(jni.JniObject coords) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glDrawTexxvOES1,
          jni.JniType.voidType, [coords.reference]).check();

  static final _id_glDrawTexfOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glDrawTexfOES", "(FFFFF)V");

  /// from: static public native void glDrawTexfOES(float x, float y, float z, float width, float height)
  static void glDrawTexfOES(
          double x, double y, double z, double width, double height) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glDrawTexfOES,
          jni.JniType.voidType, [x, y, z, width, height]).check();

  static final _id_glDrawTexfvOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glDrawTexfvOES", "([FI)V");

  /// from: static public native void glDrawTexfvOES(float[] coords, int offset)
  static void glDrawTexfvOES(jni.JniObject coords, int offset) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glDrawTexfvOES,
          jni.JniType.voidType, [coords.reference, offset]).check();

  static final _id_glDrawTexfvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glDrawTexfvOES", "(Ljava/nio/FloatBuffer;)V");

  /// from: static public native void glDrawTexfvOES(java.nio.FloatBuffer coords)
  static void glDrawTexfvOES1(jni.JniObject coords) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glDrawTexfvOES1,
          jni.JniType.voidType, [coords.reference]).check();

  static final _id_glEGLImageTargetTexture2DOES =
      jniAccessors.getStaticMethodIDOf(
          _classRef, "glEGLImageTargetTexture2DOES", "(ILjava/nio/Buffer;)V");

  /// from: static public native void glEGLImageTargetTexture2DOES(int target, java.nio.Buffer image)
  static void glEGLImageTargetTexture2DOES(int target, jni.JniObject image) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glEGLImageTargetTexture2DOES,
          jni.JniType.voidType,
          [target, image.reference]).check();

  static final _id_glEGLImageTargetRenderbufferStorageOES =
      jniAccessors.getStaticMethodIDOf(_classRef,
          "glEGLImageTargetRenderbufferStorageOES", "(ILjava/nio/Buffer;)V");

  /// from: static public native void glEGLImageTargetRenderbufferStorageOES(int target, java.nio.Buffer image)
  static void glEGLImageTargetRenderbufferStorageOES(
          int target, jni.JniObject image) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glEGLImageTargetRenderbufferStorageOES,
          jni.JniType.voidType,
          [target, image.reference]).check();

  static final _id_glAlphaFuncxOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glAlphaFuncxOES", "(II)V");

  /// from: static public native void glAlphaFuncxOES(int func, int ref)
  static void glAlphaFuncxOES(int func, int ref) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glAlphaFuncxOES,
          jni.JniType.voidType, [func, ref]).check();

  static final _id_glClearColorxOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glClearColorxOES", "(IIII)V");

  /// from: static public native void glClearColorxOES(int red, int green, int blue, int alpha)
  static void glClearColorxOES(int red, int green, int blue, int alpha) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glClearColorxOES,
          jni.JniType.voidType, [red, green, blue, alpha]).check();

  static final _id_glClearDepthxOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glClearDepthxOES", "(I)V");

  /// from: static public native void glClearDepthxOES(int depth)
  static void glClearDepthxOES(int depth) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glClearDepthxOES,
          jni.JniType.voidType, [depth]).check();

  static final _id_glClipPlanexOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glClipPlanexOES", "(I[II)V");

  /// from: static public native void glClipPlanexOES(int plane, int[] equation, int offset)
  static void glClipPlanexOES(int plane, jni.JniObject equation, int offset) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glClipPlanexOES,
          jni.JniType.voidType, [plane, equation.reference, offset]).check();

  static final _id_glClipPlanexOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glClipPlanexOES", "(ILjava/nio/IntBuffer;)V");

  /// from: static public native void glClipPlanexOES(int plane, java.nio.IntBuffer equation)
  static void glClipPlanexOES1(int plane, jni.JniObject equation) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glClipPlanexOES1,
          jni.JniType.voidType, [plane, equation.reference]).check();

  static final _id_glColor4xOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glColor4xOES", "(IIII)V");

  /// from: static public native void glColor4xOES(int red, int green, int blue, int alpha)
  static void glColor4xOES(int red, int green, int blue, int alpha) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glColor4xOES,
          jni.JniType.voidType, [red, green, blue, alpha]).check();

  static final _id_glDepthRangexOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glDepthRangexOES", "(II)V");

  /// from: static public native void glDepthRangexOES(int zNear, int zFar)
  static void glDepthRangexOES(int zNear, int zFar) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glDepthRangexOES,
          jni.JniType.voidType, [zNear, zFar]).check();

  static final _id_glFogxOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glFogxOES", "(II)V");

  /// from: static public native void glFogxOES(int pname, int param)
  static void glFogxOES(int pname, int param) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glFogxOES,
          jni.JniType.voidType, [pname, param]).check();

  static final _id_glFogxvOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glFogxvOES", "(I[II)V");

  /// from: static public native void glFogxvOES(int pname, int[] params, int offset)
  static void glFogxvOES(int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glFogxvOES,
          jni.JniType.voidType, [pname, params.reference, offset]).check();

  static final _id_glFogxvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glFogxvOES", "(ILjava/nio/IntBuffer;)V");

  /// from: static public native void glFogxvOES(int pname, java.nio.IntBuffer params)
  static void glFogxvOES1(int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glFogxvOES1,
          jni.JniType.voidType, [pname, params.reference]).check();

  static final _id_glFrustumxOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glFrustumxOES", "(IIIIII)V");

  /// from: static public native void glFrustumxOES(int left, int right, int bottom, int top, int zNear, int zFar)
  static void glFrustumxOES(
          int left, int right, int bottom, int top, int zNear, int zFar) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glFrustumxOES,
          jni.JniType.voidType,
          [left, right, bottom, top, zNear, zFar]).check();

  static final _id_glGetClipPlanexOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetClipPlanexOES", "(I[II)V");

  /// from: static public native void glGetClipPlanexOES(int pname, int[] eqn, int offset)
  static void glGetClipPlanexOES(int pname, jni.JniObject eqn, int offset) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glGetClipPlanexOES,
          jni.JniType.voidType, [pname, eqn.reference, offset]).check();

  static final _id_glGetClipPlanexOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetClipPlanexOES", "(ILjava/nio/IntBuffer;)V");

  /// from: static public native void glGetClipPlanexOES(int pname, java.nio.IntBuffer eqn)
  static void glGetClipPlanexOES1(int pname, jni.JniObject eqn) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glGetClipPlanexOES1,
          jni.JniType.voidType, [pname, eqn.reference]).check();

  static final _id_glGetFixedvOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glGetFixedvOES", "(I[II)V");

  /// from: static public native void glGetFixedvOES(int pname, int[] params, int offset)
  static void glGetFixedvOES(int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glGetFixedvOES,
          jni.JniType.voidType, [pname, params.reference, offset]).check();

  static final _id_glGetFixedvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetFixedvOES", "(ILjava/nio/IntBuffer;)V");

  /// from: static public native void glGetFixedvOES(int pname, java.nio.IntBuffer params)
  static void glGetFixedvOES1(int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glGetFixedvOES1,
          jni.JniType.voidType, [pname, params.reference]).check();

  static final _id_glGetLightxvOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetLightxvOES", "(II[II)V");

  /// from: static public native void glGetLightxvOES(int light, int pname, int[] params, int offset)
  static void glGetLightxvOES(
          int light, int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glGetLightxvOES,
          jni.JniType.voidType,
          [light, pname, params.reference, offset]).check();

  static final _id_glGetLightxvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetLightxvOES", "(IILjava/nio/IntBuffer;)V");

  /// from: static public native void glGetLightxvOES(int light, int pname, java.nio.IntBuffer params)
  static void glGetLightxvOES1(int light, int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glGetLightxvOES1,
          jni.JniType.voidType, [light, pname, params.reference]).check();

  static final _id_glGetMaterialxvOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetMaterialxvOES", "(II[II)V");

  /// from: static public native void glGetMaterialxvOES(int face, int pname, int[] params, int offset)
  static void glGetMaterialxvOES(
          int face, int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glGetMaterialxvOES,
          jni.JniType.voidType,
          [face, pname, params.reference, offset]).check();

  static final _id_glGetMaterialxvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetMaterialxvOES", "(IILjava/nio/IntBuffer;)V");

  /// from: static public native void glGetMaterialxvOES(int face, int pname, java.nio.IntBuffer params)
  static void glGetMaterialxvOES1(int face, int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glGetMaterialxvOES1,
          jni.JniType.voidType, [face, pname, params.reference]).check();

  static final _id_glGetTexEnvxvOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetTexEnvxvOES", "(II[II)V");

  /// from: static public native void glGetTexEnvxvOES(int env, int pname, int[] params, int offset)
  static void glGetTexEnvxvOES(
          int env, int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glGetTexEnvxvOES,
          jni.JniType.voidType, [env, pname, params.reference, offset]).check();

  static final _id_glGetTexEnvxvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetTexEnvxvOES", "(IILjava/nio/IntBuffer;)V");

  /// from: static public native void glGetTexEnvxvOES(int env, int pname, java.nio.IntBuffer params)
  static void glGetTexEnvxvOES1(int env, int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glGetTexEnvxvOES1,
          jni.JniType.voidType, [env, pname, params.reference]).check();

  static final _id_glGetTexParameterxvOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetTexParameterxvOES", "(II[II)V");

  /// from: static public native void glGetTexParameterxvOES(int target, int pname, int[] params, int offset)
  static void glGetTexParameterxvOES(
          int target, int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glGetTexParameterxvOES,
          jni.JniType.voidType,
          [target, pname, params.reference, offset]).check();

  static final _id_glGetTexParameterxvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetTexParameterxvOES", "(IILjava/nio/IntBuffer;)V");

  /// from: static public native void glGetTexParameterxvOES(int target, int pname, java.nio.IntBuffer params)
  static void glGetTexParameterxvOES1(
          int target, int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glGetTexParameterxvOES1,
          jni.JniType.voidType,
          [target, pname, params.reference]).check();

  static final _id_glLightModelxOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glLightModelxOES", "(II)V");

  /// from: static public native void glLightModelxOES(int pname, int param)
  static void glLightModelxOES(int pname, int param) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glLightModelxOES,
          jni.JniType.voidType, [pname, param]).check();

  static final _id_glLightModelxvOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glLightModelxvOES", "(I[II)V");

  /// from: static public native void glLightModelxvOES(int pname, int[] params, int offset)
  static void glLightModelxvOES(int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glLightModelxvOES,
          jni.JniType.voidType, [pname, params.reference, offset]).check();

  static final _id_glLightModelxvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glLightModelxvOES", "(ILjava/nio/IntBuffer;)V");

  /// from: static public native void glLightModelxvOES(int pname, java.nio.IntBuffer params)
  static void glLightModelxvOES1(int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glLightModelxvOES1,
          jni.JniType.voidType, [pname, params.reference]).check();

  static final _id_glLightxOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glLightxOES", "(III)V");

  /// from: static public native void glLightxOES(int light, int pname, int param)
  static void glLightxOES(int light, int pname, int param) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glLightxOES,
          jni.JniType.voidType, [light, pname, param]).check();

  static final _id_glLightxvOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glLightxvOES", "(II[II)V");

  /// from: static public native void glLightxvOES(int light, int pname, int[] params, int offset)
  static void glLightxvOES(
          int light, int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glLightxvOES,
          jni.JniType.voidType,
          [light, pname, params.reference, offset]).check();

  static final _id_glLightxvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glLightxvOES", "(IILjava/nio/IntBuffer;)V");

  /// from: static public native void glLightxvOES(int light, int pname, java.nio.IntBuffer params)
  static void glLightxvOES1(int light, int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glLightxvOES1,
          jni.JniType.voidType, [light, pname, params.reference]).check();

  static final _id_glLineWidthxOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glLineWidthxOES", "(I)V");

  /// from: static public native void glLineWidthxOES(int width)
  static void glLineWidthxOES(int width) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glLineWidthxOES,
          jni.JniType.voidType, [width]).check();

  static final _id_glLoadMatrixxOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glLoadMatrixxOES", "([II)V");

  /// from: static public native void glLoadMatrixxOES(int[] m, int offset)
  static void glLoadMatrixxOES(jni.JniObject m, int offset) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glLoadMatrixxOES,
          jni.JniType.voidType, [m.reference, offset]).check();

  static final _id_glLoadMatrixxOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glLoadMatrixxOES", "(Ljava/nio/IntBuffer;)V");

  /// from: static public native void glLoadMatrixxOES(java.nio.IntBuffer m)
  static void glLoadMatrixxOES1(jni.JniObject m) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glLoadMatrixxOES1,
          jni.JniType.voidType, [m.reference]).check();

  static final _id_glMaterialxOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glMaterialxOES", "(III)V");

  /// from: static public native void glMaterialxOES(int face, int pname, int param)
  static void glMaterialxOES(int face, int pname, int param) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glMaterialxOES,
          jni.JniType.voidType, [face, pname, param]).check();

  static final _id_glMaterialxvOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glMaterialxvOES", "(II[II)V");

  /// from: static public native void glMaterialxvOES(int face, int pname, int[] params, int offset)
  static void glMaterialxvOES(
          int face, int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glMaterialxvOES,
          jni.JniType.voidType,
          [face, pname, params.reference, offset]).check();

  static final _id_glMaterialxvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glMaterialxvOES", "(IILjava/nio/IntBuffer;)V");

  /// from: static public native void glMaterialxvOES(int face, int pname, java.nio.IntBuffer params)
  static void glMaterialxvOES1(int face, int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glMaterialxvOES1,
          jni.JniType.voidType, [face, pname, params.reference]).check();

  static final _id_glMultMatrixxOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glMultMatrixxOES", "([II)V");

  /// from: static public native void glMultMatrixxOES(int[] m, int offset)
  static void glMultMatrixxOES(jni.JniObject m, int offset) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glMultMatrixxOES,
          jni.JniType.voidType, [m.reference, offset]).check();

  static final _id_glMultMatrixxOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glMultMatrixxOES", "(Ljava/nio/IntBuffer;)V");

  /// from: static public native void glMultMatrixxOES(java.nio.IntBuffer m)
  static void glMultMatrixxOES1(jni.JniObject m) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glMultMatrixxOES1,
          jni.JniType.voidType, [m.reference]).check();

  static final _id_glMultiTexCoord4xOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glMultiTexCoord4xOES", "(IIIII)V");

  /// from: static public native void glMultiTexCoord4xOES(int target, int s, int t, int r, int q)
  static void glMultiTexCoord4xOES(int target, int s, int t, int r, int q) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glMultiTexCoord4xOES,
          jni.JniType.voidType, [target, s, t, r, q]).check();

  static final _id_glNormal3xOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glNormal3xOES", "(III)V");

  /// from: static public native void glNormal3xOES(int nx, int ny, int nz)
  static void glNormal3xOES(int nx, int ny, int nz) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glNormal3xOES,
          jni.JniType.voidType, [nx, ny, nz]).check();

  static final _id_glOrthoxOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glOrthoxOES", "(IIIIII)V");

  /// from: static public native void glOrthoxOES(int left, int right, int bottom, int top, int zNear, int zFar)
  static void glOrthoxOES(
          int left, int right, int bottom, int top, int zNear, int zFar) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glOrthoxOES,
          jni.JniType.voidType,
          [left, right, bottom, top, zNear, zFar]).check();

  static final _id_glPointParameterxOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glPointParameterxOES", "(II)V");

  /// from: static public native void glPointParameterxOES(int pname, int param)
  static void glPointParameterxOES(int pname, int param) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glPointParameterxOES,
          jni.JniType.voidType, [pname, param]).check();

  static final _id_glPointParameterxvOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glPointParameterxvOES", "(I[II)V");

  /// from: static public native void glPointParameterxvOES(int pname, int[] params, int offset)
  static void glPointParameterxvOES(
          int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glPointParameterxvOES,
          jni.JniType.voidType,
          [pname, params.reference, offset]).check();

  static final _id_glPointParameterxvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glPointParameterxvOES", "(ILjava/nio/IntBuffer;)V");

  /// from: static public native void glPointParameterxvOES(int pname, java.nio.IntBuffer params)
  static void glPointParameterxvOES1(int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glPointParameterxvOES1,
          jni.JniType.voidType,
          [pname, params.reference]).check();

  static final _id_glPointSizexOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glPointSizexOES", "(I)V");

  /// from: static public native void glPointSizexOES(int size)
  static void glPointSizexOES(int size) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_glPointSizexOES, jni.JniType.voidType, [size]).check();

  static final _id_glPolygonOffsetxOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glPolygonOffsetxOES", "(II)V");

  /// from: static public native void glPolygonOffsetxOES(int factor, int units)
  static void glPolygonOffsetxOES(int factor, int units) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glPolygonOffsetxOES,
          jni.JniType.voidType, [factor, units]).check();

  static final _id_glRotatexOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glRotatexOES", "(IIII)V");

  /// from: static public native void glRotatexOES(int angle, int x, int y, int z)
  static void glRotatexOES(int angle, int x, int y, int z) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glRotatexOES,
          jni.JniType.voidType, [angle, x, y, z]).check();

  static final _id_glSampleCoveragexOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glSampleCoveragexOES", "(IZ)V");

  /// from: static public native void glSampleCoveragexOES(int value, boolean invert)
  static void glSampleCoveragexOES(int value, bool invert) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glSampleCoveragexOES,
          jni.JniType.voidType, [value, invert]).check();

  static final _id_glScalexOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glScalexOES", "(III)V");

  /// from: static public native void glScalexOES(int x, int y, int z)
  static void glScalexOES(int x, int y, int z) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_glScalexOES, jni.JniType.voidType, [x, y, z]).check();

  static final _id_glTexEnvxOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glTexEnvxOES", "(III)V");

  /// from: static public native void glTexEnvxOES(int target, int pname, int param)
  static void glTexEnvxOES(int target, int pname, int param) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glTexEnvxOES,
          jni.JniType.voidType, [target, pname, param]).check();

  static final _id_glTexEnvxvOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glTexEnvxvOES", "(II[II)V");

  /// from: static public native void glTexEnvxvOES(int target, int pname, int[] params, int offset)
  static void glTexEnvxvOES(
          int target, int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glTexEnvxvOES,
          jni.JniType.voidType,
          [target, pname, params.reference, offset]).check();

  static final _id_glTexEnvxvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glTexEnvxvOES", "(IILjava/nio/IntBuffer;)V");

  /// from: static public native void glTexEnvxvOES(int target, int pname, java.nio.IntBuffer params)
  static void glTexEnvxvOES1(int target, int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glTexEnvxvOES1,
          jni.JniType.voidType, [target, pname, params.reference]).check();

  static final _id_glTexParameterxOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glTexParameterxOES", "(III)V");

  /// from: static public native void glTexParameterxOES(int target, int pname, int param)
  static void glTexParameterxOES(int target, int pname, int param) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glTexParameterxOES,
          jni.JniType.voidType, [target, pname, param]).check();

  static final _id_glTexParameterxvOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glTexParameterxvOES", "(II[II)V");

  /// from: static public native void glTexParameterxvOES(int target, int pname, int[] params, int offset)
  static void glTexParameterxvOES(
          int target, int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glTexParameterxvOES,
          jni.JniType.voidType,
          [target, pname, params.reference, offset]).check();

  static final _id_glTexParameterxvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glTexParameterxvOES", "(IILjava/nio/IntBuffer;)V");

  /// from: static public native void glTexParameterxvOES(int target, int pname, java.nio.IntBuffer params)
  static void glTexParameterxvOES1(
          int target, int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glTexParameterxvOES1,
          jni.JniType.voidType, [target, pname, params.reference]).check();

  static final _id_glTranslatexOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glTranslatexOES", "(III)V");

  /// from: static public native void glTranslatexOES(int x, int y, int z)
  static void glTranslatexOES(int x, int y, int z) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glTranslatexOES,
          jni.JniType.voidType, [x, y, z]).check();

  static final _id_glIsRenderbufferOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glIsRenderbufferOES", "(I)Z");

  /// from: static public native boolean glIsRenderbufferOES(int renderbuffer)
  static bool glIsRenderbufferOES(int renderbuffer) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glIsRenderbufferOES,
          jni.JniType.booleanType, [renderbuffer]).boolean;

  static final _id_glBindRenderbufferOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glBindRenderbufferOES", "(II)V");

  /// from: static public native void glBindRenderbufferOES(int target, int renderbuffer)
  static void glBindRenderbufferOES(int target, int renderbuffer) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glBindRenderbufferOES,
          jni.JniType.voidType,
          [target, renderbuffer]).check();

  static final _id_glDeleteRenderbuffersOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glDeleteRenderbuffersOES", "(I[II)V");

  /// from: static public native void glDeleteRenderbuffersOES(int n, int[] renderbuffers, int offset)
  static void glDeleteRenderbuffersOES(
          int n, jni.JniObject renderbuffers, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glDeleteRenderbuffersOES,
          jni.JniType.voidType,
          [n, renderbuffers.reference, offset]).check();

  static final _id_glDeleteRenderbuffersOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glDeleteRenderbuffersOES", "(ILjava/nio/IntBuffer;)V");

  /// from: static public native void glDeleteRenderbuffersOES(int n, java.nio.IntBuffer renderbuffers)
  static void glDeleteRenderbuffersOES1(int n, jni.JniObject renderbuffers) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glDeleteRenderbuffersOES1,
          jni.JniType.voidType,
          [n, renderbuffers.reference]).check();

  static final _id_glGenRenderbuffersOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGenRenderbuffersOES", "(I[II)V");

  /// from: static public native void glGenRenderbuffersOES(int n, int[] renderbuffers, int offset)
  static void glGenRenderbuffersOES(
          int n, jni.JniObject renderbuffers, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glGenRenderbuffersOES,
          jni.JniType.voidType,
          [n, renderbuffers.reference, offset]).check();

  static final _id_glGenRenderbuffersOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGenRenderbuffersOES", "(ILjava/nio/IntBuffer;)V");

  /// from: static public native void glGenRenderbuffersOES(int n, java.nio.IntBuffer renderbuffers)
  static void glGenRenderbuffersOES1(int n, jni.JniObject renderbuffers) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glGenRenderbuffersOES1,
          jni.JniType.voidType,
          [n, renderbuffers.reference]).check();

  static final _id_glRenderbufferStorageOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glRenderbufferStorageOES", "(IIII)V");

  /// from: static public native void glRenderbufferStorageOES(int target, int internalformat, int width, int height)
  static void glRenderbufferStorageOES(
          int target, int internalformat, int width, int height) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glRenderbufferStorageOES,
          jni.JniType.voidType,
          [target, internalformat, width, height]).check();

  static final _id_glGetRenderbufferParameterivOES =
      jniAccessors.getStaticMethodIDOf(
          _classRef, "glGetRenderbufferParameterivOES", "(II[II)V");

  /// from: static public native void glGetRenderbufferParameterivOES(int target, int pname, int[] params, int offset)
  static void glGetRenderbufferParameterivOES(
          int target, int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glGetRenderbufferParameterivOES,
          jni.JniType.voidType,
          [target, pname, params.reference, offset]).check();

  static final _id_glGetRenderbufferParameterivOES1 =
      jniAccessors.getStaticMethodIDOf(_classRef,
          "glGetRenderbufferParameterivOES", "(IILjava/nio/IntBuffer;)V");

  /// from: static public native void glGetRenderbufferParameterivOES(int target, int pname, java.nio.IntBuffer params)
  static void glGetRenderbufferParameterivOES1(
          int target, int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glGetRenderbufferParameterivOES1,
          jni.JniType.voidType,
          [target, pname, params.reference]).check();

  static final _id_glIsFramebufferOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glIsFramebufferOES", "(I)Z");

  /// from: static public native boolean glIsFramebufferOES(int framebuffer)
  static bool glIsFramebufferOES(int framebuffer) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glIsFramebufferOES,
          jni.JniType.booleanType, [framebuffer]).boolean;

  static final _id_glBindFramebufferOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glBindFramebufferOES", "(II)V");

  /// from: static public native void glBindFramebufferOES(int target, int framebuffer)
  static void glBindFramebufferOES(int target, int framebuffer) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glBindFramebufferOES,
          jni.JniType.voidType, [target, framebuffer]).check();

  static final _id_glDeleteFramebuffersOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glDeleteFramebuffersOES", "(I[II)V");

  /// from: static public native void glDeleteFramebuffersOES(int n, int[] framebuffers, int offset)
  static void glDeleteFramebuffersOES(
          int n, jni.JniObject framebuffers, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glDeleteFramebuffersOES,
          jni.JniType.voidType,
          [n, framebuffers.reference, offset]).check();

  static final _id_glDeleteFramebuffersOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glDeleteFramebuffersOES", "(ILjava/nio/IntBuffer;)V");

  /// from: static public native void glDeleteFramebuffersOES(int n, java.nio.IntBuffer framebuffers)
  static void glDeleteFramebuffersOES1(int n, jni.JniObject framebuffers) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glDeleteFramebuffersOES1,
          jni.JniType.voidType,
          [n, framebuffers.reference]).check();

  static final _id_glGenFramebuffersOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGenFramebuffersOES", "(I[II)V");

  /// from: static public native void glGenFramebuffersOES(int n, int[] framebuffers, int offset)
  static void glGenFramebuffersOES(
          int n, jni.JniObject framebuffers, int offset) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glGenFramebuffersOES,
          jni.JniType.voidType, [n, framebuffers.reference, offset]).check();

  static final _id_glGenFramebuffersOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGenFramebuffersOES", "(ILjava/nio/IntBuffer;)V");

  /// from: static public native void glGenFramebuffersOES(int n, java.nio.IntBuffer framebuffers)
  static void glGenFramebuffersOES1(int n, jni.JniObject framebuffers) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glGenFramebuffersOES1,
          jni.JniType.voidType,
          [n, framebuffers.reference]).check();

  static final _id_glCheckFramebufferStatusOES = jniAccessors
      .getStaticMethodIDOf(_classRef, "glCheckFramebufferStatusOES", "(I)I");

  /// from: static public native int glCheckFramebufferStatusOES(int target)
  static int glCheckFramebufferStatusOES(int target) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glCheckFramebufferStatusOES,
          jni.JniType.intType,
          [target]).integer;

  static final _id_glFramebufferRenderbufferOES =
      jniAccessors.getStaticMethodIDOf(
          _classRef, "glFramebufferRenderbufferOES", "(IIII)V");

  /// from: static public native void glFramebufferRenderbufferOES(int target, int attachment, int renderbuffertarget, int renderbuffer)
  static void glFramebufferRenderbufferOES(int target, int attachment,
          int renderbuffertarget, int renderbuffer) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glFramebufferRenderbufferOES,
          jni.JniType.voidType,
          [target, attachment, renderbuffertarget, renderbuffer]).check();

  static final _id_glFramebufferTexture2DOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glFramebufferTexture2DOES", "(IIIII)V");

  /// from: static public native void glFramebufferTexture2DOES(int target, int attachment, int textarget, int texture, int level)
  static void glFramebufferTexture2DOES(
          int target, int attachment, int textarget, int texture, int level) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glFramebufferTexture2DOES,
          jni.JniType.voidType,
          [target, attachment, textarget, texture, level]).check();

  static final _id_glGetFramebufferAttachmentParameterivOES =
      jniAccessors.getStaticMethodIDOf(
          _classRef, "glGetFramebufferAttachmentParameterivOES", "(III[II)V");

  /// from: static public native void glGetFramebufferAttachmentParameterivOES(int target, int attachment, int pname, int[] params, int offset)
  static void glGetFramebufferAttachmentParameterivOES(int target,
          int attachment, int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glGetFramebufferAttachmentParameterivOES,
          jni.JniType.voidType,
          [target, attachment, pname, params.reference, offset]).check();

  static final _id_glGetFramebufferAttachmentParameterivOES1 =
      jniAccessors.getStaticMethodIDOf(
          _classRef,
          "glGetFramebufferAttachmentParameterivOES",
          "(IIILjava/nio/IntBuffer;)V");

  /// from: static public native void glGetFramebufferAttachmentParameterivOES(int target, int attachment, int pname, java.nio.IntBuffer params)
  static void glGetFramebufferAttachmentParameterivOES1(
          int target, int attachment, int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glGetFramebufferAttachmentParameterivOES1,
          jni.JniType.voidType,
          [target, attachment, pname, params.reference]).check();

  static final _id_glGenerateMipmapOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGenerateMipmapOES", "(I)V");

  /// from: static public native void glGenerateMipmapOES(int target)
  static void glGenerateMipmapOES(int target) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glGenerateMipmapOES,
          jni.JniType.voidType, [target]).check();

  static final _id_glCurrentPaletteMatrixOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glCurrentPaletteMatrixOES", "(I)V");

  /// from: static public native void glCurrentPaletteMatrixOES(int matrixpaletteindex)
  static void glCurrentPaletteMatrixOES(int matrixpaletteindex) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glCurrentPaletteMatrixOES,
          jni.JniType.voidType,
          [matrixpaletteindex]).check();

  static final _id_glLoadPaletteFromModelViewMatrixOES =
      jniAccessors.getStaticMethodIDOf(
          _classRef, "glLoadPaletteFromModelViewMatrixOES", "()V");

  /// from: static public native void glLoadPaletteFromModelViewMatrixOES()
  static void glLoadPaletteFromModelViewMatrixOES() =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glLoadPaletteFromModelViewMatrixOES,
          jni.JniType.voidType, []).check();

  static final _id_glMatrixIndexPointerOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glMatrixIndexPointerOES", "(IIILjava/nio/Buffer;)V");

  /// from: static public void glMatrixIndexPointerOES(int size, int type, int stride, java.nio.Buffer pointer)
  static void glMatrixIndexPointerOES(
          int size, int type, int stride, jni.JniObject pointer) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glMatrixIndexPointerOES,
          jni.JniType.voidType,
          [size, type, stride, pointer.reference]).check();

  static final _id_glWeightPointerOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glWeightPointerOES", "(IIILjava/nio/Buffer;)V");

  /// from: static public void glWeightPointerOES(int size, int type, int stride, java.nio.Buffer pointer)
  static void glWeightPointerOES(
          int size, int type, int stride, jni.JniObject pointer) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glWeightPointerOES,
          jni.JniType.voidType,
          [size, type, stride, pointer.reference]).check();

  static final _id_glDepthRangefOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glDepthRangefOES", "(FF)V");

  /// from: static public native void glDepthRangefOES(float zNear, float zFar)
  static void glDepthRangefOES(double zNear, double zFar) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glDepthRangefOES,
          jni.JniType.voidType, [zNear, zFar]).check();

  static final _id_glFrustumfOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glFrustumfOES", "(FFFFFF)V");

  /// from: static public native void glFrustumfOES(float left, float right, float bottom, float top, float zNear, float zFar)
  static void glFrustumfOES(double left, double right, double bottom,
          double top, double zNear, double zFar) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glFrustumfOES,
          jni.JniType.voidType,
          [left, right, bottom, top, zNear, zFar]).check();

  static final _id_glOrthofOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glOrthofOES", "(FFFFFF)V");

  /// from: static public native void glOrthofOES(float left, float right, float bottom, float top, float zNear, float zFar)
  static void glOrthofOES(double left, double right, double bottom, double top,
          double zNear, double zFar) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glOrthofOES,
          jni.JniType.voidType,
          [left, right, bottom, top, zNear, zFar]).check();

  static final _id_glClipPlanefOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glClipPlanefOES", "(I[FI)V");

  /// from: static public native void glClipPlanefOES(int plane, float[] equation, int offset)
  static void glClipPlanefOES(int plane, jni.JniObject equation, int offset) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glClipPlanefOES,
          jni.JniType.voidType, [plane, equation.reference, offset]).check();

  static final _id_glClipPlanefOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glClipPlanefOES", "(ILjava/nio/FloatBuffer;)V");

  /// from: static public native void glClipPlanefOES(int plane, java.nio.FloatBuffer equation)
  static void glClipPlanefOES1(int plane, jni.JniObject equation) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glClipPlanefOES1,
          jni.JniType.voidType, [plane, equation.reference]).check();

  static final _id_glGetClipPlanefOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetClipPlanefOES", "(I[FI)V");

  /// from: static public native void glGetClipPlanefOES(int pname, float[] eqn, int offset)
  static void glGetClipPlanefOES(int pname, jni.JniObject eqn, int offset) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glGetClipPlanefOES,
          jni.JniType.voidType, [pname, eqn.reference, offset]).check();

  static final _id_glGetClipPlanefOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetClipPlanefOES", "(ILjava/nio/FloatBuffer;)V");

  /// from: static public native void glGetClipPlanefOES(int pname, java.nio.FloatBuffer eqn)
  static void glGetClipPlanefOES1(int pname, jni.JniObject eqn) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glGetClipPlanefOES1,
          jni.JniType.voidType, [pname, eqn.reference]).check();

  static final _id_glClearDepthfOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glClearDepthfOES", "(F)V");

  /// from: static public native void glClearDepthfOES(float depth)
  static void glClearDepthfOES(double depth) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glClearDepthfOES,
          jni.JniType.voidType, [depth]).check();

  static final _id_glTexGenfOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glTexGenfOES", "(IIF)V");

  /// from: static public native void glTexGenfOES(int coord, int pname, float param)
  static void glTexGenfOES(int coord, int pname, double param) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glTexGenfOES,
          jni.JniType.voidType, [coord, pname, param]).check();

  static final _id_glTexGenfvOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glTexGenfvOES", "(II[FI)V");

  /// from: static public native void glTexGenfvOES(int coord, int pname, float[] params, int offset)
  static void glTexGenfvOES(
          int coord, int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glTexGenfvOES,
          jni.JniType.voidType,
          [coord, pname, params.reference, offset]).check();

  static final _id_glTexGenfvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glTexGenfvOES", "(IILjava/nio/FloatBuffer;)V");

  /// from: static public native void glTexGenfvOES(int coord, int pname, java.nio.FloatBuffer params)
  static void glTexGenfvOES1(int coord, int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glTexGenfvOES1,
          jni.JniType.voidType, [coord, pname, params.reference]).check();

  static final _id_glTexGeniOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glTexGeniOES", "(III)V");

  /// from: static public native void glTexGeniOES(int coord, int pname, int param)
  static void glTexGeniOES(int coord, int pname, int param) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glTexGeniOES,
          jni.JniType.voidType, [coord, pname, param]).check();

  static final _id_glTexGenivOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glTexGenivOES", "(II[II)V");

  /// from: static public native void glTexGenivOES(int coord, int pname, int[] params, int offset)
  static void glTexGenivOES(
          int coord, int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glTexGenivOES,
          jni.JniType.voidType,
          [coord, pname, params.reference, offset]).check();

  static final _id_glTexGenivOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glTexGenivOES", "(IILjava/nio/IntBuffer;)V");

  /// from: static public native void glTexGenivOES(int coord, int pname, java.nio.IntBuffer params)
  static void glTexGenivOES1(int coord, int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glTexGenivOES1,
          jni.JniType.voidType, [coord, pname, params.reference]).check();

  static final _id_glTexGenxOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glTexGenxOES", "(III)V");

  /// from: static public native void glTexGenxOES(int coord, int pname, int param)
  static void glTexGenxOES(int coord, int pname, int param) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glTexGenxOES,
          jni.JniType.voidType, [coord, pname, param]).check();

  static final _id_glTexGenxvOES =
      jniAccessors.getStaticMethodIDOf(_classRef, "glTexGenxvOES", "(II[II)V");

  /// from: static public native void glTexGenxvOES(int coord, int pname, int[] params, int offset)
  static void glTexGenxvOES(
          int coord, int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glTexGenxvOES,
          jni.JniType.voidType,
          [coord, pname, params.reference, offset]).check();

  static final _id_glTexGenxvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glTexGenxvOES", "(IILjava/nio/IntBuffer;)V");

  /// from: static public native void glTexGenxvOES(int coord, int pname, java.nio.IntBuffer params)
  static void glTexGenxvOES1(int coord, int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glTexGenxvOES1,
          jni.JniType.voidType, [coord, pname, params.reference]).check();

  static final _id_glGetTexGenfvOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetTexGenfvOES", "(II[FI)V");

  /// from: static public native void glGetTexGenfvOES(int coord, int pname, float[] params, int offset)
  static void glGetTexGenfvOES(
          int coord, int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glGetTexGenfvOES,
          jni.JniType.voidType,
          [coord, pname, params.reference, offset]).check();

  static final _id_glGetTexGenfvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetTexGenfvOES", "(IILjava/nio/FloatBuffer;)V");

  /// from: static public native void glGetTexGenfvOES(int coord, int pname, java.nio.FloatBuffer params)
  static void glGetTexGenfvOES1(int coord, int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glGetTexGenfvOES1,
          jni.JniType.voidType, [coord, pname, params.reference]).check();

  static final _id_glGetTexGenivOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetTexGenivOES", "(II[II)V");

  /// from: static public native void glGetTexGenivOES(int coord, int pname, int[] params, int offset)
  static void glGetTexGenivOES(
          int coord, int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glGetTexGenivOES,
          jni.JniType.voidType,
          [coord, pname, params.reference, offset]).check();

  static final _id_glGetTexGenivOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetTexGenivOES", "(IILjava/nio/IntBuffer;)V");

  /// from: static public native void glGetTexGenivOES(int coord, int pname, java.nio.IntBuffer params)
  static void glGetTexGenivOES1(int coord, int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glGetTexGenivOES1,
          jni.JniType.voidType, [coord, pname, params.reference]).check();

  static final _id_glGetTexGenxvOES = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetTexGenxvOES", "(II[II)V");

  /// from: static public native void glGetTexGenxvOES(int coord, int pname, int[] params, int offset)
  static void glGetTexGenxvOES(
          int coord, int pname, jni.JniObject params, int offset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_glGetTexGenxvOES,
          jni.JniType.voidType,
          [coord, pname, params.reference, offset]).check();

  static final _id_glGetTexGenxvOES1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "glGetTexGenxvOES", "(IILjava/nio/IntBuffer;)V");

  /// from: static public native void glGetTexGenxvOES(int coord, int pname, java.nio.IntBuffer params)
  static void glGetTexGenxvOES1(int coord, int pname, jni.JniObject params) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_glGetTexGenxvOES1,
          jni.JniType.voidType, [coord, pname, params.reference]).check();
}
