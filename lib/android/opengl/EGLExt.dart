// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "EGLDisplay.dart" as egldisplay_;

import "EGLSurface.dart" as eglsurface_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.opengl.EGLExt
///
/// EGL Extensions
class EGLExt extends jni.JniObject {
  static final _classRef = jniAccessors.getClassOf("android/opengl/EGLExt");
  EGLExt.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int EGL_CONTEXT_FLAGS_KHR
  static const EGL_CONTEXT_FLAGS_KHR = 12540;

  /// from: static public final int EGL_CONTEXT_MAJOR_VERSION_KHR
  static const EGL_CONTEXT_MAJOR_VERSION_KHR = 12440;

  /// from: static public final int EGL_CONTEXT_MINOR_VERSION_KHR
  static const EGL_CONTEXT_MINOR_VERSION_KHR = 12539;

  /// from: static public final int EGL_OPENGL_ES3_BIT_KHR
  static const EGL_OPENGL_ES3_BIT_KHR = 64;

  /// from: static public final int EGL_RECORDABLE_ANDROID
  static const EGL_RECORDABLE_ANDROID = 12610;

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: public void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  EGLExt()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_eglPresentationTimeANDROID =
      jniAccessors.getStaticMethodIDOf(_classRef, "eglPresentationTimeANDROID",
          "(Landroid/opengl/EGLDisplay;Landroid/opengl/EGLSurface;J)Z");

  /// from: static public native boolean eglPresentationTimeANDROID(android.opengl.EGLDisplay dpy, android.opengl.EGLSurface sur, long time)
  static bool eglPresentationTimeANDROID(
          egldisplay_.EGLDisplay dpy, eglsurface_.EGLSurface sur, int time) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_eglPresentationTimeANDROID,
          jni.JniType.booleanType,
          [dpy.reference, sur.reference, time]).boolean;
}
