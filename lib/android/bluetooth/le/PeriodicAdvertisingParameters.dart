// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../os/Parcelable.dart" as parcelable_;

import "../../os/Parcel.dart" as parcel_;
import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.bluetooth.le.PeriodicAdvertisingParameters
///
/// The PeriodicAdvertisingParameters provide a way to adjust periodic
/// advertising preferences for each Bluetooth LE advertising set. Use AdvertisingSetParameters.Builder to create an instance of this class.
class PeriodicAdvertisingParameters extends jni.JniObject {
  static final _classRef = jniAccessors
      .getClassOf("android/bluetooth/le/PeriodicAdvertisingParameters");
  PeriodicAdvertisingParameters.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_CREATOR = jniAccessors.getStaticFieldIDOf(
      _classRef, "CREATOR", "Landroid/os/Parcelable\$Creator;");

  /// from: static public final android.os.Parcelable.Creator<android.bluetooth.le.PeriodicAdvertisingParameters> CREATOR
  /// The returned object must be deleted after use, by calling the `delete` method.
  static parcelable_.Parcelable_Creator get CREATOR =>
      parcelable_.Parcelable_Creator.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CREATOR, jni.JniType.objectType)
          .object);

  static final _id_getIncludeTxPower =
      jniAccessors.getMethodIDOf(_classRef, "getIncludeTxPower", "()Z");

  /// from: public boolean getIncludeTxPower()
  ///
  /// Returns whether the TX Power will be included.
  bool getIncludeTxPower() => jniAccessors.callMethodWithArgs(
      reference, _id_getIncludeTxPower, jni.JniType.booleanType, []).boolean;

  static final _id_getInterval =
      jniAccessors.getMethodIDOf(_classRef, "getInterval", "()I");

  /// from: public int getInterval()
  ///
  /// Returns the periodic advertising interval, in 1.25ms unit.
  /// Valid values are from 80 (100ms) to 65519 (81.89875s).
  int getInterval() => jniAccessors.callMethodWithArgs(
      reference, _id_getInterval, jni.JniType.intType, []).integer;

  static final _id_describeContents =
      jniAccessors.getMethodIDOf(_classRef, "describeContents", "()I");

  /// from: public int describeContents()
  int describeContents() => jniAccessors.callMethodWithArgs(
      reference, _id_describeContents, jni.JniType.intType, []).integer;

  static final _id_writeToParcel = jniAccessors.getMethodIDOf(
      _classRef, "writeToParcel", "(Landroid/os/Parcel;I)V");

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(parcel_.Parcel dest, int flags) =>
      jniAccessors.callMethodWithArgs(reference, _id_writeToParcel,
          jni.JniType.voidType, [dest.reference, flags]).check();
}

/// from: android.bluetooth.le.PeriodicAdvertisingParameters$Builder
class PeriodicAdvertisingParameters_Builder extends jni.JniObject {
  static final _classRef = jniAccessors.getClassOf(
      "android/bluetooth/le/PeriodicAdvertisingParameters\$Builder");
  PeriodicAdvertisingParameters_Builder.fromRef(jni.JObject ref)
      : super.fromRef(ref);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: public void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  PeriodicAdvertisingParameters_Builder()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_setIncludeTxPower = jniAccessors.getMethodIDOf(
      _classRef,
      "setIncludeTxPower",
      "(Z)Landroid/bluetooth/le/PeriodicAdvertisingParameters\$Builder;");

  /// from: public android.bluetooth.le.PeriodicAdvertisingParameters.Builder setIncludeTxPower(boolean includeTxPower)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Whether the transmission power level should be included in the periodic
  /// packet.
  PeriodicAdvertisingParameters_Builder setIncludeTxPower(
          bool includeTxPower) =>
      PeriodicAdvertisingParameters_Builder.fromRef(jniAccessors
          .callMethodWithArgs(reference, _id_setIncludeTxPower,
              jni.JniType.objectType, [includeTxPower]).object);

  static final _id_setInterval = jniAccessors.getMethodIDOf(
      _classRef,
      "setInterval",
      "(I)Landroid/bluetooth/le/PeriodicAdvertisingParameters\$Builder;");

  /// from: public android.bluetooth.le.PeriodicAdvertisingParameters.Builder setInterval(int interval)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Set advertising interval for periodic advertising, in 1.25ms unit.
  /// Valid values are from 80 (100ms) to 65519 (81.89875s).
  /// Value from range [interval, interval+20ms] will be picked as the actual value.
  ///@throws IllegalArgumentException If the interval is invalid.
  PeriodicAdvertisingParameters_Builder setInterval(int interval) =>
      PeriodicAdvertisingParameters_Builder.fromRef(jniAccessors
          .callMethodWithArgs(reference, _id_setInterval,
              jni.JniType.objectType, [interval]).object);

  static final _id_build = jniAccessors.getMethodIDOf(_classRef, "build",
      "()Landroid/bluetooth/le/PeriodicAdvertisingParameters;");

  /// from: public android.bluetooth.le.PeriodicAdvertisingParameters build()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Build the AdvertisingSetParameters object.
  PeriodicAdvertisingParameters build() =>
      PeriodicAdvertisingParameters.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_build, jni.JniType.objectType, []).object);
}
