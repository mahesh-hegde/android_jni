// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.util.StatsLog
///
/// StatsLog provides an API for developers to send events to statsd. The events can be used to
/// define custom metrics inside statsd.
class StatsLog extends jni.JniObject {
  static final _classRef = jniAccessors.getClassOf("android/util/StatsLog");
  StatsLog.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_logStart =
      jniAccessors.getStaticMethodIDOf(_classRef, "logStart", "(I)Z");

  /// from: static public boolean logStart(int label)
  ///
  /// Logs a start event.
  ///@param label developer-chosen label.
  ///@return True if the log request was sent to statsd.
  static bool logStart(int label) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_logStart, jni.JniType.booleanType, [label]).boolean;

  static final _id_logStop =
      jniAccessors.getStaticMethodIDOf(_classRef, "logStop", "(I)Z");

  /// from: static public boolean logStop(int label)
  ///
  /// Logs a stop event.
  ///@param label developer-chosen label.
  ///@return True if the log request was sent to statsd.
  static bool logStop(int label) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_logStop, jni.JniType.booleanType, [label]).boolean;

  static final _id_logEvent =
      jniAccessors.getStaticMethodIDOf(_classRef, "logEvent", "(I)Z");

  /// from: static public boolean logEvent(int label)
  ///
  /// Logs an event that does not represent a start or stop boundary.
  ///@param label developer-chosen label.
  ///@return True if the log request was sent to statsd.
  static bool logEvent(int label) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_logEvent, jni.JniType.booleanType, [label]).boolean;
}
