// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.util.Printer
///
/// Simple interface for printing text, allowing redirection to various
/// targets.  Standard implementations are android.util.LogPrinter,
/// android.util.StringBuilderPrinter, and
/// android.util.PrintWriterPrinter.
class Printer extends jni.JniObject {
  static final _classRef = jniAccessors.getClassOf("android/util/Printer");
  Printer.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_println =
      jniAccessors.getMethodIDOf(_classRef, "println", "(Ljava/lang/String;)V");

  /// from: public abstract void println(java.lang.String x)
  ///
  /// Write a line of text to the output.  There is no need to terminate
  /// the given string with a newline.
  void println(jni.JniString x) => jniAccessors.callMethodWithArgs(
      reference, _id_println, jni.JniType.voidType, [x.reference]).check();
}
