// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.gesture.Prediction
class Prediction extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/gesture/Prediction");
  Prediction.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_name =
      jniAccessors.getFieldIDOf(_classRef, "name", "Ljava/lang/String;");

  /// from: public final java.lang.String name
  /// The returned object must be deleted after use, by calling the `delete` method.
  jni.JniString get name => jni.JniString.fromRef(jniAccessors
      .getField(reference, _id_name, jni.JniType.objectType)
      .object);

  static final _id_score = jniAccessors.getFieldIDOf(_classRef, "score", "D");

  /// from: public double score
  double get score => jniAccessors
      .getField(reference, _id_score, jni.JniType.doubleType)
      .doubleFloat;

  /// from: public double score
  set score(double value) => jniEnv.SetDoubleField(reference, _id_score, value);

  static final _id_toString1 =
      jniAccessors.getMethodIDOf(_classRef, "toString", "()Ljava/lang/String;");

  /// from: public java.lang.String toString()
  /// The returned object must be deleted after use, by calling the `delete` method.
  jni.JniString toString1() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_toString1, jni.JniType.objectType, []).object);
}
