// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "CursorTreeAdapter.dart" as cursortreeadapter_;

import "../content/Context.dart" as context_;

import "../database/Cursor.dart" as cursor_;

import "../view/View.dart" as view_;

import "../view/ViewGroup.dart" as viewgroup_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.widget.ResourceCursorTreeAdapter
///
/// A fairly simple ExpandableListAdapter that creates views defined in an XML
/// file. You can specify the XML file that defines the appearance of the views.
class ResourceCursorTreeAdapter extends cursortreeadapter_.CursorTreeAdapter {
  static final _classRef =
      jniAccessors.getClassOf("android/widget/ResourceCursorTreeAdapter");
  ResourceCursorTreeAdapter.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor3 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/database/Cursor;IIII)V");

  /// from: public void <init>(android.content.Context context, android.database.Cursor cursor, int collapsedGroupLayout, int expandedGroupLayout, int childLayout, int lastChildLayout)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructor.
  ///@param context The context where the ListView associated with this
  ///            SimpleListItemFactory is running
  ///@param cursor The database cursor
  ///@param collapsedGroupLayout resource identifier of a layout file that
  ///            defines the views for collapsed groups.
  ///@param expandedGroupLayout resource identifier of a layout file that
  ///            defines the views for expanded groups.
  ///@param childLayout resource identifier of a layout file that defines the
  ///            views for all children but the last..
  ///@param lastChildLayout resource identifier of a layout file that defines
  ///            the views for the last child of a group.
  ResourceCursorTreeAdapter.ctor3(
      context_.Context context,
      cursor_.Cursor cursor,
      int collapsedGroupLayout,
      int expandedGroupLayout,
      int childLayout,
      int lastChildLayout)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor3, [
          context.reference,
          cursor.reference,
          collapsedGroupLayout,
          expandedGroupLayout,
          childLayout,
          lastChildLayout
        ]).object);

  static final _id_ctor4 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/database/Cursor;III)V");

  /// from: public void <init>(android.content.Context context, android.database.Cursor cursor, int collapsedGroupLayout, int expandedGroupLayout, int childLayout)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructor.
  ///@param context The context where the ListView associated with this
  ///            SimpleListItemFactory is running
  ///@param cursor The database cursor
  ///@param collapsedGroupLayout resource identifier of a layout file that
  ///            defines the views for collapsed groups.
  ///@param expandedGroupLayout resource identifier of a layout file that
  ///            defines the views for expanded groups.
  ///@param childLayout resource identifier of a layout file that defines the
  ///            views for all children.
  ResourceCursorTreeAdapter.ctor4(
      context_.Context context,
      cursor_.Cursor cursor,
      int collapsedGroupLayout,
      int expandedGroupLayout,
      int childLayout)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor4, [
          context.reference,
          cursor.reference,
          collapsedGroupLayout,
          expandedGroupLayout,
          childLayout
        ]).object);

  static final _id_ctor5 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/database/Cursor;II)V");

  /// from: public void <init>(android.content.Context context, android.database.Cursor cursor, int groupLayout, int childLayout)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructor.
  ///@param context The context where the ListView associated with this
  ///            SimpleListItemFactory is running
  ///@param cursor The database cursor
  ///@param groupLayout resource identifier of a layout file that defines the
  ///            views for all groups.
  ///@param childLayout resource identifier of a layout file that defines the
  ///            views for all children.
  ResourceCursorTreeAdapter.ctor5(context_.Context context,
      cursor_.Cursor cursor, int groupLayout, int childLayout)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor5, [
          context.reference,
          cursor.reference,
          groupLayout,
          childLayout
        ]).object);

  static final _id_newChildView = jniAccessors.getMethodIDOf(
      _classRef,
      "newChildView",
      "(Landroid/content/Context;Landroid/database/Cursor;ZLandroid/view/ViewGroup;)Landroid/view/View;");

  /// from: public android.view.View newChildView(android.content.Context context, android.database.Cursor cursor, boolean isLastChild, android.view.ViewGroup parent)
  /// The returned object must be deleted after use, by calling the `delete` method.
  view_.View newChildView(context_.Context context, cursor_.Cursor cursor,
          bool isLastChild, viewgroup_.ViewGroup parent) =>
      view_.View.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_newChildView, jni.JniType.objectType, [
        context.reference,
        cursor.reference,
        isLastChild,
        parent.reference
      ]).object);

  static final _id_newGroupView = jniAccessors.getMethodIDOf(
      _classRef,
      "newGroupView",
      "(Landroid/content/Context;Landroid/database/Cursor;ZLandroid/view/ViewGroup;)Landroid/view/View;");

  /// from: public android.view.View newGroupView(android.content.Context context, android.database.Cursor cursor, boolean isExpanded, android.view.ViewGroup parent)
  /// The returned object must be deleted after use, by calling the `delete` method.
  view_.View newGroupView(context_.Context context, cursor_.Cursor cursor,
          bool isExpanded, viewgroup_.ViewGroup parent) =>
      view_.View.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_newGroupView, jni.JniType.objectType, [
        context.reference,
        cursor.reference,
        isExpanded,
        parent.reference
      ]).object);
}
