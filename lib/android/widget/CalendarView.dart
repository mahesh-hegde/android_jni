// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "FrameLayout.dart" as framelayout_;

import "../content/Context.dart" as context_;

import "../util/AttributeSet.dart" as attributeset_;

import "../graphics/drawable/Drawable.dart" as drawable_;

import "../content/res/Configuration.dart" as configuration_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.widget.CalendarView
///
/// This class is a calendar widget for displaying and selecting dates. The
/// range of dates supported by this calendar is configurable.
///
/// The exact appearance and interaction model of this widget may vary between
/// OS versions and themes (e.g. Holo versus Material), but in general a user
/// can select a date by tapping on it and can scroll or fling the calendar to a
/// desired date.
///@attr ref android.R.styleable\#CalendarView_showWeekNumber
///@attr ref android.R.styleable\#CalendarView_firstDayOfWeek
///@attr ref android.R.styleable\#CalendarView_minDate
///@attr ref android.R.styleable\#CalendarView_maxDate
///@attr ref android.R.styleable\#CalendarView_shownWeekCount
///@attr ref android.R.styleable\#CalendarView_selectedWeekBackgroundColor
///@attr ref android.R.styleable\#CalendarView_focusedMonthDateColor
///@attr ref android.R.styleable\#CalendarView_unfocusedMonthDateColor
///@attr ref android.R.styleable\#CalendarView_weekNumberColor
///@attr ref android.R.styleable\#CalendarView_weekSeparatorLineColor
///@attr ref android.R.styleable\#CalendarView_selectedDateVerticalBar
///@attr ref android.R.styleable\#CalendarView_weekDayTextAppearance
///@attr ref android.R.styleable\#CalendarView_dateTextAppearance
class CalendarView extends framelayout_.FrameLayout {
  static final _classRef =
      jniAccessors.getClassOf("android/widget/CalendarView");
  CalendarView.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "(Landroid/content/Context;)V");

  /// from: public void <init>(android.content.Context context)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// @param context This value must never be {@code null}.
  CalendarView(context_.Context context)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor, [context.reference]).object);

  static final _id_ctor1 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/util/AttributeSet;)V");

  /// from: public void <init>(android.content.Context context, android.util.AttributeSet attrs)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// @param context This value must never be {@code null}.
  ///@param attrs This value may be {@code null}.
  CalendarView.ctor1(context_.Context context, attributeset_.AttributeSet attrs)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor1, [context.reference, attrs.reference]).object);

  static final _id_ctor2 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/util/AttributeSet;I)V");

  /// from: public void <init>(android.content.Context context, android.util.AttributeSet attrs, int defStyleAttr)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// @param context This value must never be {@code null}.
  ///@param attrs This value may be {@code null}.
  CalendarView.ctor2(context_.Context context, attributeset_.AttributeSet attrs,
      int defStyleAttr)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor2,
            [context.reference, attrs.reference, defStyleAttr]).object);

  static final _id_ctor3 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/util/AttributeSet;II)V");

  /// from: public void <init>(android.content.Context context, android.util.AttributeSet attrs, int defStyleAttr, int defStyleRes)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// @param context This value must never be {@code null}.
  ///@param attrs This value may be {@code null}.
  CalendarView.ctor3(context_.Context context, attributeset_.AttributeSet attrs,
      int defStyleAttr, int defStyleRes)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor3, [
          context.reference,
          attrs.reference,
          defStyleAttr,
          defStyleRes
        ]).object);

  static final _id_setShownWeekCount =
      jniAccessors.getMethodIDOf(_classRef, "setShownWeekCount", "(I)V");

  /// from: public void setShownWeekCount(int count)
  ///
  /// Sets the number of weeks to be shown.
  ///@param count The shown week count.
  ///@attr ref android.R.styleable\#CalendarView_shownWeekCount
  ///@deprecated No longer used by Material-style CalendarView.
  void setShownWeekCount(int count) => jniAccessors.callMethodWithArgs(
      reference, _id_setShownWeekCount, jni.JniType.voidType, [count]).check();

  static final _id_getShownWeekCount =
      jniAccessors.getMethodIDOf(_classRef, "getShownWeekCount", "()I");

  /// from: public int getShownWeekCount()
  ///
  /// Gets the number of weeks to be shown.
  ///@return The shown week count.
  ///@attr ref android.R.styleable\#CalendarView_shownWeekCount
  ///@deprecated No longer used by Material-style CalendarView.
  int getShownWeekCount() => jniAccessors.callMethodWithArgs(
      reference, _id_getShownWeekCount, jni.JniType.intType, []).integer;

  static final _id_setSelectedWeekBackgroundColor = jniAccessors.getMethodIDOf(
      _classRef, "setSelectedWeekBackgroundColor", "(I)V");

  /// from: public void setSelectedWeekBackgroundColor(int color)
  ///
  /// Sets the background color for the selected week.
  ///@param color The week background color.
  ///@attr ref android.R.styleable\#CalendarView_selectedWeekBackgroundColor
  ///@deprecated No longer used by Material-style CalendarView.
  void setSelectedWeekBackgroundColor(int color) =>
      jniAccessors.callMethodWithArgs(
          reference,
          _id_setSelectedWeekBackgroundColor,
          jni.JniType.voidType,
          [color]).check();

  static final _id_getSelectedWeekBackgroundColor = jniAccessors.getMethodIDOf(
      _classRef, "getSelectedWeekBackgroundColor", "()I");

  /// from: public int getSelectedWeekBackgroundColor()
  ///
  /// Gets the background color for the selected week.
  ///@return The week background color.
  ///@attr ref android.R.styleable\#CalendarView_selectedWeekBackgroundColor
  ///@deprecated No longer used by Material-style CalendarView.
  int getSelectedWeekBackgroundColor() => jniAccessors.callMethodWithArgs(
      reference,
      _id_getSelectedWeekBackgroundColor,
      jni.JniType.intType, []).integer;

  static final _id_setFocusedMonthDateColor =
      jniAccessors.getMethodIDOf(_classRef, "setFocusedMonthDateColor", "(I)V");

  /// from: public void setFocusedMonthDateColor(int color)
  ///
  /// Sets the color for the dates of the focused month.
  ///@param color The focused month date color.
  ///@attr ref android.R.styleable\#CalendarView_focusedMonthDateColor
  ///@deprecated No longer used by Material-style CalendarView.
  void setFocusedMonthDateColor(int color) => jniAccessors.callMethodWithArgs(
      reference,
      _id_setFocusedMonthDateColor,
      jni.JniType.voidType,
      [color]).check();

  static final _id_getFocusedMonthDateColor =
      jniAccessors.getMethodIDOf(_classRef, "getFocusedMonthDateColor", "()I");

  /// from: public int getFocusedMonthDateColor()
  ///
  /// Gets the color for the dates in the focused month.
  ///@return The focused month date color.
  ///@attr ref android.R.styleable\#CalendarView_focusedMonthDateColor
  ///@deprecated No longer used by Material-style CalendarView.
  int getFocusedMonthDateColor() => jniAccessors.callMethodWithArgs(
      reference, _id_getFocusedMonthDateColor, jni.JniType.intType, []).integer;

  static final _id_setUnfocusedMonthDateColor = jniAccessors.getMethodIDOf(
      _classRef, "setUnfocusedMonthDateColor", "(I)V");

  /// from: public void setUnfocusedMonthDateColor(int color)
  ///
  /// Sets the color for the dates of a not focused month.
  ///@param color A not focused month date color.
  ///@attr ref android.R.styleable\#CalendarView_unfocusedMonthDateColor
  ///@deprecated No longer used by Material-style CalendarView.
  void setUnfocusedMonthDateColor(int color) => jniAccessors.callMethodWithArgs(
      reference,
      _id_setUnfocusedMonthDateColor,
      jni.JniType.voidType,
      [color]).check();

  static final _id_getUnfocusedMonthDateColor = jniAccessors.getMethodIDOf(
      _classRef, "getUnfocusedMonthDateColor", "()I");

  /// from: public int getUnfocusedMonthDateColor()
  ///
  /// Gets the color for the dates in a not focused month.
  ///@return A not focused month date color.
  ///@attr ref android.R.styleable\#CalendarView_unfocusedMonthDateColor
  ///@deprecated No longer used by Material-style CalendarView.
  int getUnfocusedMonthDateColor() => jniAccessors.callMethodWithArgs(reference,
      _id_getUnfocusedMonthDateColor, jni.JniType.intType, []).integer;

  static final _id_setWeekNumberColor =
      jniAccessors.getMethodIDOf(_classRef, "setWeekNumberColor", "(I)V");

  /// from: public void setWeekNumberColor(int color)
  ///
  /// Sets the color for the week numbers.
  ///@param color The week number color.
  ///@attr ref android.R.styleable\#CalendarView_weekNumberColor
  ///@deprecated No longer used by Material-style CalendarView.
  void setWeekNumberColor(int color) => jniAccessors.callMethodWithArgs(
      reference, _id_setWeekNumberColor, jni.JniType.voidType, [color]).check();

  static final _id_getWeekNumberColor =
      jniAccessors.getMethodIDOf(_classRef, "getWeekNumberColor", "()I");

  /// from: public int getWeekNumberColor()
  ///
  /// Gets the color for the week numbers.
  ///@return The week number color.
  ///@attr ref android.R.styleable\#CalendarView_weekNumberColor
  ///@deprecated No longer used by Material-style CalendarView.
  int getWeekNumberColor() => jniAccessors.callMethodWithArgs(
      reference, _id_getWeekNumberColor, jni.JniType.intType, []).integer;

  static final _id_setWeekSeparatorLineColor = jniAccessors.getMethodIDOf(
      _classRef, "setWeekSeparatorLineColor", "(I)V");

  /// from: public void setWeekSeparatorLineColor(int color)
  ///
  /// Sets the color for the separator line between weeks.
  ///@param color The week separator color.
  ///@attr ref android.R.styleable\#CalendarView_weekSeparatorLineColor
  ///@deprecated No longer used by Material-style CalendarView.
  void setWeekSeparatorLineColor(int color) => jniAccessors.callMethodWithArgs(
      reference,
      _id_setWeekSeparatorLineColor,
      jni.JniType.voidType,
      [color]).check();

  static final _id_getWeekSeparatorLineColor =
      jniAccessors.getMethodIDOf(_classRef, "getWeekSeparatorLineColor", "()I");

  /// from: public int getWeekSeparatorLineColor()
  ///
  /// Gets the color for the separator line between weeks.
  ///@return The week separator color.
  ///@attr ref android.R.styleable\#CalendarView_weekSeparatorLineColor
  ///@deprecated No longer used by Material-style CalendarView.
  int getWeekSeparatorLineColor() => jniAccessors.callMethodWithArgs(reference,
      _id_getWeekSeparatorLineColor, jni.JniType.intType, []).integer;

  static final _id_setSelectedDateVerticalBar = jniAccessors.getMethodIDOf(
      _classRef, "setSelectedDateVerticalBar", "(I)V");

  /// from: public void setSelectedDateVerticalBar(int resourceId)
  ///
  /// Sets the drawable for the vertical bar shown at the beginning and at
  /// the end of the selected date.
  ///@param resourceId The vertical bar drawable resource id.
  ///@attr ref android.R.styleable\#CalendarView_selectedDateVerticalBar
  ///@deprecated No longer used by Material-style CalendarView.
  void setSelectedDateVerticalBar(int resourceId) =>
      jniAccessors.callMethodWithArgs(reference, _id_setSelectedDateVerticalBar,
          jni.JniType.voidType, [resourceId]).check();

  static final _id_setSelectedDateVerticalBar1 = jniAccessors.getMethodIDOf(
      _classRef,
      "setSelectedDateVerticalBar",
      "(Landroid/graphics/drawable/Drawable;)V");

  /// from: public void setSelectedDateVerticalBar(android.graphics.drawable.Drawable drawable)
  ///
  /// Sets the drawable for the vertical bar shown at the beginning and at
  /// the end of the selected date.
  ///@param drawable The vertical bar drawable.
  ///@attr ref android.R.styleable\#CalendarView_selectedDateVerticalBar
  ///@deprecated No longer used by Material-style CalendarView.
  void setSelectedDateVerticalBar1(drawable_.Drawable drawable) =>
      jniAccessors.callMethodWithArgs(
          reference,
          _id_setSelectedDateVerticalBar1,
          jni.JniType.voidType,
          [drawable.reference]).check();

  static final _id_getSelectedDateVerticalBar = jniAccessors.getMethodIDOf(
      _classRef,
      "getSelectedDateVerticalBar",
      "()Landroid/graphics/drawable/Drawable;");

  /// from: public android.graphics.drawable.Drawable getSelectedDateVerticalBar()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Gets the drawable for the vertical bar shown at the beginning and at
  /// the end of the selected date.
  ///@return The vertical bar drawable.
  ///@deprecated No longer used by Material-style CalendarView.
  drawable_.Drawable getSelectedDateVerticalBar() =>
      drawable_.Drawable.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_getSelectedDateVerticalBar, jni.JniType.objectType, []).object);

  static final _id_setWeekDayTextAppearance =
      jniAccessors.getMethodIDOf(_classRef, "setWeekDayTextAppearance", "(I)V");

  /// from: public void setWeekDayTextAppearance(int resourceId)
  ///
  /// Sets the text appearance for the week day abbreviation of the calendar header.
  ///@param resourceId The text appearance resource id.
  ///@attr ref android.R.styleable\#CalendarView_weekDayTextAppearance
  void setWeekDayTextAppearance(int resourceId) =>
      jniAccessors.callMethodWithArgs(reference, _id_setWeekDayTextAppearance,
          jni.JniType.voidType, [resourceId]).check();

  static final _id_getWeekDayTextAppearance =
      jniAccessors.getMethodIDOf(_classRef, "getWeekDayTextAppearance", "()I");

  /// from: public int getWeekDayTextAppearance()
  ///
  /// Gets the text appearance for the week day abbreviation of the calendar header.
  ///@return The text appearance resource id.
  ///@attr ref android.R.styleable\#CalendarView_weekDayTextAppearance
  int getWeekDayTextAppearance() => jniAccessors.callMethodWithArgs(
      reference, _id_getWeekDayTextAppearance, jni.JniType.intType, []).integer;

  static final _id_setDateTextAppearance =
      jniAccessors.getMethodIDOf(_classRef, "setDateTextAppearance", "(I)V");

  /// from: public void setDateTextAppearance(int resourceId)
  ///
  /// Sets the text appearance for the calendar dates.
  ///@param resourceId The text appearance resource id.
  ///@attr ref android.R.styleable\#CalendarView_dateTextAppearance
  void setDateTextAppearance(int resourceId) => jniAccessors.callMethodWithArgs(
      reference,
      _id_setDateTextAppearance,
      jni.JniType.voidType,
      [resourceId]).check();

  static final _id_getDateTextAppearance =
      jniAccessors.getMethodIDOf(_classRef, "getDateTextAppearance", "()I");

  /// from: public int getDateTextAppearance()
  ///
  /// Gets the text appearance for the calendar dates.
  ///@return The text appearance resource id.
  ///@attr ref android.R.styleable\#CalendarView_dateTextAppearance
  int getDateTextAppearance() => jniAccessors.callMethodWithArgs(
      reference, _id_getDateTextAppearance, jni.JniType.intType, []).integer;

  static final _id_getMinDate =
      jniAccessors.getMethodIDOf(_classRef, "getMinDate", "()J");

  /// from: public long getMinDate()
  ///
  /// Gets the minimal date supported by this CalendarView in milliseconds
  /// since January 1, 1970 00:00:00 in TimeZone\#getDefault() time
  /// zone.
  ///
  /// Note: The default minimal date is 01/01/1900.
  ///
  ///@return The minimal supported date.
  ///@attr ref android.R.styleable\#CalendarView_minDate
  int getMinDate() => jniAccessors.callMethodWithArgs(
      reference, _id_getMinDate, jni.JniType.longType, []).long;

  static final _id_setMinDate =
      jniAccessors.getMethodIDOf(_classRef, "setMinDate", "(J)V");

  /// from: public void setMinDate(long minDate)
  ///
  /// Sets the minimal date supported by this CalendarView in milliseconds
  /// since January 1, 1970 00:00:00 in TimeZone\#getDefault() time
  /// zone.
  ///@param minDate The minimal supported date.
  ///@attr ref android.R.styleable\#CalendarView_minDate
  void setMinDate(int minDate) => jniAccessors.callMethodWithArgs(
      reference, _id_setMinDate, jni.JniType.voidType, [minDate]).check();

  static final _id_getMaxDate =
      jniAccessors.getMethodIDOf(_classRef, "getMaxDate", "()J");

  /// from: public long getMaxDate()
  ///
  /// Gets the maximal date supported by this CalendarView in milliseconds
  /// since January 1, 1970 00:00:00 in TimeZone\#getDefault() time
  /// zone.
  ///
  /// Note: The default maximal date is 01/01/2100.
  ///
  ///@return The maximal supported date.
  ///@attr ref android.R.styleable\#CalendarView_maxDate
  int getMaxDate() => jniAccessors.callMethodWithArgs(
      reference, _id_getMaxDate, jni.JniType.longType, []).long;

  static final _id_setMaxDate =
      jniAccessors.getMethodIDOf(_classRef, "setMaxDate", "(J)V");

  /// from: public void setMaxDate(long maxDate)
  ///
  /// Sets the maximal date supported by this CalendarView in milliseconds
  /// since January 1, 1970 00:00:00 in TimeZone\#getDefault() time
  /// zone.
  ///@param maxDate The maximal supported date.
  ///@attr ref android.R.styleable\#CalendarView_maxDate
  void setMaxDate(int maxDate) => jniAccessors.callMethodWithArgs(
      reference, _id_setMaxDate, jni.JniType.voidType, [maxDate]).check();

  static final _id_setShowWeekNumber =
      jniAccessors.getMethodIDOf(_classRef, "setShowWeekNumber", "(Z)V");

  /// from: public void setShowWeekNumber(boolean showWeekNumber)
  ///
  /// Sets whether to show the week number.
  ///@param showWeekNumber True to show the week number.
  ///@deprecated No longer used by Material-style CalendarView.
  ///@attr ref android.R.styleable\#CalendarView_showWeekNumber
  void setShowWeekNumber(bool showWeekNumber) =>
      jniAccessors.callMethodWithArgs(reference, _id_setShowWeekNumber,
          jni.JniType.voidType, [showWeekNumber]).check();

  static final _id_getShowWeekNumber =
      jniAccessors.getMethodIDOf(_classRef, "getShowWeekNumber", "()Z");

  /// from: public boolean getShowWeekNumber()
  ///
  /// Gets whether to show the week number.
  ///@return True if showing the week number.
  ///@deprecated No longer used by Material-style CalendarView.
  ///@attr ref android.R.styleable\#CalendarView_showWeekNumber
  bool getShowWeekNumber() => jniAccessors.callMethodWithArgs(
      reference, _id_getShowWeekNumber, jni.JniType.booleanType, []).boolean;

  static final _id_getFirstDayOfWeek =
      jniAccessors.getMethodIDOf(_classRef, "getFirstDayOfWeek", "()I");

  /// from: public int getFirstDayOfWeek()
  ///
  /// Gets the first day of week.
  ///@return The first day of the week conforming to the CalendarView
  ///         APIs.
  ///@see Calendar\#MONDAY
  ///@see Calendar\#TUESDAY
  ///@see Calendar\#WEDNESDAY
  ///@see Calendar\#THURSDAY
  ///@see Calendar\#FRIDAY
  ///@see Calendar\#SATURDAY
  ///@see Calendar\#SUNDAY
  ///@attr ref android.R.styleable\#CalendarView_firstDayOfWeek
  int getFirstDayOfWeek() => jniAccessors.callMethodWithArgs(
      reference, _id_getFirstDayOfWeek, jni.JniType.intType, []).integer;

  static final _id_setFirstDayOfWeek =
      jniAccessors.getMethodIDOf(_classRef, "setFirstDayOfWeek", "(I)V");

  /// from: public void setFirstDayOfWeek(int firstDayOfWeek)
  ///
  /// Sets the first day of week.
  ///@param firstDayOfWeek The first day of the week conforming to the
  ///            CalendarView APIs.
  ///@see Calendar\#MONDAY
  ///@see Calendar\#TUESDAY
  ///@see Calendar\#WEDNESDAY
  ///@see Calendar\#THURSDAY
  ///@see Calendar\#FRIDAY
  ///@see Calendar\#SATURDAY
  ///@see Calendar\#SUNDAY
  ///@attr ref android.R.styleable\#CalendarView_firstDayOfWeek
  void setFirstDayOfWeek(int firstDayOfWeek) => jniAccessors.callMethodWithArgs(
      reference,
      _id_setFirstDayOfWeek,
      jni.JniType.voidType,
      [firstDayOfWeek]).check();

  static final _id_setOnDateChangeListener = jniAccessors.getMethodIDOf(
      _classRef,
      "setOnDateChangeListener",
      "(Landroid/widget/CalendarView\$OnDateChangeListener;)V");

  /// from: public void setOnDateChangeListener(android.widget.CalendarView.OnDateChangeListener listener)
  ///
  /// Sets the listener to be notified upon selected date change.
  ///@param listener The listener to be notified.
  void setOnDateChangeListener(CalendarView_OnDateChangeListener listener) =>
      jniAccessors.callMethodWithArgs(reference, _id_setOnDateChangeListener,
          jni.JniType.voidType, [listener.reference]).check();

  static final _id_getDate =
      jniAccessors.getMethodIDOf(_classRef, "getDate", "()J");

  /// from: public long getDate()
  ///
  /// Gets the selected date in milliseconds since January 1, 1970 00:00:00 in
  /// TimeZone\#getDefault() time zone.
  ///@return The selected date.
  int getDate() => jniAccessors.callMethodWithArgs(
      reference, _id_getDate, jni.JniType.longType, []).long;

  static final _id_setDate =
      jniAccessors.getMethodIDOf(_classRef, "setDate", "(J)V");

  /// from: public void setDate(long date)
  ///
  /// Sets the selected date in milliseconds since January 1, 1970 00:00:00 in
  /// TimeZone\#getDefault() time zone.
  ///@param date The selected date.
  ///@throws IllegalArgumentException of the provided date is before the
  ///        minimal or after the maximal date.
  ///@see \#setDate(long, boolean, boolean)
  ///@see \#setMinDate(long)
  ///@see \#setMaxDate(long)
  void setDate(int date) => jniAccessors.callMethodWithArgs(
      reference, _id_setDate, jni.JniType.voidType, [date]).check();

  static final _id_setDate1 =
      jniAccessors.getMethodIDOf(_classRef, "setDate", "(JZZ)V");

  /// from: public void setDate(long date, boolean animate, boolean center)
  ///
  /// Sets the selected date in milliseconds since January 1, 1970 00:00:00 in
  /// TimeZone\#getDefault() time zone.
  ///@param date The date.
  ///@param animate Whether to animate the scroll to the current date.
  ///@param center Whether to center the current date even if it is already visible.
  ///@throws IllegalArgumentException of the provided date is before the
  ///        minimal or after the maximal date.
  ///@see \#setMinDate(long)
  ///@see \#setMaxDate(long)
  void setDate1(int date, bool animate, bool center) =>
      jniAccessors.callMethodWithArgs(reference, _id_setDate1,
          jni.JniType.voidType, [date, animate, center]).check();

  static final _id_onConfigurationChanged1 = jniAccessors.getMethodIDOf(
      _classRef,
      "onConfigurationChanged",
      "(Landroid/content/res/Configuration;)V");

  /// from: protected void onConfigurationChanged(android.content.res.Configuration newConfig)
  void onConfigurationChanged1(configuration_.Configuration newConfig) =>
      jniAccessors.callMethodWithArgs(reference, _id_onConfigurationChanged1,
          jni.JniType.voidType, [newConfig.reference]).check();

  static final _id_getAccessibilityClassName = jniAccessors.getMethodIDOf(
      _classRef, "getAccessibilityClassName", "()Ljava/lang/CharSequence;");

  /// from: public java.lang.CharSequence getAccessibilityClassName()
  /// The returned object must be deleted after use, by calling the `delete` method.
  jni.JniObject getAccessibilityClassName() =>
      jni.JniObject.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_getAccessibilityClassName, jni.JniType.objectType, []).object);
}

/// from: android.widget.CalendarView$OnDateChangeListener
///
/// The callback used to indicate the user changes the date.
class CalendarView_OnDateChangeListener extends jni.JniObject {
  static final _classRef = jniAccessors
      .getClassOf("android/widget/CalendarView\$OnDateChangeListener");
  CalendarView_OnDateChangeListener.fromRef(jni.JObject ref)
      : super.fromRef(ref);

  static final _id_onSelectedDayChange = jniAccessors.getMethodIDOf(
      _classRef, "onSelectedDayChange", "(Landroid/widget/CalendarView;III)V");

  /// from: public abstract void onSelectedDayChange(android.widget.CalendarView view, int year, int month, int dayOfMonth)
  ///
  /// Called upon change of the selected day.
  ///@param view The view associated with this listener.
  /// This value must never be {@code null}.
  ///@param year The year that was set.
  ///@param month The month that was set [0-11].
  ///@param dayOfMonth The day of the month that was set.
  void onSelectedDayChange(
          CalendarView view, int year, int month, int dayOfMonth) =>
      jniAccessors.callMethodWithArgs(
          reference,
          _id_onSelectedDayChange,
          jni.JniType.voidType,
          [view.reference, year, month, dayOfMonth]).check();
}
