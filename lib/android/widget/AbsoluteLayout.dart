// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../view/ViewGroup.dart" as viewgroup_;

import "../content/Context.dart" as context_;

import "../util/AttributeSet.dart" as attributeset_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.widget.AbsoluteLayout
///
/// A layout that lets you specify exact locations (x/y coordinates) of its
/// children. Absolute layouts are less flexible and harder to maintain than
/// other types of layouts without absolute positioning.
///
/// <strong>XML attributes</strong>
///  See android.R.styleable\#ViewGroup ViewGroup Attributes, android.R.styleable\#View View Attributes
///
///@deprecated Use android.widget.FrameLayout, android.widget.RelativeLayout
///             or a custom layout instead.
class AbsoluteLayout extends viewgroup_.ViewGroup {
  static final _classRef =
      jniAccessors.getClassOf("android/widget/AbsoluteLayout");
  AbsoluteLayout.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "(Landroid/content/Context;)V");

  /// from: public void <init>(android.content.Context context)
  /// The returned object must be deleted after use, by calling the `delete` method.
  AbsoluteLayout(context_.Context context)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor, [context.reference]).object);

  static final _id_ctor1 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/util/AttributeSet;)V");

  /// from: public void <init>(android.content.Context context, android.util.AttributeSet attrs)
  /// The returned object must be deleted after use, by calling the `delete` method.
  AbsoluteLayout.ctor1(
      context_.Context context, attributeset_.AttributeSet attrs)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor1, [context.reference, attrs.reference]).object);

  static final _id_ctor2 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/util/AttributeSet;I)V");

  /// from: public void <init>(android.content.Context context, android.util.AttributeSet attrs, int defStyleAttr)
  /// The returned object must be deleted after use, by calling the `delete` method.
  AbsoluteLayout.ctor2(context_.Context context,
      attributeset_.AttributeSet attrs, int defStyleAttr)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor2,
            [context.reference, attrs.reference, defStyleAttr]).object);

  static final _id_ctor3 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/util/AttributeSet;II)V");

  /// from: public void <init>(android.content.Context context, android.util.AttributeSet attrs, int defStyleAttr, int defStyleRes)
  /// The returned object must be deleted after use, by calling the `delete` method.
  AbsoluteLayout.ctor3(context_.Context context,
      attributeset_.AttributeSet attrs, int defStyleAttr, int defStyleRes)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor3, [
          context.reference,
          attrs.reference,
          defStyleAttr,
          defStyleRes
        ]).object);

  static final _id_onMeasure1 =
      jniAccessors.getMethodIDOf(_classRef, "onMeasure", "(II)V");

  /// from: protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
  void onMeasure1(int widthMeasureSpec, int heightMeasureSpec) =>
      jniAccessors.callMethodWithArgs(reference, _id_onMeasure1,
          jni.JniType.voidType, [widthMeasureSpec, heightMeasureSpec]).check();

  static final _id_generateDefaultLayoutParams = jniAccessors.getMethodIDOf(
      _classRef,
      "generateDefaultLayoutParams",
      "()Landroid/view/ViewGroup\$LayoutParams;");

  /// from: protected android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns a set of layout parameters with a width of
  /// android.view.ViewGroup.LayoutParams\#WRAP_CONTENT,
  /// a height of android.view.ViewGroup.LayoutParams\#WRAP_CONTENT
  /// and with the coordinates (0, 0).
  viewgroup_.ViewGroup_LayoutParams generateDefaultLayoutParams() =>
      viewgroup_.ViewGroup_LayoutParams.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_generateDefaultLayoutParams,
          jni.JniType.objectType, []).object);

  static final _id_onLayout =
      jniAccessors.getMethodIDOf(_classRef, "onLayout", "(ZIIII)V");

  /// from: protected void onLayout(boolean changed, int l, int t, int r, int b)
  void onLayout(bool changed, int l, int t, int r, int b) =>
      jniAccessors.callMethodWithArgs(reference, _id_onLayout,
          jni.JniType.voidType, [changed, l, t, r, b]).check();

  static final _id_generateLayoutParams = jniAccessors.getMethodIDOf(
      _classRef,
      "generateLayoutParams",
      "(Landroid/util/AttributeSet;)Landroid/view/ViewGroup\$LayoutParams;");

  /// from: public android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet attrs)
  /// The returned object must be deleted after use, by calling the `delete` method.
  viewgroup_.ViewGroup_LayoutParams generateLayoutParams(
          attributeset_.AttributeSet attrs) =>
      viewgroup_.ViewGroup_LayoutParams.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_generateLayoutParams,
          jni.JniType.objectType,
          [attrs.reference]).object);

  static final _id_checkLayoutParams = jniAccessors.getMethodIDOf(_classRef,
      "checkLayoutParams", "(Landroid/view/ViewGroup\$LayoutParams;)Z");

  /// from: protected boolean checkLayoutParams(android.view.ViewGroup.LayoutParams p)
  bool checkLayoutParams(viewgroup_.ViewGroup_LayoutParams p) =>
      jniAccessors.callMethodWithArgs(reference, _id_checkLayoutParams,
          jni.JniType.booleanType, [p.reference]).boolean;

  static final _id_generateLayoutParams1 = jniAccessors.getMethodIDOf(
      _classRef,
      "generateLayoutParams",
      "(Landroid/view/ViewGroup\$LayoutParams;)Landroid/view/ViewGroup\$LayoutParams;");

  /// from: protected android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams p)
  /// The returned object must be deleted after use, by calling the `delete` method.
  viewgroup_.ViewGroup_LayoutParams generateLayoutParams1(
          viewgroup_.ViewGroup_LayoutParams p) =>
      viewgroup_.ViewGroup_LayoutParams.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_generateLayoutParams1,
          jni.JniType.objectType,
          [p.reference]).object);

  static final _id_shouldDelayChildPressedState = jniAccessors.getMethodIDOf(
      _classRef, "shouldDelayChildPressedState", "()Z");

  /// from: public boolean shouldDelayChildPressedState()
  bool shouldDelayChildPressedState() => jniAccessors.callMethodWithArgs(
      reference,
      _id_shouldDelayChildPressedState,
      jni.JniType.booleanType, []).boolean;
}

/// from: android.widget.AbsoluteLayout$LayoutParams
///
/// Per-child layout information associated with AbsoluteLayout.
/// See
/// android.R.styleable\#AbsoluteLayout_Layout Absolute Layout Attributes
/// for a list of all child view attributes that this class supports.
class AbsoluteLayout_LayoutParams extends viewgroup_.ViewGroup_LayoutParams {
  static final _classRef =
      jniAccessors.getClassOf("android/widget/AbsoluteLayout\$LayoutParams");
  AbsoluteLayout_LayoutParams.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_x = jniAccessors.getFieldIDOf(_classRef, "x", "I");

  /// from: public int x
  ///
  /// The horizontal, or X, location of the child within the view group.
  int get x =>
      jniAccessors.getField(reference, _id_x, jni.JniType.intType).integer;

  /// from: public int x
  ///
  /// The horizontal, or X, location of the child within the view group.
  set x(int value) => jniEnv.SetIntField(reference, _id_x, value);

  static final _id_y = jniAccessors.getFieldIDOf(_classRef, "y", "I");

  /// from: public int y
  ///
  /// The vertical, or Y, location of the child within the view group.
  int get y =>
      jniAccessors.getField(reference, _id_y, jni.JniType.intType).integer;

  /// from: public int y
  ///
  /// The vertical, or Y, location of the child within the view group.
  set y(int value) => jniEnv.SetIntField(reference, _id_y, value);

  static final _id_ctor3 =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(IIII)V");

  /// from: public void <init>(int width, int height, int x, int y)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a new set of layout parameters with the specified width,
  /// height and location.
  ///@param width the width, either \#MATCH_PARENT,
  ///         \#WRAP_CONTENT or a fixed size in pixels
  ///@param height the height, either \#MATCH_PARENT,
  ///         \#WRAP_CONTENT or a fixed size in pixels
  ///@param x the X location of the child
  ///@param y the Y location of the child
  AbsoluteLayout_LayoutParams.ctor3(int width, int height, int x, int y)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor3, [width, height, x, y]).object);

  static final _id_ctor = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/util/AttributeSet;)V");

  /// from: public void <init>(android.content.Context c, android.util.AttributeSet attrs)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a new set of layout parameters. The values are extracted from
  /// the supplied attributes set and context. The XML attributes mapped
  /// to this set of layout parameters are:
  ///
  /// <ul>
  ///   <li><code>layout_x</code>: the X location of the child</li>
  ///   <li><code>layout_y</code>: the Y location of the child</li>
  ///   <li>All the XML attributes from
  ///   android.view.ViewGroup.LayoutParams</li>
  /// </ul>
  ///@param c the application environment
  ///@param attrs the set of attributes from which to extract the layout
  ///              parameters values
  AbsoluteLayout_LayoutParams(
      context_.Context c, attributeset_.AttributeSet attrs)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor, [c.reference, attrs.reference]).object);

  static final _id_ctor2 = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "(Landroid/view/ViewGroup\$LayoutParams;)V");

  /// from: public void <init>(android.view.ViewGroup.LayoutParams source)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// {@inheritDoc}
  AbsoluteLayout_LayoutParams.ctor2(viewgroup_.ViewGroup_LayoutParams source)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor2, [source.reference]).object);

  static final _id_debug = jniAccessors.getMethodIDOf(
      _classRef, "debug", "(Ljava/lang/String;)Ljava/lang/String;");

  /// from: public java.lang.String debug(java.lang.String output)
  /// The returned object must be deleted after use, by calling the `delete` method.
  jni.JniString debug(jni.JniString output) =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_debug, jni.JniType.objectType, [output.reference]).object);
}
