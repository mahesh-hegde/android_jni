// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.drm.DrmConvertedStatus
///
/// An entity class that wraps converted data, conversion status, and the
/// offset for appending the header and body signature to the converted data.
/// An instance of this class may be created two ways by the drm framework:
/// a) a call to DrmManagerClient\#convertData DrmManagerClient.convertData() and
/// b) a call to DrmManagerClient\#closeConvertSession DrmManagerClient.closeConvertSession().
/// An valid offset value is provided only from a success call to
/// DrmManagerClient\#closeConvertSession DrmManagerClient.closeConvertSession().
class DrmConvertedStatus extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/drm/DrmConvertedStatus");
  DrmConvertedStatus.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int STATUS_ERROR
  ///
  /// Indicate a general failed conversion status.
  static const STATUS_ERROR = 3;

  /// from: static public final int STATUS_INPUTDATA_ERROR
  ///
  /// Indicate a failed conversion status due to input data.
  static const STATUS_INPUTDATA_ERROR = 2;

  /// from: static public final int STATUS_OK
  ///
  /// Indicate the conversion status is successful.
  static const STATUS_OK = 1;

  static final _id_convertedData =
      jniAccessors.getFieldIDOf(_classRef, "convertedData", "[B");

  /// from: public final byte[] convertedData
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Converted data. It is optional and thus can be null.
  jni.JniObject get convertedData => jni.JniObject.fromRef(jniAccessors
      .getField(reference, _id_convertedData, jni.JniType.objectType)
      .object);

  static final _id_offset = jniAccessors.getFieldIDOf(_classRef, "offset", "I");

  /// from: public final int offset
  ///
  /// Offset value for the body and header signature.
  int get offset =>
      jniAccessors.getField(reference, _id_offset, jni.JniType.intType).integer;

  static final _id_statusCode =
      jniAccessors.getFieldIDOf(_classRef, "statusCode", "I");

  /// from: public final int statusCode
  ///
  /// Status code for the conversion. Must be one of the defined status
  /// constants above.
  int get statusCode => jniAccessors
      .getField(reference, _id_statusCode, jni.JniType.intType)
      .integer;

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(I[BI)V");

  /// from: public void <init>(int statusCode, byte[] convertedData, int offset)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a <code>DrmConvertedStatus</code> object with the specified parameters.
  ///@param statusCode Conversion status. Must be one of the status code constants
  /// defined above.
  ///@param convertedData Converted data. It can be null.
  ///@param offset Offset value for appending the header and body signature.
  DrmConvertedStatus(int statusCode, jni.JniObject convertedData, int offset)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor,
            [statusCode, convertedData.reference, offset]).object);
}
