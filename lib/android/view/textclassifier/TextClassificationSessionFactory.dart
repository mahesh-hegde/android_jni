// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "TextClassifier.dart" as textclassifier_;

import "TextClassificationContext.dart" as textclassificationcontext_;
import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.view.textclassifier.TextClassificationSessionFactory
///
/// An interface for creating a session-aware TextClassifier.
///@see TextClassificationManager\#createTextClassificationSession(TextClassificationContext)
class TextClassificationSessionFactory extends jni.JniObject {
  static final _classRef = jniAccessors.getClassOf(
      "android/view/textclassifier/TextClassificationSessionFactory");
  TextClassificationSessionFactory.fromRef(jni.JObject ref)
      : super.fromRef(ref);

  static final _id_createTextClassificationSession = jniAccessors.getMethodIDOf(
      _classRef,
      "createTextClassificationSession",
      "(Landroid/view/textclassifier/TextClassificationContext;)Landroid/view/textclassifier/TextClassifier;");

  /// from: public abstract android.view.textclassifier.TextClassifier createTextClassificationSession(android.view.textclassifier.TextClassificationContext classificationContext)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates and returns a session-aware TextClassifier.
  ///@param classificationContext the classification context
  ///
  /// This value must never be {@code null}.
  ///@return This value will never be {@code null}.
  textclassifier_.TextClassifier createTextClassificationSession(
          textclassificationcontext_.TextClassificationContext
              classificationContext) =>
      textclassifier_.TextClassifier.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_createTextClassificationSession,
          jni.JniType.objectType,
          [classificationContext.reference]).object);
}
