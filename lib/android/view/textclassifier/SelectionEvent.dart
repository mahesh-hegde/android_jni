// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../os/Parcelable.dart" as parcelable_;

import "../../os/Parcel.dart" as parcel_;

import "TextClassification.dart" as textclassification_;

import "TextSelection.dart" as textselection_;

import "TextClassificationSessionId.dart" as textclassificationsessionid_;
import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.view.textclassifier.SelectionEvent
///
/// A selection event.
/// Specify index parameters as word token indices.
class SelectionEvent extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/view/textclassifier/SelectionEvent");
  SelectionEvent.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int ACTION_ABANDON
  ///
  /// User abandoned the selection.
  static const ACTION_ABANDON = 107;

  /// from: static public final int ACTION_COPY
  ///
  /// User copied the selection.
  static const ACTION_COPY = 101;

  /// from: static public final int ACTION_CUT
  ///
  /// User cut the selection.
  static const ACTION_CUT = 103;

  /// from: static public final int ACTION_DRAG
  ///
  /// User dragged+dropped the selection.
  static const ACTION_DRAG = 106;

  /// from: static public final int ACTION_OTHER
  ///
  /// User performed an action on the selection.
  static const ACTION_OTHER = 108;

  /// from: static public final int ACTION_OVERTYPE
  ///
  /// User typed over the selection.
  static const ACTION_OVERTYPE = 100;

  /// from: static public final int ACTION_PASTE
  ///
  /// User pasted over the selection.
  static const ACTION_PASTE = 102;

  /// from: static public final int ACTION_RESET
  ///
  /// User reset the smart selection.
  static const ACTION_RESET = 201;

  /// from: static public final int ACTION_SELECT_ALL
  ///
  /// User activated Select All
  static const ACTION_SELECT_ALL = 200;

  /// from: static public final int ACTION_SHARE
  ///
  /// User shared the selection.
  static const ACTION_SHARE = 104;

  /// from: static public final int ACTION_SMART_SHARE
  ///
  /// User clicked the textAssist menu item.
  static const ACTION_SMART_SHARE = 105;

  static final _id_CREATOR = jniAccessors.getStaticFieldIDOf(
      _classRef, "CREATOR", "Landroid/os/Parcelable\$Creator;");

  /// from: static public final android.os.Parcelable.Creator<android.view.textclassifier.SelectionEvent> CREATOR
  /// The returned object must be deleted after use, by calling the `delete` method.
  static parcelable_.Parcelable_Creator get CREATOR =>
      parcelable_.Parcelable_Creator.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CREATOR, jni.JniType.objectType)
          .object);

  /// from: static public final int EVENT_AUTO_SELECTION
  ///
  /// Something else other than User or the default TextClassifier triggered a selection.
  static const EVENT_AUTO_SELECTION = 5;

  /// from: static public final int EVENT_SELECTION_MODIFIED
  ///
  /// User modified an existing selection.
  static const EVENT_SELECTION_MODIFIED = 2;

  /// from: static public final int EVENT_SELECTION_STARTED
  ///
  /// User started a new selection.
  static const EVENT_SELECTION_STARTED = 1;

  /// from: static public final int EVENT_SMART_SELECTION_MULTI
  ///
  /// Smart selection triggered spanning multiple tokens (words).
  static const EVENT_SMART_SELECTION_MULTI = 4;

  /// from: static public final int EVENT_SMART_SELECTION_SINGLE
  ///
  /// Smart selection triggered for a single token (word).
  static const EVENT_SMART_SELECTION_SINGLE = 3;

  /// from: static public final int INVOCATION_LINK
  ///
  /// Selection was invoked by the user tapping on a link.
  static const INVOCATION_LINK = 2;

  /// from: static public final int INVOCATION_MANUAL
  ///
  /// Selection was invoked by the user long pressing, double tapping, or dragging to select.
  static const INVOCATION_MANUAL = 1;

  /// from: static public final int INVOCATION_UNKNOWN
  ///
  /// Unknown invocation method
  static const INVOCATION_UNKNOWN = 0;

  static final _id_writeToParcel = jniAccessors.getMethodIDOf(
      _classRef, "writeToParcel", "(Landroid/os/Parcel;I)V");

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(parcel_.Parcel dest, int flags) =>
      jniAccessors.callMethodWithArgs(reference, _id_writeToParcel,
          jni.JniType.voidType, [dest.reference, flags]).check();

  static final _id_describeContents =
      jniAccessors.getMethodIDOf(_classRef, "describeContents", "()I");

  /// from: public int describeContents()
  int describeContents() => jniAccessors.callMethodWithArgs(
      reference, _id_describeContents, jni.JniType.intType, []).integer;

  static final _id_createSelectionStartedEvent =
      jniAccessors.getStaticMethodIDOf(_classRef, "createSelectionStartedEvent",
          "(II)Landroid/view/textclassifier/SelectionEvent;");

  /// from: static public android.view.textclassifier.SelectionEvent createSelectionStartedEvent(int invocationMethod, int start)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a "selection started" event.
  ///@param invocationMethod the way the selection was triggered
  /// Value is android.view.textclassifier.SelectionEvent\#INVOCATION_MANUAL, android.view.textclassifier.SelectionEvent\#INVOCATION_LINK, or android.view.textclassifier.SelectionEvent\#INVOCATION_UNKNOWN
  ///@param start the index of the selected text
  ///@return This value will never be {@code null}.
  static SelectionEvent createSelectionStartedEvent(
          int invocationMethod, int start) =>
      SelectionEvent.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_createSelectionStartedEvent,
          jni.JniType.objectType,
          [invocationMethod, start]).object);

  static final _id_createSelectionModifiedEvent =
      jniAccessors.getStaticMethodIDOf(
          _classRef,
          "createSelectionModifiedEvent",
          "(II)Landroid/view/textclassifier/SelectionEvent;");

  /// from: static public android.view.textclassifier.SelectionEvent createSelectionModifiedEvent(int start, int end)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a "selection modified" event.
  /// Use when the user modifies the selection.
  ///@param start the start (inclusive) index of the selection
  ///@param end the end (exclusive) index of the selection
  ///@throws IllegalArgumentException if end is less than start
  ///@return This value will never be {@code null}.
  static SelectionEvent createSelectionModifiedEvent(int start, int end) =>
      SelectionEvent.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_createSelectionModifiedEvent,
          jni.JniType.objectType,
          [start, end]).object);

  static final _id_createSelectionModifiedEvent1 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "createSelectionModifiedEvent",
      "(IILandroid/view/textclassifier/TextClassification;)Landroid/view/textclassifier/SelectionEvent;");

  /// from: static public android.view.textclassifier.SelectionEvent createSelectionModifiedEvent(int start, int end, android.view.textclassifier.TextClassification classification)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a "selection modified" event.
  /// Use when the user modifies the selection and the selection's entity type is known.
  ///@param start the start (inclusive) index of the selection
  ///@param end the end (exclusive) index of the selection
  ///@param classification the TextClassification object returned by the TextClassifier that
  ///      classified the selected text
  ///
  /// This value must never be {@code null}.
  ///@throws IllegalArgumentException if end is less than start
  ///@return This value will never be {@code null}.
  static SelectionEvent createSelectionModifiedEvent1(int start, int end,
          textclassification_.TextClassification classification) =>
      SelectionEvent.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_createSelectionModifiedEvent1,
          jni.JniType.objectType,
          [start, end, classification.reference]).object);

  static final _id_createSelectionModifiedEvent2 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "createSelectionModifiedEvent",
      "(IILandroid/view/textclassifier/TextSelection;)Landroid/view/textclassifier/SelectionEvent;");

  /// from: static public android.view.textclassifier.SelectionEvent createSelectionModifiedEvent(int start, int end, android.view.textclassifier.TextSelection selection)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a "selection modified" event.
  /// Use when a TextClassifier modifies the selection.
  ///@param start the start (inclusive) index of the selection
  ///@param end the end (exclusive) index of the selection
  ///@param selection the TextSelection object returned by the TextClassifier for the
  ///      specified selection
  ///
  /// This value must never be {@code null}.
  ///@throws IllegalArgumentException if end is less than start
  ///@return This value will never be {@code null}.
  static SelectionEvent createSelectionModifiedEvent2(
          int start, int end, textselection_.TextSelection selection) =>
      SelectionEvent.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_createSelectionModifiedEvent2,
          jni.JniType.objectType,
          [start, end, selection.reference]).object);

  static final _id_createSelectionActionEvent =
      jniAccessors.getStaticMethodIDOf(_classRef, "createSelectionActionEvent",
          "(III)Landroid/view/textclassifier/SelectionEvent;");

  /// from: static public android.view.textclassifier.SelectionEvent createSelectionActionEvent(int start, int end, int actionType)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates an event specifying an action taken on a selection.
  /// Use when the user clicks on an action to act on the selected text.
  ///@param start the start (inclusive) index of the selection
  ///@param end the end (exclusive) index of the selection
  ///@param actionType the action that was performed on the selection
  ///
  /// Value is android.view.textclassifier.SelectionEvent\#ACTION_OVERTYPE, android.view.textclassifier.SelectionEvent\#ACTION_COPY, android.view.textclassifier.SelectionEvent\#ACTION_PASTE, android.view.textclassifier.SelectionEvent\#ACTION_CUT, android.view.textclassifier.SelectionEvent\#ACTION_SHARE, android.view.textclassifier.SelectionEvent\#ACTION_SMART_SHARE, android.view.textclassifier.SelectionEvent\#ACTION_DRAG, android.view.textclassifier.SelectionEvent\#ACTION_ABANDON, android.view.textclassifier.SelectionEvent\#ACTION_OTHER, android.view.textclassifier.SelectionEvent\#ACTION_SELECT_ALL, or android.view.textclassifier.SelectionEvent\#ACTION_RESET
  ///@throws IllegalArgumentException if end is less than start
  ///@return This value will never be {@code null}.
  static SelectionEvent createSelectionActionEvent(
          int start, int end, int actionType) =>
      SelectionEvent.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_createSelectionActionEvent,
          jni.JniType.objectType,
          [start, end, actionType]).object);

  static final _id_createSelectionActionEvent1 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "createSelectionActionEvent",
      "(IIILandroid/view/textclassifier/TextClassification;)Landroid/view/textclassifier/SelectionEvent;");

  /// from: static public android.view.textclassifier.SelectionEvent createSelectionActionEvent(int start, int end, int actionType, android.view.textclassifier.TextClassification classification)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates an event specifying an action taken on a selection.
  /// Use when the user clicks on an action to act on the selected text and the selection's
  /// entity type is known.
  ///@param start the start (inclusive) index of the selection
  ///@param end the end (exclusive) index of the selection
  ///@param actionType the action that was performed on the selection
  /// Value is android.view.textclassifier.SelectionEvent\#ACTION_OVERTYPE, android.view.textclassifier.SelectionEvent\#ACTION_COPY, android.view.textclassifier.SelectionEvent\#ACTION_PASTE, android.view.textclassifier.SelectionEvent\#ACTION_CUT, android.view.textclassifier.SelectionEvent\#ACTION_SHARE, android.view.textclassifier.SelectionEvent\#ACTION_SMART_SHARE, android.view.textclassifier.SelectionEvent\#ACTION_DRAG, android.view.textclassifier.SelectionEvent\#ACTION_ABANDON, android.view.textclassifier.SelectionEvent\#ACTION_OTHER, android.view.textclassifier.SelectionEvent\#ACTION_SELECT_ALL, or android.view.textclassifier.SelectionEvent\#ACTION_RESET
  ///@param classification the TextClassification object returned by the TextClassifier that
  ///      classified the selected text
  ///
  /// This value must never be {@code null}.
  ///@throws IllegalArgumentException if end is less than start
  ///@throws IllegalArgumentException If actionType is not a valid SelectionEvent actionType
  ///@return This value will never be {@code null}.
  static SelectionEvent createSelectionActionEvent1(
          int start,
          int end,
          int actionType,
          textclassification_.TextClassification classification) =>
      SelectionEvent.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_createSelectionActionEvent1,
          jni.JniType.objectType,
          [start, end, actionType, classification.reference]).object);

  static final _id_getEventType =
      jniAccessors.getMethodIDOf(_classRef, "getEventType", "()I");

  /// from: public int getEventType()
  ///
  /// Returns the type of event that was triggered. e.g. \#ACTION_COPY.
  ///@return Value is android.view.textclassifier.SelectionEvent\#ACTION_OVERTYPE, android.view.textclassifier.SelectionEvent\#ACTION_COPY, android.view.textclassifier.SelectionEvent\#ACTION_PASTE, android.view.textclassifier.SelectionEvent\#ACTION_CUT, android.view.textclassifier.SelectionEvent\#ACTION_SHARE, android.view.textclassifier.SelectionEvent\#ACTION_SMART_SHARE, android.view.textclassifier.SelectionEvent\#ACTION_DRAG, android.view.textclassifier.SelectionEvent\#ACTION_ABANDON, android.view.textclassifier.SelectionEvent\#ACTION_OTHER, android.view.textclassifier.SelectionEvent\#ACTION_SELECT_ALL, android.view.textclassifier.SelectionEvent\#ACTION_RESET, android.view.textclassifier.SelectionEvent\#EVENT_SELECTION_STARTED, android.view.textclassifier.SelectionEvent\#EVENT_SELECTION_MODIFIED, android.view.textclassifier.SelectionEvent\#EVENT_SMART_SELECTION_SINGLE, android.view.textclassifier.SelectionEvent\#EVENT_SMART_SELECTION_MULTI, or android.view.textclassifier.SelectionEvent\#EVENT_AUTO_SELECTION
  int getEventType() => jniAccessors.callMethodWithArgs(
      reference, _id_getEventType, jni.JniType.intType, []).integer;

  static final _id_getEntityType = jniAccessors.getMethodIDOf(
      _classRef, "getEntityType", "()Ljava/lang/String;");

  /// from: public java.lang.String getEntityType()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the type of entity that is associated with this event. e.g.
  /// android.view.textclassifier.TextClassifier\#TYPE_EMAIL.
  ///@return Value is android.view.textclassifier.TextClassifier\#TYPE_UNKNOWN, android.view.textclassifier.TextClassifier\#TYPE_OTHER, android.view.textclassifier.TextClassifier\#TYPE_EMAIL, android.view.textclassifier.TextClassifier\#TYPE_PHONE, android.view.textclassifier.TextClassifier\#TYPE_ADDRESS, android.view.textclassifier.TextClassifier\#TYPE_URL, android.view.textclassifier.TextClassifier\#TYPE_DATE, android.view.textclassifier.TextClassifier\#TYPE_DATE_TIME, or android.view.textclassifier.TextClassifier\#TYPE_FLIGHT_NUMBER
  ///
  /// This value will never be {@code null}.
  jni.JniString getEntityType() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getEntityType, jni.JniType.objectType, []).object);

  static final _id_getPackageName = jniAccessors.getMethodIDOf(
      _classRef, "getPackageName", "()Ljava/lang/String;");

  /// from: public java.lang.String getPackageName()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the package name of the app that this event originated in.
  ///@return This value will never be {@code null}.
  jni.JniString getPackageName() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getPackageName, jni.JniType.objectType, []).object);

  static final _id_getWidgetType = jniAccessors.getMethodIDOf(
      _classRef, "getWidgetType", "()Ljava/lang/String;");

  /// from: public java.lang.String getWidgetType()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the type of widget that was involved in triggering this event.
  ///@return Value is android.view.textclassifier.TextClassifier\#WIDGET_TYPE_TEXTVIEW, android.view.textclassifier.TextClassifier\#WIDGET_TYPE_EDITTEXT, android.view.textclassifier.TextClassifier\#WIDGET_TYPE_UNSELECTABLE_TEXTVIEW, android.view.textclassifier.TextClassifier\#WIDGET_TYPE_WEBVIEW, android.view.textclassifier.TextClassifier\#WIDGET_TYPE_EDIT_WEBVIEW, android.view.textclassifier.TextClassifier\#WIDGET_TYPE_CUSTOM_TEXTVIEW, android.view.textclassifier.TextClassifier\#WIDGET_TYPE_CUSTOM_EDITTEXT, android.view.textclassifier.TextClassifier\#WIDGET_TYPE_CUSTOM_UNSELECTABLE_TEXTVIEW, or android.view.textclassifier.TextClassifier\#WIDGET_TYPE_UNKNOWN
  ///
  /// This value will never be {@code null}.
  jni.JniString getWidgetType() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getWidgetType, jni.JniType.objectType, []).object);

  static final _id_getWidgetVersion = jniAccessors.getMethodIDOf(
      _classRef, "getWidgetVersion", "()Ljava/lang/String;");

  /// from: public java.lang.String getWidgetVersion()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns a string version info for the widget this event was triggered in.
  ///@return This value may be {@code null}.
  jni.JniString getWidgetVersion() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getWidgetVersion, jni.JniType.objectType, []).object);

  static final _id_getInvocationMethod =
      jniAccessors.getMethodIDOf(_classRef, "getInvocationMethod", "()I");

  /// from: public int getInvocationMethod()
  ///
  /// Returns the way the selection mode was invoked.
  ///@return Value is android.view.textclassifier.SelectionEvent\#INVOCATION_MANUAL, android.view.textclassifier.SelectionEvent\#INVOCATION_LINK, or android.view.textclassifier.SelectionEvent\#INVOCATION_UNKNOWN
  int getInvocationMethod() => jniAccessors.callMethodWithArgs(
      reference, _id_getInvocationMethod, jni.JniType.intType, []).integer;

  static final _id_getResultId = jniAccessors.getMethodIDOf(
      _classRef, "getResultId", "()Ljava/lang/String;");

  /// from: public java.lang.String getResultId()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the id of the text classifier result associated with this event.
  ///@return This value may be {@code null}.
  jni.JniString getResultId() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getResultId, jni.JniType.objectType, []).object);

  static final _id_getEventTime =
      jniAccessors.getMethodIDOf(_classRef, "getEventTime", "()J");

  /// from: public long getEventTime()
  ///
  /// Returns the time this event was triggered.
  int getEventTime() => jniAccessors.callMethodWithArgs(
      reference, _id_getEventTime, jni.JniType.longType, []).long;

  static final _id_getDurationSinceSessionStart = jniAccessors.getMethodIDOf(
      _classRef, "getDurationSinceSessionStart", "()J");

  /// from: public long getDurationSinceSessionStart()
  ///
  /// Returns the duration in ms between when this event was triggered and when the first event in
  /// the selection session was triggered.
  int getDurationSinceSessionStart() => jniAccessors.callMethodWithArgs(
      reference,
      _id_getDurationSinceSessionStart,
      jni.JniType.longType, []).long;

  static final _id_getDurationSincePreviousEvent = jniAccessors.getMethodIDOf(
      _classRef, "getDurationSincePreviousEvent", "()J");

  /// from: public long getDurationSincePreviousEvent()
  ///
  /// Returns the duration in ms between when this event was triggered and when the previous event
  /// in the selection session was triggered.
  int getDurationSincePreviousEvent() => jniAccessors.callMethodWithArgs(
      reference,
      _id_getDurationSincePreviousEvent,
      jni.JniType.longType, []).long;

  static final _id_getEventIndex =
      jniAccessors.getMethodIDOf(_classRef, "getEventIndex", "()I");

  /// from: public int getEventIndex()
  ///
  /// Returns the index (e.g.&nbsp;1st event, 2nd event, etc.) of this event in the selection session.
  int getEventIndex() => jniAccessors.callMethodWithArgs(
      reference, _id_getEventIndex, jni.JniType.intType, []).integer;

  static final _id_getSessionId = jniAccessors.getMethodIDOf(
      _classRef,
      "getSessionId",
      "()Landroid/view/textclassifier/TextClassificationSessionId;");

  /// from: public android.view.textclassifier.TextClassificationSessionId getSessionId()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the selection session id.
  ///@return This value may be {@code null}.
  textclassificationsessionid_.TextClassificationSessionId getSessionId() =>
      textclassificationsessionid_.TextClassificationSessionId.fromRef(
          jniAccessors.callMethodWithArgs(
              reference, _id_getSessionId, jni.JniType.objectType, []).object);

  static final _id_getStart =
      jniAccessors.getMethodIDOf(_classRef, "getStart", "()I");

  /// from: public int getStart()
  ///
  /// Returns the start index of this events relative to the index of the start selection
  /// event in the selection session.
  int getStart() => jniAccessors.callMethodWithArgs(
      reference, _id_getStart, jni.JniType.intType, []).integer;

  static final _id_getEnd =
      jniAccessors.getMethodIDOf(_classRef, "getEnd", "()I");

  /// from: public int getEnd()
  ///
  /// Returns the end index of this events relative to the index of the start selection
  /// event in the selection session.
  int getEnd() => jniAccessors.callMethodWithArgs(
      reference, _id_getEnd, jni.JniType.intType, []).integer;

  static final _id_getSmartStart =
      jniAccessors.getMethodIDOf(_classRef, "getSmartStart", "()I");

  /// from: public int getSmartStart()
  ///
  /// Returns the start index of this events relative to the index of the smart selection
  /// event in the selection session.
  int getSmartStart() => jniAccessors.callMethodWithArgs(
      reference, _id_getSmartStart, jni.JniType.intType, []).integer;

  static final _id_getSmartEnd =
      jniAccessors.getMethodIDOf(_classRef, "getSmartEnd", "()I");

  /// from: public int getSmartEnd()
  ///
  /// Returns the end index of this events relative to the index of the smart selection
  /// event in the selection session.
  int getSmartEnd() => jniAccessors.callMethodWithArgs(
      reference, _id_getSmartEnd, jni.JniType.intType, []).integer;

  static final _id_isTerminal =
      jniAccessors.getStaticMethodIDOf(_classRef, "isTerminal", "(I)Z");

  /// from: static public boolean isTerminal(int eventType)
  ///
  /// Returns true if the eventType is a terminal event type. Otherwise returns false.
  /// A terminal event is an event that ends a selection interaction.
  ///@param eventType Value is android.view.textclassifier.SelectionEvent\#ACTION_OVERTYPE, android.view.textclassifier.SelectionEvent\#ACTION_COPY, android.view.textclassifier.SelectionEvent\#ACTION_PASTE, android.view.textclassifier.SelectionEvent\#ACTION_CUT, android.view.textclassifier.SelectionEvent\#ACTION_SHARE, android.view.textclassifier.SelectionEvent\#ACTION_SMART_SHARE, android.view.textclassifier.SelectionEvent\#ACTION_DRAG, android.view.textclassifier.SelectionEvent\#ACTION_ABANDON, android.view.textclassifier.SelectionEvent\#ACTION_OTHER, android.view.textclassifier.SelectionEvent\#ACTION_SELECT_ALL, android.view.textclassifier.SelectionEvent\#ACTION_RESET, android.view.textclassifier.SelectionEvent\#EVENT_SELECTION_STARTED, android.view.textclassifier.SelectionEvent\#EVENT_SELECTION_MODIFIED, android.view.textclassifier.SelectionEvent\#EVENT_SMART_SELECTION_SINGLE, android.view.textclassifier.SelectionEvent\#EVENT_SMART_SELECTION_MULTI, or android.view.textclassifier.SelectionEvent\#EVENT_AUTO_SELECTION
  static bool isTerminal(int eventType) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_isTerminal,
          jni.JniType.booleanType, [eventType]).boolean;

  static final _id_hashCode1 =
      jniAccessors.getMethodIDOf(_classRef, "hashCode", "()I");

  /// from: public int hashCode()
  int hashCode1() => jniAccessors.callMethodWithArgs(
      reference, _id_hashCode1, jni.JniType.intType, []).integer;

  static final _id_equals1 =
      jniAccessors.getMethodIDOf(_classRef, "equals", "(Ljava/lang/Object;)Z");

  /// from: public boolean equals(java.lang.Object obj)
  bool equals1(jni.JniObject obj) => jniAccessors.callMethodWithArgs(
      reference, _id_equals1, jni.JniType.booleanType, [obj.reference]).boolean;

  static final _id_toString1 =
      jniAccessors.getMethodIDOf(_classRef, "toString", "()Ljava/lang/String;");

  /// from: public java.lang.String toString()
  /// The returned object must be deleted after use, by calling the `delete` method.
  jni.JniString toString1() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_toString1, jni.JniType.objectType, []).object);
}
