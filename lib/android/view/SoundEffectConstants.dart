// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.view.SoundEffectConstants
///
/// Constants to be used to play sound effects via View\#playSoundEffect(int)
class SoundEffectConstants extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/view/SoundEffectConstants");
  SoundEffectConstants.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int CLICK
  static const CLICK = 0;

  /// from: static public final int NAVIGATION_DOWN
  static const NAVIGATION_DOWN = 4;

  /// from: static public final int NAVIGATION_LEFT
  static const NAVIGATION_LEFT = 1;

  /// from: static public final int NAVIGATION_RIGHT
  static const NAVIGATION_RIGHT = 3;

  /// from: static public final int NAVIGATION_UP
  static const NAVIGATION_UP = 2;

  static final _id_getContantForFocusDirection = jniAccessors
      .getStaticMethodIDOf(_classRef, "getContantForFocusDirection", "(I)I");

  /// from: static public int getContantForFocusDirection(int direction)
  ///
  /// Get the sonification constant for the focus directions.
  ///@param direction One of View\#FOCUS_UP, View\#FOCUS_DOWN,
  ///     View\#FOCUS_LEFT, View\#FOCUS_RIGHT, View\#FOCUS_FORWARD
  ///     or View\#FOCUS_BACKWARD
  ///@return The appropriate sonification constant.
  ///@throws IllegalArgumentException when the passed direction is not one of the
  ///     documented values.
  static int getContantForFocusDirection(int direction) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_getContantForFocusDirection,
          jni.JniType.intType,
          [direction]).integer;
}
