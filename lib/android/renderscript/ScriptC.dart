// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "Script.dart" as script_;

import "RenderScript.dart" as renderscript_;

import "../content/res/Resources.dart" as resources_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.renderscript.ScriptC
///
/// The superclass for all user-defined scripts. This is only
/// intended to be used by the generated derived classes.
class ScriptC extends script_.Script {
  static final _classRef =
      jniAccessors.getClassOf("android/renderscript/ScriptC");
  ScriptC.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor1 = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "(ILandroid/renderscript/RenderScript;)V");

  /// from: protected void <init>(int id, android.renderscript.RenderScript rs)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Only intended for use by the generated derived classes.
  ///@param id
  ///@param rs
  ScriptC.ctor1(int id, renderscript_.RenderScript rs)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor1, [id, rs.reference]).object);

  static final _id_ctor = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "(JLandroid/renderscript/RenderScript;)V");

  /// from: protected void <init>(long id, android.renderscript.RenderScript rs)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Only intended for use by the generated derived classes.
  ///@param id
  ///@param rs
  ScriptC(int id, renderscript_.RenderScript rs)
      : super.fromRef(jniAccessors
            .newObjectWithArgs(_classRef, _id_ctor, [id, rs.reference]).object);

  static final _id_ctor2 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/renderscript/RenderScript;Landroid/content/res/Resources;I)V");

  /// from: protected void <init>(android.renderscript.RenderScript rs, android.content.res.Resources resources, int resourceID)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Only intended for use by the generated derived classes.
  ///@param rs
  ///@param resources
  ///@param resourceID
  ScriptC.ctor2(renderscript_.RenderScript rs, resources_.Resources resources,
      int resourceID)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor2,
            [rs.reference, resources.reference, resourceID]).object);

  static final _id_ctor3 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/renderscript/RenderScript;Ljava/lang/String;[B[B)V");

  /// from: protected void <init>(android.renderscript.RenderScript rs, java.lang.String resName, byte[] bitcode32, byte[] bitcode64)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Only intended for use by the generated derived classes.
  ///@param rs
  ScriptC.ctor3(renderscript_.RenderScript rs, jni.JniString resName,
      jni.JniObject bitcode32, jni.JniObject bitcode64)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor3, [
          rs.reference,
          resName.reference,
          bitcode32.reference,
          bitcode64.reference
        ]).object);
}
