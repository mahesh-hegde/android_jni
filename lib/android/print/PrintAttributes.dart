// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../os/Parcelable.dart" as parcelable_;

import "../os/Parcel.dart" as parcel_;

import "../content/pm/PackageManager.dart" as packagemanager_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.print.PrintAttributes
///
/// This class represents the attributes of a print job. These attributes
/// describe how the printed content should be laid out. For example, the
/// print attributes may state that the content should be laid out on a
/// letter size with 300 DPI (dots per inch) resolution, have a margin of
/// 10 mills (thousand of an inch) on all sides, and be black and white.
class PrintAttributes extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/print/PrintAttributes");
  PrintAttributes.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int COLOR_MODE_COLOR
  ///
  /// Color mode: Color color scheme, for example many colors are used.
  static const COLOR_MODE_COLOR = 2;

  /// from: static public final int COLOR_MODE_MONOCHROME
  ///
  /// Color mode: Monochrome color scheme, for example one color is used.
  static const COLOR_MODE_MONOCHROME = 1;

  static final _id_CREATOR = jniAccessors.getStaticFieldIDOf(
      _classRef, "CREATOR", "Landroid/os/Parcelable\$Creator;");

  /// from: static public final android.os.Parcelable.Creator<android.print.PrintAttributes> CREATOR
  /// The returned object must be deleted after use, by calling the `delete` method.
  static parcelable_.Parcelable_Creator get CREATOR =>
      parcelable_.Parcelable_Creator.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CREATOR, jni.JniType.objectType)
          .object);

  /// from: static public final int DUPLEX_MODE_LONG_EDGE
  ///
  /// Duplex mode: Pages are turned sideways along the long edge - like a book.
  static const DUPLEX_MODE_LONG_EDGE = 2;

  /// from: static public final int DUPLEX_MODE_NONE
  ///
  /// Duplex mode: No duplexing.
  static const DUPLEX_MODE_NONE = 1;

  /// from: static public final int DUPLEX_MODE_SHORT_EDGE
  ///
  /// Duplex mode: Pages are turned upwards along the short edge - like a notpad.
  static const DUPLEX_MODE_SHORT_EDGE = 4;

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  PrintAttributes()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_getMediaSize = jniAccessors.getMethodIDOf(_classRef,
      "getMediaSize", "()Landroid/print/PrintAttributes\$MediaSize;");

  /// from: public android.print.PrintAttributes.MediaSize getMediaSize()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Gets the media size.
  ///@return The media size or <code>null</code> if not set.
  PrintAttributes_MediaSize getMediaSize() =>
      PrintAttributes_MediaSize.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getMediaSize, jni.JniType.objectType, []).object);

  static final _id_getResolution = jniAccessors.getMethodIDOf(_classRef,
      "getResolution", "()Landroid/print/PrintAttributes\$Resolution;");

  /// from: public android.print.PrintAttributes.Resolution getResolution()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Gets the resolution.
  ///@return The resolution or <code>null</code> if not set.
  PrintAttributes_Resolution getResolution() =>
      PrintAttributes_Resolution.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getResolution, jni.JniType.objectType, []).object);

  static final _id_getMinMargins = jniAccessors.getMethodIDOf(
      _classRef, "getMinMargins", "()Landroid/print/PrintAttributes\$Margins;");

  /// from: public android.print.PrintAttributes.Margins getMinMargins()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Gets the minimal margins. If the content does not fit
  /// these margins it will be clipped.
  ///
  /// <strong>These margins are physically imposed by the printer and they
  /// are _not_ rotated, i.e. they are the same for both portrait and
  /// landscape. For example, a printer may not be able to print in a stripe
  /// on both left and right sides of the page.
  /// </strong>
  ///
  ///
  ///@return The margins or <code>null</code> if not set.
  PrintAttributes_Margins getMinMargins() =>
      PrintAttributes_Margins.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getMinMargins, jni.JniType.objectType, []).object);

  static final _id_getColorMode =
      jniAccessors.getMethodIDOf(_classRef, "getColorMode", "()I");

  /// from: public int getColorMode()
  ///
  /// Gets the color mode.
  ///@return The color mode or zero if not set.
  ///
  /// Value is 0 or greater
  ///@see \#COLOR_MODE_COLOR
  ///@see \#COLOR_MODE_MONOCHROME
  int getColorMode() => jniAccessors.callMethodWithArgs(
      reference, _id_getColorMode, jni.JniType.intType, []).integer;

  static final _id_getDuplexMode =
      jniAccessors.getMethodIDOf(_classRef, "getDuplexMode", "()I");

  /// from: public int getDuplexMode()
  ///
  /// Gets the duplex mode.
  ///@return The duplex mode or zero if not set.
  ///
  /// Value is 0 or greater
  ///@see \#DUPLEX_MODE_NONE
  ///@see \#DUPLEX_MODE_LONG_EDGE
  ///@see \#DUPLEX_MODE_SHORT_EDGE
  int getDuplexMode() => jniAccessors.callMethodWithArgs(
      reference, _id_getDuplexMode, jni.JniType.intType, []).integer;

  static final _id_writeToParcel = jniAccessors.getMethodIDOf(
      _classRef, "writeToParcel", "(Landroid/os/Parcel;I)V");

  /// from: public void writeToParcel(android.os.Parcel parcel, int flags)
  void writeToParcel(parcel_.Parcel parcel, int flags) =>
      jniAccessors.callMethodWithArgs(reference, _id_writeToParcel,
          jni.JniType.voidType, [parcel.reference, flags]).check();

  static final _id_describeContents =
      jniAccessors.getMethodIDOf(_classRef, "describeContents", "()I");

  /// from: public int describeContents()
  int describeContents() => jniAccessors.callMethodWithArgs(
      reference, _id_describeContents, jni.JniType.intType, []).integer;

  static final _id_hashCode1 =
      jniAccessors.getMethodIDOf(_classRef, "hashCode", "()I");

  /// from: public int hashCode()
  int hashCode1() => jniAccessors.callMethodWithArgs(
      reference, _id_hashCode1, jni.JniType.intType, []).integer;

  static final _id_equals1 =
      jniAccessors.getMethodIDOf(_classRef, "equals", "(Ljava/lang/Object;)Z");

  /// from: public boolean equals(java.lang.Object obj)
  bool equals1(jni.JniObject obj) => jniAccessors.callMethodWithArgs(
      reference, _id_equals1, jni.JniType.booleanType, [obj.reference]).boolean;

  static final _id_toString1 =
      jniAccessors.getMethodIDOf(_classRef, "toString", "()Ljava/lang/String;");

  /// from: public java.lang.String toString()
  /// The returned object must be deleted after use, by calling the `delete` method.
  jni.JniString toString1() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_toString1, jni.JniType.objectType, []).object);
}

/// from: android.print.PrintAttributes$Resolution
///
/// This class specifies a supported resolution in DPI (dots per inch).
/// Resolution defines how many points with different color can be placed
/// on one inch in horizontal or vertical direction of the target media.
/// For example, a printer with 600 DPI can produce higher quality images
/// the one with 300 DPI resolution.
class PrintAttributes_Resolution extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/print/PrintAttributes\$Resolution");
  PrintAttributes_Resolution.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "(Ljava/lang/String;Ljava/lang/String;II)V");

  /// from: public void <init>(java.lang.String id, java.lang.String label, int horizontalDpi, int verticalDpi)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a new instance.
  ///@param id The unique resolution id. It is unique amongst other resolutions
  ///        supported by the printer.
  /// This value must never be {@code null}.
  ///@param label The <strong>localized</strong> human readable label.
  /// This value must never be {@code null}.
  ///@param horizontalDpi The horizontal resolution in DPI (dots per inch).
  /// Value is 1 or greater
  ///@param verticalDpi The vertical resolution in DPI (dots per inch).
  ///
  /// Value is 1 or greater
  ///@throws IllegalArgumentException If the id is empty or the label is empty
  /// or the horizontalDpi is less than or equal to zero or the verticalDpi is
  /// less than or equal to zero.
  PrintAttributes_Resolution(
      jni.JniString id, jni.JniString label, int horizontalDpi, int verticalDpi)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor, [
          id.reference,
          label.reference,
          horizontalDpi,
          verticalDpi
        ]).object);

  static final _id_getId =
      jniAccessors.getMethodIDOf(_classRef, "getId", "()Ljava/lang/String;");

  /// from: public java.lang.String getId()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Gets the unique resolution id. It is unique amongst other resolutions
  /// supported by the printer.
  ///
  /// This id is defined by the client that generated the resolution
  /// instance and should not be interpreted by other parties.
  ///
  ///
  ///@return The unique resolution id.
  ///
  /// This value will never be {@code null}.
  jni.JniString getId() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getId, jni.JniType.objectType, []).object);

  static final _id_getLabel =
      jniAccessors.getMethodIDOf(_classRef, "getLabel", "()Ljava/lang/String;");

  /// from: public java.lang.String getLabel()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Gets the resolution human readable label.
  ///@return The human readable label.
  ///
  /// This value will never be {@code null}.
  jni.JniString getLabel() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getLabel, jni.JniType.objectType, []).object);

  static final _id_getHorizontalDpi =
      jniAccessors.getMethodIDOf(_classRef, "getHorizontalDpi", "()I");

  /// from: public int getHorizontalDpi()
  ///
  /// Gets the horizontal resolution in DPI (dots per inch).
  ///@return The horizontal resolution.
  ///
  /// Value is 1 or greater
  int getHorizontalDpi() => jniAccessors.callMethodWithArgs(
      reference, _id_getHorizontalDpi, jni.JniType.intType, []).integer;

  static final _id_getVerticalDpi =
      jniAccessors.getMethodIDOf(_classRef, "getVerticalDpi", "()I");

  /// from: public int getVerticalDpi()
  ///
  /// Gets the vertical resolution in DPI (dots per inch).
  ///@return The vertical resolution.
  ///
  /// Value is 1 or greater
  int getVerticalDpi() => jniAccessors.callMethodWithArgs(
      reference, _id_getVerticalDpi, jni.JniType.intType, []).integer;

  static final _id_hashCode1 =
      jniAccessors.getMethodIDOf(_classRef, "hashCode", "()I");

  /// from: public int hashCode()
  int hashCode1() => jniAccessors.callMethodWithArgs(
      reference, _id_hashCode1, jni.JniType.intType, []).integer;

  static final _id_equals1 =
      jniAccessors.getMethodIDOf(_classRef, "equals", "(Ljava/lang/Object;)Z");

  /// from: public boolean equals(java.lang.Object obj)
  bool equals1(jni.JniObject obj) => jniAccessors.callMethodWithArgs(
      reference, _id_equals1, jni.JniType.booleanType, [obj.reference]).boolean;

  static final _id_toString1 =
      jniAccessors.getMethodIDOf(_classRef, "toString", "()Ljava/lang/String;");

  /// from: public java.lang.String toString()
  /// The returned object must be deleted after use, by calling the `delete` method.
  jni.JniString toString1() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_toString1, jni.JniType.objectType, []).object);
}

/// from: android.print.PrintAttributes$MediaSize
///
/// This class specifies a supported media size. Media size is the
/// dimension of the media on which the content is printed. For
/// example, the \#NA_LETTER media size designates a page
/// with size 8.5" x 11".
class PrintAttributes_MediaSize extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/print/PrintAttributes\$MediaSize");
  PrintAttributes_MediaSize.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ISO_A0 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_A0", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_A0
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO A0 media size: 841mm x 1189mm (33.11" x 46.81")
  static PrintAttributes_MediaSize get ISO_A0 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_A0, jni.JniType.objectType)
          .object);

  static final _id_ISO_A1 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_A1", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_A1
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO A1 media size: 594mm x 841mm (23.39" x 33.11")
  static PrintAttributes_MediaSize get ISO_A1 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_A1, jni.JniType.objectType)
          .object);

  static final _id_ISO_A10 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_A10", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_A10
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO A10 media size: 26mm x 37mm (1.02" x 1.46")
  static PrintAttributes_MediaSize get ISO_A10 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_A10, jni.JniType.objectType)
          .object);

  static final _id_ISO_A2 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_A2", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_A2
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO A2 media size: 420mm x 594mm (16.54" x 23.39")
  static PrintAttributes_MediaSize get ISO_A2 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_A2, jni.JniType.objectType)
          .object);

  static final _id_ISO_A3 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_A3", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_A3
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO A3 media size: 297mm x 420mm (11.69" x 16.54")
  static PrintAttributes_MediaSize get ISO_A3 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_A3, jni.JniType.objectType)
          .object);

  static final _id_ISO_A4 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_A4", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_A4
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO A4 media size: 210mm x 297mm (8.27" x 11.69")
  static PrintAttributes_MediaSize get ISO_A4 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_A4, jni.JniType.objectType)
          .object);

  static final _id_ISO_A5 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_A5", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_A5
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO A5 media size: 148mm x 210mm (5.83" x 8.27")
  static PrintAttributes_MediaSize get ISO_A5 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_A5, jni.JniType.objectType)
          .object);

  static final _id_ISO_A6 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_A6", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_A6
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO A6 media size: 105mm x 148mm (4.13" x 5.83")
  static PrintAttributes_MediaSize get ISO_A6 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_A6, jni.JniType.objectType)
          .object);

  static final _id_ISO_A7 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_A7", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_A7
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO A7 media size: 74mm x 105mm (2.91" x 4.13")
  static PrintAttributes_MediaSize get ISO_A7 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_A7, jni.JniType.objectType)
          .object);

  static final _id_ISO_A8 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_A8", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_A8
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO A8 media size: 52mm x 74mm (2.05" x 2.91")
  static PrintAttributes_MediaSize get ISO_A8 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_A8, jni.JniType.objectType)
          .object);

  static final _id_ISO_A9 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_A9", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_A9
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO A9 media size: 37mm x 52mm (1.46" x 2.05")
  static PrintAttributes_MediaSize get ISO_A9 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_A9, jni.JniType.objectType)
          .object);

  static final _id_ISO_B0 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_B0", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_B0
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO B0 media size: 1000mm x 1414mm (39.37" x 55.67")
  static PrintAttributes_MediaSize get ISO_B0 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_B0, jni.JniType.objectType)
          .object);

  static final _id_ISO_B1 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_B1", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_B1
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO B1 media size: 707mm x 1000mm (27.83" x 39.37")
  static PrintAttributes_MediaSize get ISO_B1 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_B1, jni.JniType.objectType)
          .object);

  static final _id_ISO_B10 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_B10", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_B10
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO B10 media size: 31mm x 44mm (1.22" x 1.73")
  static PrintAttributes_MediaSize get ISO_B10 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_B10, jni.JniType.objectType)
          .object);

  static final _id_ISO_B2 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_B2", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_B2
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO B2 media size: 500mm x 707mm (19.69" x 27.83")
  static PrintAttributes_MediaSize get ISO_B2 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_B2, jni.JniType.objectType)
          .object);

  static final _id_ISO_B3 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_B3", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_B3
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO B3 media size: 353mm x 500mm (13.90" x 19.69")
  static PrintAttributes_MediaSize get ISO_B3 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_B3, jni.JniType.objectType)
          .object);

  static final _id_ISO_B4 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_B4", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_B4
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO B4 media size: 250mm x 353mm (9.84" x 13.90")
  static PrintAttributes_MediaSize get ISO_B4 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_B4, jni.JniType.objectType)
          .object);

  static final _id_ISO_B5 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_B5", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_B5
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO B5 media size: 176mm x 250mm (6.93" x 9.84")
  static PrintAttributes_MediaSize get ISO_B5 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_B5, jni.JniType.objectType)
          .object);

  static final _id_ISO_B6 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_B6", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_B6
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO B6 media size: 125mm x 176mm (4.92" x 6.93")
  static PrintAttributes_MediaSize get ISO_B6 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_B6, jni.JniType.objectType)
          .object);

  static final _id_ISO_B7 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_B7", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_B7
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO B7 media size: 88mm x 125mm (3.46" x 4.92")
  static PrintAttributes_MediaSize get ISO_B7 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_B7, jni.JniType.objectType)
          .object);

  static final _id_ISO_B8 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_B8", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_B8
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO B8 media size: 62mm x 88mm (2.44" x 3.46")
  static PrintAttributes_MediaSize get ISO_B8 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_B8, jni.JniType.objectType)
          .object);

  static final _id_ISO_B9 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_B9", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_B9
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO B9 media size: 44mm x 62mm (1.73" x 2.44")
  static PrintAttributes_MediaSize get ISO_B9 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_B9, jni.JniType.objectType)
          .object);

  static final _id_ISO_C0 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_C0", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_C0
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO C0 media size: 917mm x 1297mm (36.10" x 51.06")
  static PrintAttributes_MediaSize get ISO_C0 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_C0, jni.JniType.objectType)
          .object);

  static final _id_ISO_C1 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_C1", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_C1
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO C1 media size: 648mm x 917mm (25.51" x 36.10")
  static PrintAttributes_MediaSize get ISO_C1 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_C1, jni.JniType.objectType)
          .object);

  static final _id_ISO_C10 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_C10", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_C10
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO C10 media size: 28mm x 40mm (1.10" x 1.57")
  static PrintAttributes_MediaSize get ISO_C10 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_C10, jni.JniType.objectType)
          .object);

  static final _id_ISO_C2 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_C2", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_C2
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO C2 media size: 458mm x 648mm (18.03" x 25.51")
  static PrintAttributes_MediaSize get ISO_C2 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_C2, jni.JniType.objectType)
          .object);

  static final _id_ISO_C3 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_C3", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_C3
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO C3 media size: 324mm x 458mm (12.76" x 18.03")
  static PrintAttributes_MediaSize get ISO_C3 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_C3, jni.JniType.objectType)
          .object);

  static final _id_ISO_C4 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_C4", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_C4
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO C4 media size: 229mm x 324mm (9.02" x 12.76")
  static PrintAttributes_MediaSize get ISO_C4 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_C4, jni.JniType.objectType)
          .object);

  static final _id_ISO_C5 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_C5", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_C5
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO C5 media size: 162mm x 229mm (6.38" x 9.02")
  static PrintAttributes_MediaSize get ISO_C5 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_C5, jni.JniType.objectType)
          .object);

  static final _id_ISO_C6 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_C6", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_C6
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO C6 media size: 114mm x 162mm (4.49" x 6.38")
  static PrintAttributes_MediaSize get ISO_C6 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_C6, jni.JniType.objectType)
          .object);

  static final _id_ISO_C7 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_C7", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_C7
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO C7 media size: 81mm x 114mm (3.19" x 4.49")
  static PrintAttributes_MediaSize get ISO_C7 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_C7, jni.JniType.objectType)
          .object);

  static final _id_ISO_C8 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_C8", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_C8
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO C8 media size: 57mm x 81mm (2.24" x 3.19")
  static PrintAttributes_MediaSize get ISO_C8 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_C8, jni.JniType.objectType)
          .object);

  static final _id_ISO_C9 = jniAccessors.getStaticFieldIDOf(
      _classRef, "ISO_C9", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ISO_C9
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// ISO C9 media size: 40mm x 57mm (1.57" x 2.24")
  static PrintAttributes_MediaSize get ISO_C9 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ISO_C9, jni.JniType.objectType)
          .object);

  static final _id_JIS_B0 = jniAccessors.getStaticFieldIDOf(
      _classRef, "JIS_B0", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JIS_B0
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese JIS B0 media size: 1030mm x 1456mm (40.551" x 57.323")
  static PrintAttributes_MediaSize get JIS_B0 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JIS_B0, jni.JniType.objectType)
          .object);

  static final _id_JIS_B1 = jniAccessors.getStaticFieldIDOf(
      _classRef, "JIS_B1", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JIS_B1
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese JIS B1 media size: 728mm x 1030mm (28.661" x 40.551")
  static PrintAttributes_MediaSize get JIS_B1 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JIS_B1, jni.JniType.objectType)
          .object);

  static final _id_JIS_B10 = jniAccessors.getStaticFieldIDOf(
      _classRef, "JIS_B10", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JIS_B10
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese JIS B10 media size: 32mm x 45mm (1.259" x 1.772")
  static PrintAttributes_MediaSize get JIS_B10 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JIS_B10, jni.JniType.objectType)
          .object);

  static final _id_JIS_B2 = jniAccessors.getStaticFieldIDOf(
      _classRef, "JIS_B2", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JIS_B2
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese JIS B2 media size: 515mm x 728mm (20.276" x 28.661")
  static PrintAttributes_MediaSize get JIS_B2 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JIS_B2, jni.JniType.objectType)
          .object);

  static final _id_JIS_B3 = jniAccessors.getStaticFieldIDOf(
      _classRef, "JIS_B3", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JIS_B3
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese JIS B3 media size: 364mm x 515mm (14.331" x 20.276")
  static PrintAttributes_MediaSize get JIS_B3 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JIS_B3, jni.JniType.objectType)
          .object);

  static final _id_JIS_B4 = jniAccessors.getStaticFieldIDOf(
      _classRef, "JIS_B4", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JIS_B4
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese JIS B4 media size: 257mm x 364mm (10.118" x 14.331")
  static PrintAttributes_MediaSize get JIS_B4 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JIS_B4, jni.JniType.objectType)
          .object);

  static final _id_JIS_B5 = jniAccessors.getStaticFieldIDOf(
      _classRef, "JIS_B5", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JIS_B5
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese JIS B5 media size: 182mm x 257mm (7.165" x 10.118")
  static PrintAttributes_MediaSize get JIS_B5 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JIS_B5, jni.JniType.objectType)
          .object);

  static final _id_JIS_B6 = jniAccessors.getStaticFieldIDOf(
      _classRef, "JIS_B6", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JIS_B6
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese JIS B6 media size: 128mm x 182mm (5.049" x 7.165")
  static PrintAttributes_MediaSize get JIS_B6 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JIS_B6, jni.JniType.objectType)
          .object);

  static final _id_JIS_B7 = jniAccessors.getStaticFieldIDOf(
      _classRef, "JIS_B7", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JIS_B7
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese JIS B7 media size: 91mm x 128mm (3.583" x 5.049")
  static PrintAttributes_MediaSize get JIS_B7 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JIS_B7, jni.JniType.objectType)
          .object);

  static final _id_JIS_B8 = jniAccessors.getStaticFieldIDOf(
      _classRef, "JIS_B8", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JIS_B8
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese JIS B8 media size: 64mm x 91mm (2.52" x 3.583")
  static PrintAttributes_MediaSize get JIS_B8 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JIS_B8, jni.JniType.objectType)
          .object);

  static final _id_JIS_B9 = jniAccessors.getStaticFieldIDOf(
      _classRef, "JIS_B9", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JIS_B9
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese JIS B9 media size: 45mm x 64mm (1.772" x 2.52")
  static PrintAttributes_MediaSize get JIS_B9 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JIS_B9, jni.JniType.objectType)
          .object);

  static final _id_JIS_EXEC = jniAccessors.getStaticFieldIDOf(
      _classRef, "JIS_EXEC", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JIS_EXEC
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese JIS Exec media size: 216mm x 330mm (8.504" x 12.992")
  static PrintAttributes_MediaSize get JIS_EXEC =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JIS_EXEC, jni.JniType.objectType)
          .object);

  static final _id_JPN_CHOU2 = jniAccessors.getStaticFieldIDOf(
      _classRef, "JPN_CHOU2", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JPN_CHOU2
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese Chou2 media size: 111.1mm x 146mm (4.374" x 5.748")
  static PrintAttributes_MediaSize get JPN_CHOU2 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JPN_CHOU2, jni.JniType.objectType)
          .object);

  static final _id_JPN_CHOU3 = jniAccessors.getStaticFieldIDOf(
      _classRef, "JPN_CHOU3", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JPN_CHOU3
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese Chou3 media size: 120mm x 235mm (4.724" x 9.252")
  static PrintAttributes_MediaSize get JPN_CHOU3 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JPN_CHOU3, jni.JniType.objectType)
          .object);

  static final _id_JPN_CHOU4 = jniAccessors.getStaticFieldIDOf(
      _classRef, "JPN_CHOU4", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JPN_CHOU4
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese Chou4 media size: 90mm x 205mm (3.543" x 8.071")
  static PrintAttributes_MediaSize get JPN_CHOU4 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JPN_CHOU4, jni.JniType.objectType)
          .object);

  static final _id_JPN_HAGAKI = jniAccessors.getStaticFieldIDOf(
      _classRef, "JPN_HAGAKI", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JPN_HAGAKI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese Hagaki media size: 100mm x 148mm (3.937" x 5.827")
  static PrintAttributes_MediaSize get JPN_HAGAKI =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JPN_HAGAKI, jni.JniType.objectType)
          .object);

  static final _id_JPN_KAHU = jniAccessors.getStaticFieldIDOf(
      _classRef, "JPN_KAHU", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JPN_KAHU
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese Kahu media size: 240mm x 322.1mm (9.449" x 12.681")
  static PrintAttributes_MediaSize get JPN_KAHU =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JPN_KAHU, jni.JniType.objectType)
          .object);

  static final _id_JPN_KAKU2 = jniAccessors.getStaticFieldIDOf(
      _classRef, "JPN_KAKU2", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JPN_KAKU2
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese Kaku2 media size: 240mm x 332mm (9.449" x 13.071")
  static PrintAttributes_MediaSize get JPN_KAKU2 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JPN_KAKU2, jni.JniType.objectType)
          .object);

  static final _id_JPN_OUFUKU = jniAccessors.getStaticFieldIDOf(
      _classRef, "JPN_OUFUKU", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JPN_OUFUKU
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese Oufuku media size: 148mm x 200mm (5.827" x 7.874")
  static PrintAttributes_MediaSize get JPN_OUFUKU =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JPN_OUFUKU, jni.JniType.objectType)
          .object);

  static final _id_JPN_YOU4 = jniAccessors.getStaticFieldIDOf(
      _classRef, "JPN_YOU4", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize JPN_YOU4
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Japanese You4 media size: 105mm x 235mm (4.134" x 9.252")
  static PrintAttributes_MediaSize get JPN_YOU4 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JPN_YOU4, jni.JniType.objectType)
          .object);

  static final _id_NA_FOOLSCAP = jniAccessors.getStaticFieldIDOf(
      _classRef, "NA_FOOLSCAP", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize NA_FOOLSCAP
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// North America Foolscap media size: 8" x 13" (203mm x 330mm)
  static PrintAttributes_MediaSize get NA_FOOLSCAP =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NA_FOOLSCAP, jni.JniType.objectType)
          .object);

  static final _id_NA_GOVT_LETTER = jniAccessors.getStaticFieldIDOf(_classRef,
      "NA_GOVT_LETTER", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize NA_GOVT_LETTER
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// North America Government-Letter media size: 8.0" x 10.5" (203mm x 267mm)
  static PrintAttributes_MediaSize get NA_GOVT_LETTER =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NA_GOVT_LETTER, jni.JniType.objectType)
          .object);

  static final _id_NA_INDEX_3X5 = jniAccessors.getStaticFieldIDOf(
      _classRef, "NA_INDEX_3X5", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize NA_INDEX_3X5
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// North America Index Card 3x5 media size: 3" x 5" (76mm x 127mm)
  static PrintAttributes_MediaSize get NA_INDEX_3X5 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NA_INDEX_3X5, jni.JniType.objectType)
          .object);

  static final _id_NA_INDEX_4X6 = jniAccessors.getStaticFieldIDOf(
      _classRef, "NA_INDEX_4X6", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize NA_INDEX_4X6
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// North America Index Card 4x6 media size: 4" x 6" (102mm x 152mm)
  static PrintAttributes_MediaSize get NA_INDEX_4X6 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NA_INDEX_4X6, jni.JniType.objectType)
          .object);

  static final _id_NA_INDEX_5X8 = jniAccessors.getStaticFieldIDOf(
      _classRef, "NA_INDEX_5X8", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize NA_INDEX_5X8
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// North America Index Card 5x8 media size: 5" x 8" (127mm x 203mm)
  static PrintAttributes_MediaSize get NA_INDEX_5X8 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NA_INDEX_5X8, jni.JniType.objectType)
          .object);

  static final _id_NA_JUNIOR_LEGAL = jniAccessors.getStaticFieldIDOf(_classRef,
      "NA_JUNIOR_LEGAL", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize NA_JUNIOR_LEGAL
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// North America Junior Legal media size: 8.0" x 5.0" (203mm × 127mm)
  static PrintAttributes_MediaSize get NA_JUNIOR_LEGAL =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_NA_JUNIOR_LEGAL, jni.JniType.objectType)
          .object);

  static final _id_NA_LEDGER = jniAccessors.getStaticFieldIDOf(
      _classRef, "NA_LEDGER", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize NA_LEDGER
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// North America Ledger media size: 17" x 11" (432mm × 279mm)
  static PrintAttributes_MediaSize get NA_LEDGER =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NA_LEDGER, jni.JniType.objectType)
          .object);

  static final _id_NA_LEGAL = jniAccessors.getStaticFieldIDOf(
      _classRef, "NA_LEGAL", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize NA_LEGAL
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// North America Legal media size: 8.5" x 14" (216mm x 356mm)
  static PrintAttributes_MediaSize get NA_LEGAL =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NA_LEGAL, jni.JniType.objectType)
          .object);

  static final _id_NA_LETTER = jniAccessors.getStaticFieldIDOf(
      _classRef, "NA_LETTER", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize NA_LETTER
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// North America Letter media size: 8.5" x 11" (279mm x 216mm)
  static PrintAttributes_MediaSize get NA_LETTER =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NA_LETTER, jni.JniType.objectType)
          .object);

  static final _id_NA_MONARCH = jniAccessors.getStaticFieldIDOf(
      _classRef, "NA_MONARCH", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize NA_MONARCH
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// North America Monarch media size: 7.25" x 10.5" (184mm x 267mm)
  static PrintAttributes_MediaSize get NA_MONARCH =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NA_MONARCH, jni.JniType.objectType)
          .object);

  static final _id_NA_QUARTO = jniAccessors.getStaticFieldIDOf(
      _classRef, "NA_QUARTO", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize NA_QUARTO
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// North America Quarto media size: 8" x 10" (203mm x 254mm)
  static PrintAttributes_MediaSize get NA_QUARTO =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NA_QUARTO, jni.JniType.objectType)
          .object);

  static final _id_NA_TABLOID = jniAccessors.getStaticFieldIDOf(
      _classRef, "NA_TABLOID", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize NA_TABLOID
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// North America Tabloid media size: 11" x 17" (279mm × 432mm)
  static PrintAttributes_MediaSize get NA_TABLOID =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NA_TABLOID, jni.JniType.objectType)
          .object);

  static final _id_OM_DAI_PA_KAI = jniAccessors.getStaticFieldIDOf(
      _classRef, "OM_DAI_PA_KAI", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize OM_DAI_PA_KAI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chinese Dai Pa Kai media size: 275mm x 395mm (10.827" x 15.551")
  static PrintAttributes_MediaSize get OM_DAI_PA_KAI =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_OM_DAI_PA_KAI, jni.JniType.objectType)
          .object);

  static final _id_OM_JUURO_KU_KAI = jniAccessors.getStaticFieldIDOf(_classRef,
      "OM_JUURO_KU_KAI", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize OM_JUURO_KU_KAI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chinese Jurro Ku Kai media size: 198mm x 275mm (7.796" x 10.827")
  static PrintAttributes_MediaSize get OM_JUURO_KU_KAI =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_OM_JUURO_KU_KAI, jni.JniType.objectType)
          .object);

  static final _id_OM_PA_KAI = jniAccessors.getStaticFieldIDOf(
      _classRef, "OM_PA_KAI", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize OM_PA_KAI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chinese Pa Kai media size: 267mm x 389mm (10.512" x 15.315")
  static PrintAttributes_MediaSize get OM_PA_KAI =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_OM_PA_KAI, jni.JniType.objectType)
          .object);

  static final _id_PRC_1 = jniAccessors.getStaticFieldIDOf(
      _classRef, "PRC_1", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize PRC_1
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chinese PRC 1 media size: 102mm x 165mm (4.015" x 6.496")
  static PrintAttributes_MediaSize get PRC_1 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PRC_1, jni.JniType.objectType)
          .object);

  static final _id_PRC_10 = jniAccessors.getStaticFieldIDOf(
      _classRef, "PRC_10", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize PRC_10
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chinese PRC 10 media size: 324mm x 458mm (12.756" x 18.032")
  static PrintAttributes_MediaSize get PRC_10 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PRC_10, jni.JniType.objectType)
          .object);

  static final _id_PRC_16K = jniAccessors.getStaticFieldIDOf(
      _classRef, "PRC_16K", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize PRC_16K
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chinese PRC 16k media size: 146mm x 215mm (5.749" x 8.465")
  static PrintAttributes_MediaSize get PRC_16K =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PRC_16K, jni.JniType.objectType)
          .object);

  static final _id_PRC_2 = jniAccessors.getStaticFieldIDOf(
      _classRef, "PRC_2", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize PRC_2
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chinese PRC 2 media size: 102mm x 176mm (4.015" x 6.929")
  static PrintAttributes_MediaSize get PRC_2 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PRC_2, jni.JniType.objectType)
          .object);

  static final _id_PRC_3 = jniAccessors.getStaticFieldIDOf(
      _classRef, "PRC_3", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize PRC_3
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chinese PRC 3 media size: 125mm x 176mm (4.921" x 6.929")
  static PrintAttributes_MediaSize get PRC_3 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PRC_3, jni.JniType.objectType)
          .object);

  static final _id_PRC_4 = jniAccessors.getStaticFieldIDOf(
      _classRef, "PRC_4", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize PRC_4
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chinese PRC 4 media size: 110mm x 208mm (4.330" x 8.189")
  static PrintAttributes_MediaSize get PRC_4 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PRC_4, jni.JniType.objectType)
          .object);

  static final _id_PRC_5 = jniAccessors.getStaticFieldIDOf(
      _classRef, "PRC_5", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize PRC_5
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chinese PRC 5 media size: 110mm x 220mm (4.330" x 8.661")
  static PrintAttributes_MediaSize get PRC_5 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PRC_5, jni.JniType.objectType)
          .object);

  static final _id_PRC_6 = jniAccessors.getStaticFieldIDOf(
      _classRef, "PRC_6", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize PRC_6
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chinese PRC 6 media size: 120mm x 320mm (4.724" x 12.599")
  static PrintAttributes_MediaSize get PRC_6 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PRC_6, jni.JniType.objectType)
          .object);

  static final _id_PRC_7 = jniAccessors.getStaticFieldIDOf(
      _classRef, "PRC_7", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize PRC_7
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chinese PRC 7 media size: 160mm x 230mm (6.299" x 9.055")
  static PrintAttributes_MediaSize get PRC_7 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PRC_7, jni.JniType.objectType)
          .object);

  static final _id_PRC_8 = jniAccessors.getStaticFieldIDOf(
      _classRef, "PRC_8", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize PRC_8
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chinese PRC 8 media size: 120mm x 309mm (4.724" x 12.165")
  static PrintAttributes_MediaSize get PRC_8 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PRC_8, jni.JniType.objectType)
          .object);

  static final _id_PRC_9 = jniAccessors.getStaticFieldIDOf(
      _classRef, "PRC_9", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize PRC_9
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chinese PRC 9 media size: 229mm x 324mm (9.016" x 12.756")
  static PrintAttributes_MediaSize get PRC_9 =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PRC_9, jni.JniType.objectType)
          .object);

  static final _id_ROC_16K = jniAccessors.getStaticFieldIDOf(
      _classRef, "ROC_16K", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ROC_16K
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chinese ROC 16K media size: 195mm x 270mm (7.677" x 10.629")
  static PrintAttributes_MediaSize get ROC_16K =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ROC_16K, jni.JniType.objectType)
          .object);

  static final _id_ROC_8K = jniAccessors.getStaticFieldIDOf(
      _classRef, "ROC_8K", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize ROC_8K
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chinese ROC 8K media size: 270mm x 390mm (10.629" x 15.3543")
  static PrintAttributes_MediaSize get ROC_8K =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ROC_8K, jni.JniType.objectType)
          .object);

  static final _id_UNKNOWN_LANDSCAPE = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "UNKNOWN_LANDSCAPE",
      "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize UNKNOWN_LANDSCAPE
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Unknown media size in landscape mode.
  ///
  /// <strong>Note: </strong>This is for specifying orientation without media
  /// size. You should not use the dimensions reported by this instance.
  ///
  ///
  static PrintAttributes_MediaSize get UNKNOWN_LANDSCAPE =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_UNKNOWN_LANDSCAPE, jni.JniType.objectType)
          .object);

  static final _id_UNKNOWN_PORTRAIT = jniAccessors.getStaticFieldIDOf(_classRef,
      "UNKNOWN_PORTRAIT", "Landroid/print/PrintAttributes\$MediaSize;");

  /// from: static public final android.print.PrintAttributes.MediaSize UNKNOWN_PORTRAIT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Unknown media size in portrait mode.
  ///
  /// <strong>Note: </strong>This is for specifying orientation without media
  /// size. You should not use the dimensions reported by this instance.
  ///
  ///
  static PrintAttributes_MediaSize get UNKNOWN_PORTRAIT =>
      PrintAttributes_MediaSize.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_UNKNOWN_PORTRAIT, jni.JniType.objectType)
          .object);

  static final _id_ctor = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "(Ljava/lang/String;Ljava/lang/String;II)V");

  /// from: public void <init>(java.lang.String id, java.lang.String label, int widthMils, int heightMils)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a new instance.
  ///@param id The unique media size id. It is unique amongst other media sizes
  ///        supported by the printer.
  /// This value must never be {@code null}.
  ///@param label The <strong>localized</strong> human readable label.
  /// This value must never be {@code null}.
  ///@param widthMils The width in mils (thousandths of an inch).
  /// Value is 1 or greater
  ///@param heightMils The height in mils (thousandths of an inch).
  ///
  /// Value is 1 or greater
  ///@throws IllegalArgumentException If the id is empty or the label is empty
  /// or the widthMils is less than or equal to zero or the heightMils is less
  /// than or equal to zero.
  PrintAttributes_MediaSize(
      jni.JniString id, jni.JniString label, int widthMils, int heightMils)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor,
            [id.reference, label.reference, widthMils, heightMils]).object);

  static final _id_getId =
      jniAccessors.getMethodIDOf(_classRef, "getId", "()Ljava/lang/String;");

  /// from: public java.lang.String getId()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Gets the unique media size id. It is unique amongst other media sizes
  /// supported by the printer.
  ///
  /// This id is defined by the client that generated the media size
  /// instance and should not be interpreted by other parties.
  ///
  ///
  ///@return The unique media size id.
  ///
  /// This value will never be {@code null}.
  jni.JniString getId() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getId, jni.JniType.objectType, []).object);

  static final _id_getLabel = jniAccessors.getMethodIDOf(_classRef, "getLabel",
      "(Landroid/content/pm/PackageManager;)Ljava/lang/String;");

  /// from: public java.lang.String getLabel(android.content.pm.PackageManager packageManager)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Gets the human readable media size label.
  ///@param packageManager The package manager for loading the label.
  /// This value must never be {@code null}.
  ///@return The human readable label.
  ///
  /// This value will never be {@code null}.
  jni.JniString getLabel(packagemanager_.PackageManager packageManager) =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_getLabel,
          jni.JniType.objectType,
          [packageManager.reference]).object);

  static final _id_getWidthMils =
      jniAccessors.getMethodIDOf(_classRef, "getWidthMils", "()I");

  /// from: public int getWidthMils()
  ///
  /// Gets the media width in mils (thousandths of an inch).
  ///@return The media width.
  ///
  /// Value is 1 or greater
  int getWidthMils() => jniAccessors.callMethodWithArgs(
      reference, _id_getWidthMils, jni.JniType.intType, []).integer;

  static final _id_getHeightMils =
      jniAccessors.getMethodIDOf(_classRef, "getHeightMils", "()I");

  /// from: public int getHeightMils()
  ///
  /// Gets the media height in mils (thousandths of an inch).
  ///@return The media height.
  ///
  /// Value is 1 or greater
  int getHeightMils() => jniAccessors.callMethodWithArgs(
      reference, _id_getHeightMils, jni.JniType.intType, []).integer;

  static final _id_isPortrait =
      jniAccessors.getMethodIDOf(_classRef, "isPortrait", "()Z");

  /// from: public boolean isPortrait()
  ///
  /// Gets whether this media size is in portrait which is the
  /// height is greater or equal to the width.
  ///@return True if the media size is in portrait, false if
  /// it is in landscape.
  bool isPortrait() => jniAccessors.callMethodWithArgs(
      reference, _id_isPortrait, jni.JniType.booleanType, []).boolean;

  static final _id_asPortrait = jniAccessors.getMethodIDOf(
      _classRef, "asPortrait", "()Landroid/print/PrintAttributes\$MediaSize;");

  /// from: public android.print.PrintAttributes.MediaSize asPortrait()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns a new media size instance in a portrait orientation,
  /// which is the height is the greater dimension.
  ///@return New instance in landscape orientation if this one
  /// is in landscape, otherwise this instance.
  ///
  /// This value will never be {@code null}.
  PrintAttributes_MediaSize asPortrait() =>
      PrintAttributes_MediaSize.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_asPortrait, jni.JniType.objectType, []).object);

  static final _id_asLandscape = jniAccessors.getMethodIDOf(
      _classRef, "asLandscape", "()Landroid/print/PrintAttributes\$MediaSize;");

  /// from: public android.print.PrintAttributes.MediaSize asLandscape()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns a new media size instance in a landscape orientation,
  /// which is the height is the lesser dimension.
  ///@return New instance in landscape orientation if this one
  /// is in portrait, otherwise this instance.
  ///
  /// This value will never be {@code null}.
  PrintAttributes_MediaSize asLandscape() =>
      PrintAttributes_MediaSize.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_asLandscape, jni.JniType.objectType, []).object);

  static final _id_hashCode1 =
      jniAccessors.getMethodIDOf(_classRef, "hashCode", "()I");

  /// from: public int hashCode()
  int hashCode1() => jniAccessors.callMethodWithArgs(
      reference, _id_hashCode1, jni.JniType.intType, []).integer;

  static final _id_equals1 =
      jniAccessors.getMethodIDOf(_classRef, "equals", "(Ljava/lang/Object;)Z");

  /// from: public boolean equals(java.lang.Object obj)
  bool equals1(jni.JniObject obj) => jniAccessors.callMethodWithArgs(
      reference, _id_equals1, jni.JniType.booleanType, [obj.reference]).boolean;

  static final _id_toString1 =
      jniAccessors.getMethodIDOf(_classRef, "toString", "()Ljava/lang/String;");

  /// from: public java.lang.String toString()
  /// The returned object must be deleted after use, by calling the `delete` method.
  jni.JniString toString1() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_toString1, jni.JniType.objectType, []).object);
}

/// from: android.print.PrintAttributes$Margins
///
/// This class specifies content margins. Margins define the white space
/// around the content where the left margin defines the amount of white
/// space on the left of the content and so on.
class PrintAttributes_Margins extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/print/PrintAttributes\$Margins");
  PrintAttributes_Margins.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_NO_MARGINS = jniAccessors.getStaticFieldIDOf(
      _classRef, "NO_MARGINS", "Landroid/print/PrintAttributes\$Margins;");

  /// from: static public final android.print.PrintAttributes.Margins NO_MARGINS
  /// The returned object must be deleted after use, by calling the `delete` method.
  static PrintAttributes_Margins get NO_MARGINS =>
      PrintAttributes_Margins.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NO_MARGINS, jni.JniType.objectType)
          .object);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(IIII)V");

  /// from: public void <init>(int leftMils, int topMils, int rightMils, int bottomMils)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a new instance.
  ///@param leftMils The left margin in mils (thousandths of an inch).
  ///@param topMils The top margin in mils (thousandths of an inch).
  ///@param rightMils The right margin in mils (thousandths of an inch).
  ///@param bottomMils The bottom margin in mils (thousandths of an inch).
  PrintAttributes_Margins(
      int leftMils, int topMils, int rightMils, int bottomMils)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor,
            [leftMils, topMils, rightMils, bottomMils]).object);

  static final _id_getLeftMils =
      jniAccessors.getMethodIDOf(_classRef, "getLeftMils", "()I");

  /// from: public int getLeftMils()
  ///
  /// Gets the left margin in mils (thousandths of an inch).
  ///@return The left margin.
  int getLeftMils() => jniAccessors.callMethodWithArgs(
      reference, _id_getLeftMils, jni.JniType.intType, []).integer;

  static final _id_getTopMils =
      jniAccessors.getMethodIDOf(_classRef, "getTopMils", "()I");

  /// from: public int getTopMils()
  ///
  /// Gets the top margin in mils (thousandths of an inch).
  ///@return The top margin.
  int getTopMils() => jniAccessors.callMethodWithArgs(
      reference, _id_getTopMils, jni.JniType.intType, []).integer;

  static final _id_getRightMils =
      jniAccessors.getMethodIDOf(_classRef, "getRightMils", "()I");

  /// from: public int getRightMils()
  ///
  /// Gets the right margin in mils (thousandths of an inch).
  ///@return The right margin.
  int getRightMils() => jniAccessors.callMethodWithArgs(
      reference, _id_getRightMils, jni.JniType.intType, []).integer;

  static final _id_getBottomMils =
      jniAccessors.getMethodIDOf(_classRef, "getBottomMils", "()I");

  /// from: public int getBottomMils()
  ///
  /// Gets the bottom margin in mils (thousandths of an inch).
  ///@return The bottom margin.
  int getBottomMils() => jniAccessors.callMethodWithArgs(
      reference, _id_getBottomMils, jni.JniType.intType, []).integer;

  static final _id_hashCode1 =
      jniAccessors.getMethodIDOf(_classRef, "hashCode", "()I");

  /// from: public int hashCode()
  int hashCode1() => jniAccessors.callMethodWithArgs(
      reference, _id_hashCode1, jni.JniType.intType, []).integer;

  static final _id_equals1 =
      jniAccessors.getMethodIDOf(_classRef, "equals", "(Ljava/lang/Object;)Z");

  /// from: public boolean equals(java.lang.Object obj)
  bool equals1(jni.JniObject obj) => jniAccessors.callMethodWithArgs(
      reference, _id_equals1, jni.JniType.booleanType, [obj.reference]).boolean;

  static final _id_toString1 =
      jniAccessors.getMethodIDOf(_classRef, "toString", "()Ljava/lang/String;");

  /// from: public java.lang.String toString()
  /// The returned object must be deleted after use, by calling the `delete` method.
  jni.JniString toString1() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_toString1, jni.JniType.objectType, []).object);
}

/// from: android.print.PrintAttributes$Builder
///
/// Builder for creating PrintAttributes.
class PrintAttributes_Builder extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/print/PrintAttributes\$Builder");
  PrintAttributes_Builder.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: public void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  PrintAttributes_Builder()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_setMediaSize = jniAccessors.getMethodIDOf(
      _classRef,
      "setMediaSize",
      "(Landroid/print/PrintAttributes\$MediaSize;)Landroid/print/PrintAttributes\$Builder;");

  /// from: public android.print.PrintAttributes.Builder setMediaSize(android.print.PrintAttributes.MediaSize mediaSize)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Sets the media size.
  ///@param mediaSize The media size.
  /// This value must never be {@code null}.
  ///@return This builder.
  ///
  /// This value will never be {@code null}.
  PrintAttributes_Builder setMediaSize(PrintAttributes_MediaSize mediaSize) =>
      PrintAttributes_Builder.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_setMediaSize,
          jni.JniType.objectType,
          [mediaSize.reference]).object);

  static final _id_setResolution = jniAccessors.getMethodIDOf(
      _classRef,
      "setResolution",
      "(Landroid/print/PrintAttributes\$Resolution;)Landroid/print/PrintAttributes\$Builder;");

  /// from: public android.print.PrintAttributes.Builder setResolution(android.print.PrintAttributes.Resolution resolution)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Sets the resolution.
  ///@param resolution The resolution.
  /// This value must never be {@code null}.
  ///@return This builder.
  ///
  /// This value will never be {@code null}.
  PrintAttributes_Builder setResolution(
          PrintAttributes_Resolution resolution) =>
      PrintAttributes_Builder.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_setResolution,
          jni.JniType.objectType,
          [resolution.reference]).object);

  static final _id_setMinMargins = jniAccessors.getMethodIDOf(
      _classRef,
      "setMinMargins",
      "(Landroid/print/PrintAttributes\$Margins;)Landroid/print/PrintAttributes\$Builder;");

  /// from: public android.print.PrintAttributes.Builder setMinMargins(android.print.PrintAttributes.Margins margins)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Sets the minimal margins. If the content does not fit
  /// these margins it will be clipped.
  ///@param margins The margins.
  /// This value must never be {@code null}.
  ///@return This builder.
  ///
  /// This value will never be {@code null}.
  PrintAttributes_Builder setMinMargins(PrintAttributes_Margins margins) =>
      PrintAttributes_Builder.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_setMinMargins,
          jni.JniType.objectType,
          [margins.reference]).object);

  static final _id_setColorMode = jniAccessors.getMethodIDOf(
      _classRef, "setColorMode", "(I)Landroid/print/PrintAttributes\$Builder;");

  /// from: public android.print.PrintAttributes.Builder setColorMode(int colorMode)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Sets the color mode.
  ///@param colorMode A valid color mode or zero.
  /// Value is either <code>0</code> or a combination of android.print.PrintAttributes\#COLOR_MODE_MONOCHROME, and android.print.PrintAttributes\#COLOR_MODE_COLOR
  ///@return This builder.
  ///
  /// This value will never be {@code null}.
  ///@see PrintAttributes\#COLOR_MODE_MONOCHROME
  ///@see PrintAttributes\#COLOR_MODE_COLOR
  PrintAttributes_Builder setColorMode(int colorMode) =>
      PrintAttributes_Builder.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_setColorMode, jni.JniType.objectType, [colorMode]).object);

  static final _id_setDuplexMode = jniAccessors.getMethodIDOf(_classRef,
      "setDuplexMode", "(I)Landroid/print/PrintAttributes\$Builder;");

  /// from: public android.print.PrintAttributes.Builder setDuplexMode(int duplexMode)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Sets the duplex mode.
  ///@param duplexMode A valid duplex mode or zero.
  /// Value is either <code>0</code> or a combination of android.print.PrintAttributes\#DUPLEX_MODE_NONE, android.print.PrintAttributes\#DUPLEX_MODE_LONG_EDGE, and android.print.PrintAttributes\#DUPLEX_MODE_SHORT_EDGE
  ///@return This builder.
  ///
  /// This value will never be {@code null}.
  ///@see PrintAttributes\#DUPLEX_MODE_NONE
  ///@see PrintAttributes\#DUPLEX_MODE_LONG_EDGE
  ///@see PrintAttributes\#DUPLEX_MODE_SHORT_EDGE
  PrintAttributes_Builder setDuplexMode(int duplexMode) =>
      PrintAttributes_Builder.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_setDuplexMode, jni.JniType.objectType, [duplexMode]).object);

  static final _id_build = jniAccessors.getMethodIDOf(
      _classRef, "build", "()Landroid/print/PrintAttributes;");

  /// from: public android.print.PrintAttributes build()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a new PrintAttributes instance.
  ///@return The new instance.
  ///
  /// This value will never be {@code null}.
  PrintAttributes build() =>
      PrintAttributes.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_build, jni.JniType.objectType, []).object);
}
