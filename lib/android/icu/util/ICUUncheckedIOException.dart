// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.icu.util.ICUUncheckedIOException
///
/// Unchecked version of java.io.IOException.
/// Some ICU APIs do not throw the standard exception but instead wrap it
/// into this unchecked version.
///
/// This currently extends RuntimeException,
/// but when ICU can rely on Java 8 this class should be changed to extend
/// java.io.UncheckedIOException instead.
class ICUUncheckedIOException extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/icu/util/ICUUncheckedIOException");
  ICUUncheckedIOException.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: public void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Default constructor.
  ICUUncheckedIOException()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_ctor1 =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(Ljava/lang/String;)V");

  /// from: public void <init>(java.lang.String message)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructor.
  ///@param message exception message string
  ICUUncheckedIOException.ctor1(jni.JniString message)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor1, [message.reference]).object);

  static final _id_ctor2 = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "(Ljava/lang/Throwable;)V");

  /// from: public void <init>(java.lang.Throwable cause)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructor.
  ///@param cause original exception (normally a java.io.IOException)
  ICUUncheckedIOException.ctor2(jni.JniObject cause)
      : super.fromRef(jniAccessors
            .newObjectWithArgs(_classRef, _id_ctor2, [cause.reference]).object);

  static final _id_ctor3 = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "(Ljava/lang/String;Ljava/lang/Throwable;)V");

  /// from: public void <init>(java.lang.String message, java.lang.Throwable cause)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructor.
  ///@param message exception message string
  ///@param cause original exception (normally a java.io.IOException)
  ICUUncheckedIOException.ctor3(jni.JniString message, jni.JniObject cause)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor3, [message.reference, cause.reference]).object);
}
