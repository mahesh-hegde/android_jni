// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "Calendar.dart" as calendar_;

import "TimeZone.dart" as timezone_;

import "ULocale.dart" as ulocale_;
import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.icu.util.EthiopicCalendar
///
/// Implement the Ethiopic calendar system.
///
/// EthiopicCalendar usually should be instantiated using
/// android.icu.util.Calendar\#getInstance(ULocale) passing in a <code>ULocale</code>
/// with the tag <code>"@calendar=ethiopic"</code>.
///
///@see android.icu.util.Calendar
class EthiopicCalendar extends calendar_.Calendar {
  static final _classRef =
      jniAccessors.getClassOf("android/icu/util/EthiopicCalendar");
  EthiopicCalendar.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int GENBOT
  ///
  /// Constant for \u130d\u1295\u1266\u1275, the 9th month of the Ethiopic year.
  static const GENBOT = 8;

  /// from: static public final int HAMLE
  ///
  /// Constant for \u1210\u121d\u120c, the 11th month of the Ethiopic year.
  static const HAMLE = 10;

  /// from: static public final int HEDAR
  ///
  /// Constant for \u1285\u12f3\u122d, the 3rd month of the Ethiopic year.
  static const HEDAR = 2;

  /// from: static public final int MEGABIT
  ///
  /// Constant for \u1218\u130b\u1262\u1275, the 7th month of the Ethiopic year.
  static const MEGABIT = 6;

  /// from: static public final int MESKEREM
  ///
  /// Constant for \u1218\u1235\u12a8\u1228\u121d, the 1st month of the Ethiopic year.
  static const MESKEREM = 0;

  /// from: static public final int MIAZIA
  ///
  /// Constant for \u121a\u12eb\u12dd\u12eb, the 8th month of the Ethiopic year.
  static const MIAZIA = 7;

  /// from: static public final int NEHASSE
  ///
  /// Constant for \u1290\u1210\u1234, the 12th month of the Ethiopic year.
  static const NEHASSE = 11;

  /// from: static public final int PAGUMEN
  ///
  /// Constant for \u1333\u1309\u121c\u1295, the 13th month of the Ethiopic year.
  static const PAGUMEN = 12;

  /// from: static public final int SENE
  ///
  /// Constant for \u1230\u1294, the 10th month of the Ethiopic year.
  static const SENE = 9;

  /// from: static public final int TAHSAS
  ///
  /// Constant for \u1273\u1285\u1223\u1225, the 4th month of the Ethiopic year.
  static const TAHSAS = 3;

  /// from: static public final int TEKEMT
  ///
  /// Constant for \u1325\u1245\u121d\u1275, the 2nd month of the Ethiopic year.
  static const TEKEMT = 1;

  /// from: static public final int TER
  ///
  /// Constant for \u1325\u122d, the 5th month of the Ethiopic year.
  static const TER = 4;

  /// from: static public final int YEKATIT
  ///
  /// Constant for \u12e8\u12ab\u1272\u1275, the 6th month of the Ethiopic year.
  static const YEKATIT = 5;

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: public void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructs a default <code>EthiopicCalendar</code> using the current time
  /// in the default time zone with the default locale.
  EthiopicCalendar()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_ctor3 = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "(Landroid/icu/util/TimeZone;)V");

  /// from: public void <init>(android.icu.util.TimeZone zone)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructs a <code>EthiopicCalendar</code> based on the current time
  /// in the given time zone with the default locale.
  ///@param zone The time zone for the new calendar.
  EthiopicCalendar.ctor3(timezone_.TimeZone zone)
      : super.fromRef(jniAccessors
            .newObjectWithArgs(_classRef, _id_ctor3, [zone.reference]).object);

  static final _id_ctor4 =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(Ljava/util/Locale;)V");

  /// from: public void <init>(java.util.Locale aLocale)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructs a <code>EthiopicCalendar</code> based on the current time
  /// in the default time zone with the given locale.
  ///@param aLocale The locale for the new calendar.
  EthiopicCalendar.ctor4(jni.JniObject aLocale)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor4, [aLocale.reference]).object);

  static final _id_ctor5 = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "(Landroid/icu/util/ULocale;)V");

  /// from: public void <init>(android.icu.util.ULocale locale)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructs a <code>EthiopicCalendar</code> based on the current time
  /// in the default time zone with the given locale.
  ///@param locale The icu locale for the new calendar.
  EthiopicCalendar.ctor5(ulocale_.ULocale locale)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor5, [locale.reference]).object);

  static final _id_ctor1 = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "(Landroid/icu/util/TimeZone;Ljava/util/Locale;)V");

  /// from: public void <init>(android.icu.util.TimeZone zone, java.util.Locale aLocale)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructs a <code>EthiopicCalendar</code> based on the current time
  /// in the given time zone with the given locale.
  ///@param zone The time zone for the new calendar.
  ///@param aLocale The locale for the new calendar.
  EthiopicCalendar.ctor1(timezone_.TimeZone zone, jni.JniObject aLocale)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor1, [zone.reference, aLocale.reference]).object);

  static final _id_ctor2 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/icu/util/TimeZone;Landroid/icu/util/ULocale;)V");

  /// from: public void <init>(android.icu.util.TimeZone zone, android.icu.util.ULocale locale)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructs a <code>EthiopicCalendar</code> based on the current time
  /// in the given time zone with the given locale.
  ///@param zone The time zone for the new calendar.
  ///@param locale The icu locale for the new calendar.
  EthiopicCalendar.ctor2(timezone_.TimeZone zone, ulocale_.ULocale locale)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor2, [zone.reference, locale.reference]).object);

  static final _id_ctor6 =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(III)V");

  /// from: public void <init>(int year, int month, int date)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructs a <code>EthiopicCalendar</code> with the given date set
  /// in the default time zone with the default locale.
  ///@param year The value used to set the calendar's \#YEAR YEAR time field.
  ///@param month The value used to set the calendar's \#MONTH MONTH time field.
  ///                  The value is 0-based. e.g., 0 for Meskerem.
  ///@param date The value used to set the calendar's \#DATE DATE time field.
  EthiopicCalendar.ctor6(int year, int month, int date)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor6, [year, month, date]).object);

  static final _id_ctor7 =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(Ljava/util/Date;)V");

  /// from: public void <init>(java.util.Date date)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructs a <code>EthiopicCalendar</code> with the given date set
  /// in the default time zone with the default locale.
  ///@param date The date to which the new calendar is set.
  EthiopicCalendar.ctor7(jni.JniObject date)
      : super.fromRef(jniAccessors
            .newObjectWithArgs(_classRef, _id_ctor7, [date.reference]).object);

  static final _id_ctor8 =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(IIIIII)V");

  /// from: public void <init>(int year, int month, int date, int hour, int minute, int second)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructs a <code>EthiopicCalendar</code> with the given date
  /// and time set for the default time zone with the default locale.
  ///@param year The value used to set the calendar's \#YEAR YEAR time field.
  ///@param month The value used to set the calendar's \#MONTH MONTH time field.
  ///                  The value is 0-based. e.g., 0 for Meskerem.
  ///@param date The value used to set the calendar's \#DATE DATE time field.
  ///@param hour The value used to set the calendar's \#HOUR_OF_DAY HOUR_OF_DAY time field.
  ///@param minute The value used to set the calendar's \#MINUTE MINUTE time field.
  ///@param second The value used to set the calendar's \#SECOND SECOND time field.
  EthiopicCalendar.ctor8(
      int year, int month, int date, int hour, int minute, int second)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor8,
            [year, month, date, hour, minute, second]).object);

  static final _id_getType =
      jniAccessors.getMethodIDOf(_classRef, "getType", "()Ljava/lang/String;");

  /// from: public java.lang.String getType()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// {@inheritDoc}
  jni.JniString getType() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getType, jni.JniType.objectType, []).object);

  static final _id_setAmeteAlemEra =
      jniAccessors.getMethodIDOf(_classRef, "setAmeteAlemEra", "(Z)V");

  /// from: public void setAmeteAlemEra(boolean onOff)
  ///
  /// Set Alem or Mihret era.
  ///@param onOff Set Amete Alem era if true, otherwise set Amete Mihret era.
  void setAmeteAlemEra(bool onOff) => jniAccessors.callMethodWithArgs(
      reference, _id_setAmeteAlemEra, jni.JniType.voidType, [onOff]).check();

  static final _id_isAmeteAlemEra =
      jniAccessors.getMethodIDOf(_classRef, "isAmeteAlemEra", "()Z");

  /// from: public boolean isAmeteAlemEra()
  ///
  /// Return true if this calendar is set to the Amete Alem era.
  ///@return true if set to the Amete Alem era.
  bool isAmeteAlemEra() => jniAccessors.callMethodWithArgs(
      reference, _id_isAmeteAlemEra, jni.JniType.booleanType, []).boolean;

  static final _id_handleGetExtendedYear =
      jniAccessors.getMethodIDOf(_classRef, "handleGetExtendedYear", "()I");

  /// from: protected int handleGetExtendedYear()
  ///
  /// {@inheritDoc}
  ///@deprecated This API is ICU internal only.
  ///@hide draft / provisional / internal are hidden on Android
  int handleGetExtendedYear() => jniAccessors.callMethodWithArgs(
      reference, _id_handleGetExtendedYear, jni.JniType.intType, []).integer;

  static final _id_handleComputeFields =
      jniAccessors.getMethodIDOf(_classRef, "handleComputeFields", "(I)V");

  /// from: protected void handleComputeFields(int julianDay)
  ///
  /// {@inheritDoc}
  ///@deprecated This API is ICU internal only.
  ///@hide draft / provisional / internal are hidden on Android
  void handleComputeFields(int julianDay) => jniAccessors.callMethodWithArgs(
      reference,
      _id_handleComputeFields,
      jni.JniType.voidType,
      [julianDay]).check();

  static final _id_handleGetLimit =
      jniAccessors.getMethodIDOf(_classRef, "handleGetLimit", "(II)I");

  /// from: protected int handleGetLimit(int field, int limitType)
  ///
  /// {@inheritDoc}
  ///@deprecated This API is ICU internal only.
  ///@hide draft / provisional / internal are hidden on Android
  int handleGetLimit(int field, int limitType) =>
      jniAccessors.callMethodWithArgs(reference, _id_handleGetLimit,
          jni.JniType.intType, [field, limitType]).integer;

  static final _id_handleGetMonthLength =
      jniAccessors.getMethodIDOf(_classRef, "handleGetMonthLength", "(II)I");

  /// from: protected int handleGetMonthLength(int extendedYear, int month)
  ///
  /// Return the number of days in the given month of the given extended
  /// year of this calendar system.  Subclasses should override this
  /// method if they can provide a more correct or more efficient
  /// implementation than the default implementation in Calendar.
  int handleGetMonthLength(int extendedYear, int month) =>
      jniAccessors.callMethodWithArgs(reference, _id_handleGetMonthLength,
          jni.JniType.intType, [extendedYear, month]).integer;

  static final _id_handleComputeMonthStart = jniAccessors.getMethodIDOf(
      _classRef, "handleComputeMonthStart", "(IIZ)I");

  /// from: protected int handleComputeMonthStart(int eyear, int emonth, boolean useMonth)
  ///
  /// Return JD of start of given month/extended year
  int handleComputeMonthStart(int eyear, int emonth, bool useMonth) =>
      jniAccessors.callMethodWithArgs(reference, _id_handleComputeMonthStart,
          jni.JniType.intType, [eyear, emonth, useMonth]).integer;
}
