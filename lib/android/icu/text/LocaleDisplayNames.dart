// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../util/ULocale.dart" as ulocale_;

import "DisplayContext.dart" as displaycontext_;
import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.icu.text.LocaleDisplayNames
///
/// Returns display names of ULocales and components of ULocales. For
/// more information on language, script, region, variant, key, and
/// values, see android.icu.util.ULocale.
class LocaleDisplayNames extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/icu/text/LocaleDisplayNames");
  LocaleDisplayNames.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_getInstance = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "getInstance",
      "(Landroid/icu/util/ULocale;)Landroid/icu/text/LocaleDisplayNames;");

  /// from: static public android.icu.text.LocaleDisplayNames getInstance(android.icu.util.ULocale locale)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Convenience overload of \#getInstance(ULocale, DialectHandling) that specifies
  /// STANDARD dialect handling.
  ///@param locale the display locale
  ///@return a LocaleDisplayNames instance
  static LocaleDisplayNames getInstance(ulocale_.ULocale locale) =>
      LocaleDisplayNames.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_getInstance,
          jni.JniType.objectType,
          [locale.reference]).object);

  static final _id_getInstance1 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "getInstance",
      "(Ljava/util/Locale;)Landroid/icu/text/LocaleDisplayNames;");

  /// from: static public android.icu.text.LocaleDisplayNames getInstance(java.util.Locale locale)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Convenience overload of \#getInstance(Locale, DisplayContext...) that specifies
  /// DisplayContext\#STANDARD_NAMES.
  ///@param locale the display java.util.Locale
  ///@return a LocaleDisplayNames instance
  static LocaleDisplayNames getInstance1(jni.JniObject locale) =>
      LocaleDisplayNames.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_getInstance1,
          jni.JniType.objectType,
          [locale.reference]).object);

  static final _id_getInstance2 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "getInstance",
      "(Landroid/icu/util/ULocale;Landroid/icu/text/LocaleDisplayNames\$DialectHandling;)Landroid/icu/text/LocaleDisplayNames;");

  /// from: static public android.icu.text.LocaleDisplayNames getInstance(android.icu.util.ULocale locale, android.icu.text.LocaleDisplayNames.DialectHandling dialectHandling)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns an instance of LocaleDisplayNames that returns names formatted for the provided locale,
  /// using the provided dialectHandling.
  ///@param locale the display locale
  ///@param dialectHandling how to select names for locales
  ///@return a LocaleDisplayNames instance
  static LocaleDisplayNames getInstance2(ulocale_.ULocale locale,
          LocaleDisplayNames_DialectHandling dialectHandling) =>
      LocaleDisplayNames.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_getInstance2,
          jni.JniType.objectType,
          [locale.reference, dialectHandling.reference]).object);

  static final _id_getInstance3 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "getInstance",
      "(Landroid/icu/util/ULocale;[Landroid/icu/text/DisplayContext;)Landroid/icu/text/LocaleDisplayNames;");

  /// from: static public android.icu.text.LocaleDisplayNames getInstance(android.icu.util.ULocale locale, android.icu.text.DisplayContext[] contexts)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns an instance of LocaleDisplayNames that returns names formatted for the provided locale,
  /// using the provided DisplayContext settings
  ///@param locale the display locale
  ///@param contexts one or more context settings (e.g.&nbsp;for dialect
  ///              handling, capitalization, etc.
  ///@return a LocaleDisplayNames instance
  static LocaleDisplayNames getInstance3(
          ulocale_.ULocale locale, jni.JniObject contexts) =>
      LocaleDisplayNames.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_getInstance3,
          jni.JniType.objectType,
          [locale.reference, contexts.reference]).object);

  static final _id_getInstance4 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "getInstance",
      "(Ljava/util/Locale;[Landroid/icu/text/DisplayContext;)Landroid/icu/text/LocaleDisplayNames;");

  /// from: static public android.icu.text.LocaleDisplayNames getInstance(java.util.Locale locale, android.icu.text.DisplayContext[] contexts)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns an instance of LocaleDisplayNames that returns names formatted for the provided
  /// java.util.Locale, using the provided DisplayContext settings
  ///@param locale the display java.util.Locale
  ///@param contexts one or more context settings (e.g. for dialect
  ///              handling, capitalization, etc.
  ///@return a LocaleDisplayNames instance
  static LocaleDisplayNames getInstance4(
          jni.JniObject locale, jni.JniObject contexts) =>
      LocaleDisplayNames.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_getInstance4,
          jni.JniType.objectType,
          [locale.reference, contexts.reference]).object);

  static final _id_getLocale = jniAccessors.getMethodIDOf(
      _classRef, "getLocale", "()Landroid/icu/util/ULocale;");

  /// from: public abstract android.icu.util.ULocale getLocale()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the locale used to determine the display names. This is not necessarily the same
  /// locale passed to \#getInstance.
  ///@return the display locale
  ulocale_.ULocale getLocale() =>
      ulocale_.ULocale.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getLocale, jni.JniType.objectType, []).object);

  static final _id_getDialectHandling = jniAccessors.getMethodIDOf(
      _classRef,
      "getDialectHandling",
      "()Landroid/icu/text/LocaleDisplayNames\$DialectHandling;");

  /// from: public abstract android.icu.text.LocaleDisplayNames.DialectHandling getDialectHandling()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the dialect handling used in the display names.
  ///@return the dialect handling enum
  LocaleDisplayNames_DialectHandling getDialectHandling() =>
      LocaleDisplayNames_DialectHandling.fromRef(jniAccessors
          .callMethodWithArgs(reference, _id_getDialectHandling,
              jni.JniType.objectType, []).object);

  static final _id_getContext = jniAccessors.getMethodIDOf(
      _classRef,
      "getContext",
      "(Landroid/icu/text/DisplayContext\$Type;)Landroid/icu/text/DisplayContext;");

  /// from: public abstract android.icu.text.DisplayContext getContext(android.icu.text.DisplayContext.Type type)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the current value for a specified DisplayContext.Type.
  ///@param type the DisplayContext.Type whose value to return
  ///@return the current DisplayContext setting for the specified type
  displaycontext_.DisplayContext getContext(
          displaycontext_.DisplayContext_Type type) =>
      displaycontext_.DisplayContext.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_getContext,
          jni.JniType.objectType,
          [type.reference]).object);

  static final _id_localeDisplayName = jniAccessors.getMethodIDOf(_classRef,
      "localeDisplayName", "(Landroid/icu/util/ULocale;)Ljava/lang/String;");

  /// from: public abstract java.lang.String localeDisplayName(android.icu.util.ULocale locale)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the display name of the provided ulocale.
  /// When no display names are available for all or portions
  /// of the original locale ID, those portions may be
  /// used directly (possibly in a more canonical form) as
  /// part of the  returned display name.
  ///@param locale the locale whose display name to return
  ///@return the display name of the provided locale
  jni.JniString localeDisplayName(ulocale_.ULocale locale) =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_localeDisplayName,
          jni.JniType.objectType,
          [locale.reference]).object);

  static final _id_localeDisplayName1 = jniAccessors.getMethodIDOf(
      _classRef, "localeDisplayName", "(Ljava/util/Locale;)Ljava/lang/String;");

  /// from: public abstract java.lang.String localeDisplayName(java.util.Locale locale)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the display name of the provided locale.
  /// When no display names are available for all or portions
  /// of the original locale ID, those portions may be
  /// used directly (possibly in a more canonical form) as
  /// part of the  returned display name.
  ///@param locale the locale whose display name to return
  ///@return the display name of the provided locale
  jni.JniString localeDisplayName1(jni.JniObject locale) =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_localeDisplayName1,
          jni.JniType.objectType,
          [locale.reference]).object);

  static final _id_localeDisplayName2 = jniAccessors.getMethodIDOf(
      _classRef, "localeDisplayName", "(Ljava/lang/String;)Ljava/lang/String;");

  /// from: public abstract java.lang.String localeDisplayName(java.lang.String localeId)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the display name of the provided locale id.
  /// When no display names are available for all or portions
  /// of the original locale ID, those portions may be
  /// used directly (possibly in a more canonical form) as
  /// part of the  returned display name.
  ///@param localeId the id of the locale whose display name to return
  ///@return the display name of the provided locale
  jni.JniString localeDisplayName2(jni.JniString localeId) =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_localeDisplayName2,
          jni.JniType.objectType,
          [localeId.reference]).object);

  static final _id_languageDisplayName = jniAccessors.getMethodIDOf(_classRef,
      "languageDisplayName", "(Ljava/lang/String;)Ljava/lang/String;");

  /// from: public abstract java.lang.String languageDisplayName(java.lang.String lang)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the display name of the provided language code.
  ///@param lang the language code
  ///@return the display name of the provided language code
  jni.JniString languageDisplayName(jni.JniString lang) =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_languageDisplayName,
          jni.JniType.objectType,
          [lang.reference]).object);

  static final _id_scriptDisplayName = jniAccessors.getMethodIDOf(
      _classRef, "scriptDisplayName", "(Ljava/lang/String;)Ljava/lang/String;");

  /// from: public abstract java.lang.String scriptDisplayName(java.lang.String script)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the display name of the provided script code.
  ///@param script the script code
  ///@return the display name of the provided script code
  jni.JniString scriptDisplayName(jni.JniString script) =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_scriptDisplayName,
          jni.JniType.objectType,
          [script.reference]).object);

  static final _id_scriptDisplayName1 = jniAccessors.getMethodIDOf(
      _classRef, "scriptDisplayName", "(I)Ljava/lang/String;");

  /// from: public abstract java.lang.String scriptDisplayName(int scriptCode)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the display name of the provided script code.  See
  /// android.icu.lang.UScript for recognized script codes.
  ///@param scriptCode the script code number
  ///@return the display name of the provided script code
  jni.JniString scriptDisplayName1(int scriptCode) =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_scriptDisplayName1, jni.JniType.objectType, [scriptCode]).object);

  static final _id_regionDisplayName = jniAccessors.getMethodIDOf(
      _classRef, "regionDisplayName", "(Ljava/lang/String;)Ljava/lang/String;");

  /// from: public abstract java.lang.String regionDisplayName(java.lang.String region)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the display name of the provided region code.
  ///@param region the region code
  ///@return the display name of the provided region code
  jni.JniString regionDisplayName(jni.JniString region) =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_regionDisplayName,
          jni.JniType.objectType,
          [region.reference]).object);

  static final _id_variantDisplayName = jniAccessors.getMethodIDOf(_classRef,
      "variantDisplayName", "(Ljava/lang/String;)Ljava/lang/String;");

  /// from: public abstract java.lang.String variantDisplayName(java.lang.String variant)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the display name of the provided variant.
  ///@param variant the variant string
  ///@return the display name of the provided variant
  jni.JniString variantDisplayName(jni.JniString variant) =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_variantDisplayName,
          jni.JniType.objectType,
          [variant.reference]).object);

  static final _id_keyDisplayName = jniAccessors.getMethodIDOf(
      _classRef, "keyDisplayName", "(Ljava/lang/String;)Ljava/lang/String;");

  /// from: public abstract java.lang.String keyDisplayName(java.lang.String key)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the display name of the provided locale key.
  ///@param key the locale key name
  ///@return the display name of the provided locale key
  jni.JniString keyDisplayName(jni.JniString key) =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_keyDisplayName, jni.JniType.objectType, [key.reference]).object);

  static final _id_keyValueDisplayName = jniAccessors.getMethodIDOf(
      _classRef,
      "keyValueDisplayName",
      "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;");

  /// from: public abstract java.lang.String keyValueDisplayName(java.lang.String key, java.lang.String value)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the display name of the provided value (used with the provided key).
  ///@param key the locale key name
  ///@param value the locale key's value
  ///@return the display name of the provided value
  jni.JniString keyValueDisplayName(jni.JniString key, jni.JniString value) =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_keyValueDisplayName,
          jni.JniType.objectType,
          [key.reference, value.reference]).object);

  static final _id_getUiList = jniAccessors.getMethodIDOf(_classRef,
      "getUiList", "(Ljava/util/Set;ZLjava/util/Comparator;)Ljava/util/List;");

  /// from: public java.util.List<android.icu.text.LocaleDisplayNames.UiListItem> getUiList(java.util.Set<android.icu.util.ULocale> localeSet, boolean inSelf, java.util.Comparator<java.lang.Object> collator)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Return a list of information used to construct a UI list of locale names.
  ///@param collator how to collate\u2014should normally be Collator.getInstance(getDisplayLocale())
  ///@param inSelf if true, compares the nameInSelf, otherwise the nameInDisplayLocale.
  /// Set depending on which field (displayLocale vs self) is to show up in the UI.
  /// If both are to show up in the UI, then it should be the one used for the primary sort order.
  ///@param localeSet a list of locales to present in a UI list. The casing uses the settings in the LocaleDisplayNames instance.
  ///@return an ordered list of UiListItems.
  ///@throws IllformedLocaleException if any of the locales in localeSet are malformed.
  jni.JniObject getUiList(
          jni.JniObject localeSet, bool inSelf, jni.JniObject collator) =>
      jni.JniObject.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_getUiList,
          jni.JniType.objectType,
          [localeSet.reference, inSelf, collator.reference]).object);

  static final _id_getUiListCompareWholeItems = jniAccessors.getMethodIDOf(
      _classRef,
      "getUiListCompareWholeItems",
      "(Ljava/util/Set;Ljava/util/Comparator;)Ljava/util/List;");

  /// from: public abstract java.util.List<android.icu.text.LocaleDisplayNames.UiListItem> getUiListCompareWholeItems(java.util.Set<android.icu.util.ULocale> localeSet, java.util.Comparator<android.icu.text.LocaleDisplayNames.UiListItem> comparator)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Return a list of information used to construct a UI list of locale names, providing more access to control the sorting.
  /// Normally use getUiList instead.
  ///@param comparator how to sort the UiListItems in the result.
  ///@param localeSet a list of locales to present in a UI list. The casing uses the settings in the LocaleDisplayNames instance.
  ///@return an ordered list of UiListItems.
  ///@throws IllformedLocaleException if any of the locales in localeSet are malformed.
  jni.JniObject getUiListCompareWholeItems(
          jni.JniObject localeSet, jni.JniObject comparator) =>
      jni.JniObject.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_getUiListCompareWholeItems,
          jni.JniType.objectType,
          [localeSet.reference, comparator.reference]).object);
}

/// from: android.icu.text.LocaleDisplayNames$UiListItem
///
/// Struct-like class used to return information for constructing a UI list, each corresponding to a locale.
class LocaleDisplayNames_UiListItem extends jni.JniObject {
  static final _classRef = jniAccessors
      .getClassOf("android/icu/text/LocaleDisplayNames\$UiListItem");
  LocaleDisplayNames_UiListItem.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_minimized = jniAccessors.getFieldIDOf(
      _classRef, "minimized", "Landroid/icu/util/ULocale;");

  /// from: public final android.icu.util.ULocale minimized
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the minimized locale for an input locale, such as sr-Cyrl \u2192 sr
  ulocale_.ULocale get minimized => ulocale_.ULocale.fromRef(jniAccessors
      .getField(reference, _id_minimized, jni.JniType.objectType)
      .object);

  static final _id_modified = jniAccessors.getFieldIDOf(
      _classRef, "modified", "Landroid/icu/util/ULocale;");

  /// from: public final android.icu.util.ULocale modified
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the modified locale for an input locale, such as sr \u2192 sr-Cyrl, where there is also an sr-Latn in the list
  ulocale_.ULocale get modified => ulocale_.ULocale.fromRef(jniAccessors
      .getField(reference, _id_modified, jni.JniType.objectType)
      .object);

  static final _id_nameInDisplayLocale = jniAccessors.getFieldIDOf(
      _classRef, "nameInDisplayLocale", "Ljava/lang/String;");

  /// from: public final java.lang.String nameInDisplayLocale
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the name of the modified locale in the display locale, such as "Englisch (VS)" (for 'en-US', where the display locale is 'de').
  jni.JniString get nameInDisplayLocale => jni.JniString.fromRef(jniAccessors
      .getField(reference, _id_nameInDisplayLocale, jni.JniType.objectType)
      .object);

  static final _id_nameInSelf =
      jniAccessors.getFieldIDOf(_classRef, "nameInSelf", "Ljava/lang/String;");

  /// from: public final java.lang.String nameInSelf
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the name of the modified locale in itself, such as "English (US)" (for 'en-US').
  jni.JniString get nameInSelf => jni.JniString.fromRef(jniAccessors
      .getField(reference, _id_nameInSelf, jni.JniType.objectType)
      .object);

  static final _id_ctor = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/icu/util/ULocale;Landroid/icu/util/ULocale;Ljava/lang/String;Ljava/lang/String;)V");

  /// from: public void <init>(android.icu.util.ULocale minimized, android.icu.util.ULocale modified, java.lang.String nameInDisplayLocale, java.lang.String nameInSelf)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructor, normally only called internally.
  ///@param minimized locale for an input locale
  ///@param modified modified for an input locale
  ///@param nameInDisplayLocale name of the modified locale in the display locale
  ///@param nameInSelf name of the modified locale in itself
  LocaleDisplayNames_UiListItem(
      ulocale_.ULocale minimized,
      ulocale_.ULocale modified,
      jni.JniString nameInDisplayLocale,
      jni.JniString nameInSelf)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor, [
          minimized.reference,
          modified.reference,
          nameInDisplayLocale.reference,
          nameInSelf.reference
        ]).object);

  static final _id_equals1 =
      jniAccessors.getMethodIDOf(_classRef, "equals", "(Ljava/lang/Object;)Z");

  /// from: public boolean equals(java.lang.Object obj)
  ///
  /// {@inheritDoc}
  bool equals1(jni.JniObject obj) => jniAccessors.callMethodWithArgs(
      reference, _id_equals1, jni.JniType.booleanType, [obj.reference]).boolean;

  static final _id_hashCode1 =
      jniAccessors.getMethodIDOf(_classRef, "hashCode", "()I");

  /// from: public int hashCode()
  ///
  /// {@inheritDoc}
  int hashCode1() => jniAccessors.callMethodWithArgs(
      reference, _id_hashCode1, jni.JniType.intType, []).integer;

  static final _id_toString1 =
      jniAccessors.getMethodIDOf(_classRef, "toString", "()Ljava/lang/String;");

  /// from: public java.lang.String toString()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// {@inheritDoc}
  jni.JniString toString1() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_toString1, jni.JniType.objectType, []).object);

  static final _id_getComparator = jniAccessors.getStaticMethodIDOf(_classRef,
      "getComparator", "(Ljava/util/Comparator;Z)Ljava/util/Comparator;");

  /// from: static public java.util.Comparator<android.icu.text.LocaleDisplayNames.UiListItem> getComparator(java.util.Comparator<java.lang.Object> comparator, boolean inSelf)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Return a comparator that compares the locale names for the display locale or the in-self names,
  /// depending on an input parameter.
  ///@param inSelf if true, compares the nameInSelf, otherwise the nameInDisplayLocale
  ///@param comparator (meant for strings, but because Java Collator doesn't have &lt;String&gt;...)
  ///@return UiListItem comparator
  static jni.JniObject getComparator(jni.JniObject comparator, bool inSelf) =>
      jni.JniObject.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_getComparator,
          jni.JniType.objectType,
          [comparator.reference, inSelf]).object);
}

/// from: android.icu.text.LocaleDisplayNames$DialectHandling
///
/// Enum used in \#getInstance(ULocale, DialectHandling).
class LocaleDisplayNames_DialectHandling extends jni.JniObject {
  static final _classRef = jniAccessors
      .getClassOf("android/icu/text/LocaleDisplayNames\$DialectHandling");
  LocaleDisplayNames_DialectHandling.fromRef(jni.JObject ref)
      : super.fromRef(ref);

  static final _id_values = jniAccessors.getStaticMethodIDOf(_classRef,
      "values", "()[Landroid/icu/text/LocaleDisplayNames\$DialectHandling;");

  /// from: static public android.icu.text.LocaleDisplayNames.DialectHandling[] values()
  /// The returned object must be deleted after use, by calling the `delete` method.
  static jni.JniObject values() =>
      jni.JniObject.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_values, jni.JniType.objectType, []).object);

  static final _id_valueOf = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "valueOf",
      "(Ljava/lang/String;)Landroid/icu/text/LocaleDisplayNames\$DialectHandling;");

  /// from: static public android.icu.text.LocaleDisplayNames.DialectHandling valueOf(java.lang.String name)
  /// The returned object must be deleted after use, by calling the `delete` method.
  static LocaleDisplayNames_DialectHandling valueOf(jni.JniString name) =>
      LocaleDisplayNames_DialectHandling.fromRef(jniAccessors
          .callStaticMethodWithArgs(_classRef, _id_valueOf,
              jni.JniType.objectType, [name.reference]).object);
}
