// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.icu.lang.UCharacterCategory
///
/// Enumerated Unicode category types from the UnicodeData.txt file.
/// Used as return results from <a href=UCharacter.html>UCharacter</a>
/// Equivalent to icu's UCharCategory.
/// Refer to <a href="http://www.unicode.org/Public/UNIDATA/UCD.html">
/// Unicode Consortium</a> for more information about UnicodeData.txt.
///
/// _NOTE:_ the UCharacterCategory values are _not_ compatible with
/// those returned by java.lang.Character.getType.  UCharacterCategory values
/// match the ones used in ICU4C, while java.lang.Character type
/// values, though similar, skip the value 17.
///
///
/// This class is not subclassable
///
///
///@author Syn Wee Quek
class UCharacterCategory extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/icu/lang/UCharacterCategory");
  UCharacterCategory.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_toString1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "toString", "(I)Ljava/lang/String;");

  /// from: static public java.lang.String toString(int category)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Gets the name of the argument category
  ///@param category to retrieve name
  ///@return category name
  static jni.JniString toString1(int category) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_toString1, jni.JniType.objectType, [category]).object);
}
