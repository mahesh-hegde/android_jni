// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../util/VersionInfo.dart" as versioninfo_;

import "../text/BreakIterator.dart" as breakiterator_;

import "../util/ULocale.dart" as ulocale_;

import "../util/RangeValueIterator.dart" as rangevalueiterator_;

import "../util/ValueIterator.dart" as valueiterator_;
import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.icu.lang.UCharacter
///
/// <strong>[icu enhancement]</strong> ICU's replacement for java.lang.Character.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.
///
/// The UCharacter class provides extensions to the java.lang.Character class.
/// These extensions provide support for more Unicode properties.
/// Each ICU release supports the latest version of Unicode available at that time.
///
/// For some time before Java 5 added support for supplementary Unicode code points,
/// The ICU UCharacter class and many other ICU classes already supported them.
/// Some UCharacter methods and constants were widened slightly differently than
/// how the Character class methods and constants were widened later.
/// In particular, Character\#MAX_VALUE is still a char with the value U+FFFF,
/// while the UCharacter\#MAX_VALUE is an int with the value U+10FFFF.
///
/// Code points are represented in these API using ints. While it would be
/// more convenient in Java to have a separate primitive datatype for them,
/// ints suffice in the meantime.
///
/// Aside from the additions for UTF-16 support, and the updated Unicode
/// properties, the main differences between UCharacter and Character are:
/// <ul>
/// <li> UCharacter is not designed to be a char wrapper and does not have
///      APIs to which involves management of that single char.<br>
///      These include:
///      <ul>
///        <li> char charValue(),
///        <li> int compareTo(java.lang.Character, java.lang.Character), etc.
///      </ul>
/// <li> UCharacter does not include Character APIs that are deprecated, nor
///      does it include the Java-specific character information, such as
///      boolean isJavaIdentifierPart(char ch).
/// <li> Character maps characters 'A' - 'Z' and 'a' - 'z' to the numeric
///      values '10' - '35'. UCharacter also does this in digit and
///      getNumericValue, to adhere to the java semantics of these
///      methods.  New methods unicodeDigit, and
///      getUnicodeNumericValue do not treat the above code points
///      as having numeric values.  This is a semantic change from ICU4J 1.3.1.
/// </ul>
///
/// In addition to Java compatibility functions, which calculate derived properties,
/// this API provides low-level access to the Unicode Character Database.
///
/// Unicode assigns each code point (not just assigned character) values for
/// many properties.
/// Most of them are simple boolean flags, or constants from a small enumerated list.
/// For some properties, values are strings or other relatively more complex types.
///
/// For more information see
/// <a href="http://www.unicode/org/ucd/">"About the Unicode Character Database"</a>
/// (http://www.unicode.org/ucd/)
/// and the <a href="http://www.icu-project.org/userguide/properties.html">ICU
/// User Guide chapter on Properties</a>
/// (http://www.icu-project.org/userguide/properties.html).
///
/// There are also functions that provide easy migration from C/POSIX functions
/// like isblank(). Their use is generally discouraged because the C/POSIX
/// standards do not define their semantics beyond the ASCII range, which means
/// that different implementations exhibit very different behavior.
/// Instead, Unicode properties should be used directly.
///
/// There are also only a few, broad C/POSIX character classes, and they tend
/// to be used for conflicting purposes. For example, the "isalpha()" class
/// is sometimes used to determine word boundaries, while a more sophisticated
/// approach would at least distinguish initial letters from continuation
/// characters (the latter including combining marks).
/// (In ICU, BreakIterator is the most sophisticated API for word boundaries.)
/// Another example: There is no "istitle()" class for titlecase characters.
///
/// ICU 3.4 and later provides API access for all twelve C/POSIX character classes.
/// ICU implements them according to the Standard Recommendations in
/// Annex C: Compatibility Properties of UTS \#18 Unicode Regular Expressions
/// (http://www.unicode.org/reports/tr18/\#Compatibility_Properties).
///
/// API access for C/POSIX character classes is as follows:
/// <pre>{@code
/// - alpha:     isUAlphabetic(c) or hasBinaryProperty(c, UProperty.ALPHABETIC)
/// - lower:     isULowercase(c) or hasBinaryProperty(c, UProperty.LOWERCASE)
/// - upper:     isUUppercase(c) or hasBinaryProperty(c, UProperty.UPPERCASE)
/// - punct:     ((1<<getType(c)) & ((1<<DASH_PUNCTUATION)|(1<<START_PUNCTUATION)|
///               (1<<END_PUNCTUATION)|(1<<CONNECTOR_PUNCTUATION)|(1<<OTHER_PUNCTUATION)|
///               (1<<INITIAL_PUNCTUATION)|(1<<FINAL_PUNCTUATION)))!=0
/// - digit:     isDigit(c) or getType(c)==DECIMAL_DIGIT_NUMBER
/// - xdigit:    hasBinaryProperty(c, UProperty.POSIX_XDIGIT)
/// - alnum:     hasBinaryProperty(c, UProperty.POSIX_ALNUM)
/// - space:     isUWhiteSpace(c) or hasBinaryProperty(c, UProperty.WHITE_SPACE)
/// - blank:     hasBinaryProperty(c, UProperty.POSIX_BLANK)
/// - cntrl:     getType(c)==CONTROL
/// - graph:     hasBinaryProperty(c, UProperty.POSIX_GRAPH)
/// - print:     hasBinaryProperty(c, UProperty.POSIX_PRINT)}</pre>
///
/// The C/POSIX character classes are also available in UnicodeSet patterns,
/// using patterns like [:graph:] or \p{graph}.
///
/// <strong>[icu] Note:</strong> There are several ICU (and Java) whitespace functions.
/// Comparison:<ul>
/// <li> isUWhiteSpace=UCHAR_WHITE_SPACE: Unicode White_Space property;
///       most of general categories "Z" (separators) + most whitespace ISO controls
///       (including no-break spaces, but excluding IS1..IS4 and ZWSP)
/// <li> isWhitespace: Java isWhitespace; Z + whitespace ISO controls but excluding no-break spaces
/// <li> isSpaceChar: just Z (including no-break spaces)</ul>
///
///
/// This class is not subclassable.
///@author Syn Wee Quek
///@see android.icu.lang.UCharacterEnums
class UCharacter extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/icu/lang/UCharacter");
  UCharacter.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int FOLD_CASE_DEFAULT
  ///
  /// <strong>[icu]</strong> Option value for case folding: use default mappings defined in
  /// CaseFolding.txt.
  static const FOLD_CASE_DEFAULT = 0;

  /// from: static public final int FOLD_CASE_EXCLUDE_SPECIAL_I
  ///
  /// <strong>[icu]</strong> Option value for case folding:
  /// Use the modified set of mappings provided in CaseFolding.txt to handle dotted I
  /// and dotless i appropriately for Turkic languages (tr, az).
  ///
  /// Before Unicode 3.2, CaseFolding.txt contains mappings marked with 'I' that
  /// are to be included for default mappings and
  /// excluded for the Turkic-specific mappings.
  ///
  /// Unicode 3.2 CaseFolding.txt instead contains mappings marked with 'T' that
  /// are to be excluded for default mappings and
  /// included for the Turkic-specific mappings.
  static const FOLD_CASE_EXCLUDE_SPECIAL_I = 1;

  /// from: static public final int MAX_CODE_POINT
  ///
  /// Constant U+10FFFF, same as Character\#MAX_CODE_POINT.
  static const MAX_CODE_POINT = 1114111;

  /// from: static public final char MAX_HIGH_SURROGATE
  ///
  /// Constant U+DBFF, same as Character\#MAX_HIGH_SURROGATE.
  static const MAX_HIGH_SURROGATE = "�";

  /// from: static public final char MAX_LOW_SURROGATE
  ///
  /// Constant U+DFFF, same as Character\#MAX_LOW_SURROGATE.
  static const MAX_LOW_SURROGATE = "�";

  /// from: static public final int MAX_RADIX
  ///
  /// Compatibility constant for Java Character's MAX_RADIX.
  static const MAX_RADIX = 36;

  /// from: static public final char MAX_SURROGATE
  ///
  /// Constant U+DFFF, same as Character\#MAX_SURROGATE.
  static const MAX_SURROGATE = "�";

  /// from: static public final int MAX_VALUE
  ///
  /// The highest Unicode code point value (scalar value), constant U+10FFFF (uses 21 bits).
  /// Same as Character\#MAX_CODE_POINT.
  ///
  /// Up-to-date Unicode implementation of Character\#MAX_VALUE
  /// which is still a char with the value U+FFFF.
  static const MAX_VALUE = 1114111;

  /// from: static public final int MIN_CODE_POINT
  ///
  /// Constant U+0000, same as Character\#MIN_CODE_POINT.
  static const MIN_CODE_POINT = 0;

  /// from: static public final char MIN_HIGH_SURROGATE
  ///
  /// Constant U+D800, same as Character\#MIN_HIGH_SURROGATE.
  static const MIN_HIGH_SURROGATE = "�";

  /// from: static public final char MIN_LOW_SURROGATE
  ///
  /// Constant U+DC00, same as Character\#MIN_LOW_SURROGATE.
  static const MIN_LOW_SURROGATE = "�";

  /// from: static public final int MIN_RADIX
  ///
  /// Compatibility constant for Java Character's MIN_RADIX.
  static const MIN_RADIX = 2;

  /// from: static public final int MIN_SUPPLEMENTARY_CODE_POINT
  ///
  /// Constant U+10000, same as Character\#MIN_SUPPLEMENTARY_CODE_POINT.
  static const MIN_SUPPLEMENTARY_CODE_POINT = 65536;

  /// from: static public final char MIN_SURROGATE
  ///
  /// Constant U+D800, same as Character\#MIN_SURROGATE.
  static const MIN_SURROGATE = "�";

  /// from: static public final int MIN_VALUE
  ///
  /// The lowest Unicode code point value, constant 0.
  /// Same as Character\#MIN_CODE_POINT, same integer value as Character\#MIN_VALUE.
  static const MIN_VALUE = 0;

  /// from: static public final double NO_NUMERIC_VALUE
  ///
  /// Special value that is returned by getUnicodeNumericValue(int) when no
  /// numeric value is defined for a code point.
  ///@see \#getUnicodeNumericValue
  static const NO_NUMERIC_VALUE = -123456789.0;

  /// from: static public final int REPLACEMENT_CHAR
  ///
  /// Unicode value used when translating into Unicode encoding form and there
  /// is no existing character.
  static const REPLACEMENT_CHAR = 65533;

  /// from: static public final int SUPPLEMENTARY_MIN_VALUE
  ///
  /// The minimum value for Supplementary code points, constant U+10000.
  /// Same as Character\#MIN_SUPPLEMENTARY_CODE_POINT.
  static const SUPPLEMENTARY_MIN_VALUE = 65536;

  /// from: static public final int TITLECASE_NO_BREAK_ADJUSTMENT
  ///
  /// Do not adjust the titlecasing indexes from BreakIterator::next() indexes;
  /// titlecase exactly the characters at breaks from the iterator.
  /// Option bit for titlecasing APIs that take an options bit set.
  ///
  /// By default, titlecasing will take each break iterator index,
  /// adjust it by looking for the next cased character, and titlecase that one.
  /// Other characters are lowercased.
  ///
  /// This follows Unicode 4 &amp; 5 section 3.13 Default Case Operations:
  ///
  /// R3  toTitlecase(X): Find the word boundaries based on Unicode Standard Annex
  /// \#29, "Text Boundaries." Between each pair of word boundaries, find the first
  /// cased character F. If F exists, map F to default_title(F); then map each
  /// subsequent character C to default_lower(C).
  ///@see \#toTitleCase
  ///@see \#TITLECASE_NO_LOWERCASE
  static const TITLECASE_NO_BREAK_ADJUSTMENT = 512;

  /// from: static public final int TITLECASE_NO_LOWERCASE
  ///
  /// Do not lowercase non-initial parts of words when titlecasing.
  /// Option bit for titlecasing APIs that take an options bit set.
  ///
  /// By default, titlecasing will titlecase the first cased character
  /// of a word and lowercase all other characters.
  /// With this option, the other characters will not be modified.
  ///@see \#toTitleCase
  static const TITLECASE_NO_LOWERCASE = 256;

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Private constructor to prevent instantiation
  UCharacter()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_digit =
      jniAccessors.getStaticMethodIDOf(_classRef, "digit", "(II)I");

  /// from: static public int digit(int ch, int radix)
  ///
  /// Returnss the numeric value of a decimal digit code point.
  /// <br>This method observes the semantics of
  /// <code>java.lang.Character.digit()</code>.  Note that this
  /// will return positive values for code points for which isDigit
  /// returns false, just like java.lang.Character.
  /// <br>_Semantic Change:_ In release 1.3.1 and
  /// prior, this did not treat the European letters as having a
  /// digit value, and also treated numeric letters and other numbers as
  /// digits.
  /// This has been changed to conform to the java semantics.
  /// <br>A code point is a valid digit if and only if:
  /// <ul>
  ///   <li>ch is a decimal digit or one of the european letters, and
  ///   <li>the value of ch is less than the specified radix.
  /// </ul>
  ///@param ch the code point to query
  ///@param radix the radix
  ///@return the numeric value represented by the code point in the
  /// specified radix, or -1 if the code point is not a decimal digit
  /// or if its value is too large for the radix
  static int digit(int ch, int radix) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_digit, jni.JniType.intType, [ch, radix]).integer;

  static final _id_digit1 =
      jniAccessors.getStaticMethodIDOf(_classRef, "digit", "(I)I");

  /// from: static public int digit(int ch)
  ///
  /// Returnss the numeric value of a decimal digit code point.
  /// <br>This is a convenience overload of <code>digit(int, int)</code>
  /// that provides a decimal radix.
  /// <br>_Semantic Change:_ In release 1.3.1 and prior, this
  /// treated numeric letters and other numbers as digits.  This has
  /// been changed to conform to the java semantics.
  ///@param ch the code point to query
  ///@return the numeric value represented by the code point,
  /// or -1 if the code point is not a decimal digit or if its
  /// value is too large for a decimal radix
  static int digit1(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_digit1, jni.JniType.intType, [ch]).integer;

  static final _id_getNumericValue =
      jniAccessors.getStaticMethodIDOf(_classRef, "getNumericValue", "(I)I");

  /// from: static public int getNumericValue(int ch)
  ///
  /// Returns the numeric value of the code point as a nonnegative
  /// integer.
  /// <br>If the code point does not have a numeric value, then -1 is returned.
  /// <br>
  /// If the code point has a numeric value that cannot be represented as a
  /// nonnegative integer (for example, a fractional value), then -2 is
  /// returned.
  ///@param ch the code point to query
  ///@return the numeric value of the code point, or -1 if it has no numeric
  /// value, or -2 if it has a numeric value that cannot be represented as a
  /// nonnegative integer
  static int getNumericValue(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_getNumericValue, jni.JniType.intType, [ch]).integer;

  static final _id_getUnicodeNumericValue = jniAccessors.getStaticMethodIDOf(
      _classRef, "getUnicodeNumericValue", "(I)D");

  /// from: static public double getUnicodeNumericValue(int ch)
  ///
  /// <strong>[icu]</strong> Returns the numeric value for a Unicode code point as defined in the
  /// Unicode Character Database.
  /// A "double" return type is necessary because some numeric values are
  /// fractions, negative, or too large for int.
  /// For characters without any numeric values in the Unicode Character
  /// Database, this function will return NO_NUMERIC_VALUE.
  /// Note: This is different from the Unicode Standard which specifies NaN as the default value.
  /// _API Change:_ In release 2.2 and prior, this API has a
  /// return type int and returns -1 when the argument ch does not have a
  /// corresponding numeric value. This has been changed to synch with ICU4C
  ///
  /// This corresponds to the ICU4C function u_getNumericValue.
  ///@param ch Code point to get the numeric value for.
  ///@return numeric value of ch, or NO_NUMERIC_VALUE if none is defined.
  static double getUnicodeNumericValue(int ch) =>
      jniAccessors.callStaticMethodWithArgs(_classRef,
          _id_getUnicodeNumericValue, jni.JniType.doubleType, [ch]).doubleFloat;

  static final _id_getType =
      jniAccessors.getStaticMethodIDOf(_classRef, "getType", "(I)I");

  /// from: static public int getType(int ch)
  ///
  /// Returns a value indicating a code point's Unicode category.
  /// Up-to-date Unicode implementation of java.lang.Character.getType()
  /// except for the above mentioned code points that had their category
  /// changed.<br>
  /// Return results are constants from the interface
  /// <a href=UCharacterCategory.html>UCharacterCategory</a><br>
  /// _NOTE:_ the UCharacterCategory values are _not_ compatible with
  /// those returned by java.lang.Character.getType.  UCharacterCategory values
  /// match the ones used in ICU4C, while java.lang.Character type
  /// values, though similar, skip the value 17.
  ///@param ch code point whose type is to be determined
  ///@return category which is a value of UCharacterCategory
  static int getType(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_getType, jni.JniType.intType, [ch]).integer;

  static final _id_isDefined =
      jniAccessors.getStaticMethodIDOf(_classRef, "isDefined", "(I)Z");

  /// from: static public boolean isDefined(int ch)
  ///
  /// Determines if a code point has a defined meaning in the up-to-date
  /// Unicode standard.
  /// E.g. supplementary code points though allocated space are not defined in
  /// Unicode yet.<br>
  /// Up-to-date Unicode implementation of java.lang.Character.isDefined()
  ///@param ch code point to be determined if it is defined in the most
  ///        current version of Unicode
  ///@return true if this code point is defined in unicode
  static bool isDefined(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isDefined, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isDigit =
      jniAccessors.getStaticMethodIDOf(_classRef, "isDigit", "(I)Z");

  /// from: static public boolean isDigit(int ch)
  ///
  /// Determines if a code point is a Java digit.
  /// <br>This method observes the semantics of
  /// <code>java.lang.Character.isDigit()</code>. It returns true for decimal
  /// digits only.
  /// <br>_Semantic Change:_ In release 1.3.1 and prior, this treated
  /// numeric letters and other numbers as digits.
  /// This has been changed to conform to the java semantics.
  ///@param ch code point to query
  ///@return true if this code point is a digit
  static bool isDigit(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isDigit, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isISOControl =
      jniAccessors.getStaticMethodIDOf(_classRef, "isISOControl", "(I)Z");

  /// from: static public boolean isISOControl(int ch)
  ///
  /// Determines if the specified code point is an ISO control character.
  /// A code point is considered to be an ISO control character if it is in
  /// the range &\#92;u0000 through &\#92;u001F or in the range &\#92;u007F through
  /// &\#92;u009F.<br>
  /// Up-to-date Unicode implementation of java.lang.Character.isISOControl()
  ///@param ch code point to determine if it is an ISO control character
  ///@return true if code point is a ISO control character
  static bool isISOControl(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isISOControl, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isLetter =
      jniAccessors.getStaticMethodIDOf(_classRef, "isLetter", "(I)Z");

  /// from: static public boolean isLetter(int ch)
  ///
  /// Determines if the specified code point is a letter.
  /// Up-to-date Unicode implementation of java.lang.Character.isLetter()
  ///@param ch code point to determine if it is a letter
  ///@return true if code point is a letter
  static bool isLetter(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isLetter, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isLetterOrDigit =
      jniAccessors.getStaticMethodIDOf(_classRef, "isLetterOrDigit", "(I)Z");

  /// from: static public boolean isLetterOrDigit(int ch)
  ///
  /// Determines if the specified code point is a letter or digit.
  /// <strong>[icu] Note:</strong> This method, unlike java.lang.Character does not regard the ascii
  /// characters 'A' - 'Z' and 'a' - 'z' as digits.
  ///@param ch code point to determine if it is a letter or a digit
  ///@return true if code point is a letter or a digit
  static bool isLetterOrDigit(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isLetterOrDigit, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isJavaIdentifierStart = jniAccessors.getStaticMethodIDOf(
      _classRef, "isJavaIdentifierStart", "(I)Z");

  /// from: static public boolean isJavaIdentifierStart(int cp)
  ///
  /// Compatibility override of Java method, delegates to
  /// java.lang.Character.isJavaIdentifierStart.
  ///@param cp the code point
  ///@return true if the code point can start a java identifier.
  static bool isJavaIdentifierStart(int cp) =>
      jniAccessors.callStaticMethodWithArgs(_classRef,
          _id_isJavaIdentifierStart, jni.JniType.booleanType, [cp]).boolean;

  static final _id_isJavaIdentifierPart = jniAccessors.getStaticMethodIDOf(
      _classRef, "isJavaIdentifierPart", "(I)Z");

  /// from: static public boolean isJavaIdentifierPart(int cp)
  ///
  /// Compatibility override of Java method, delegates to
  /// java.lang.Character.isJavaIdentifierPart.
  ///@param cp the code point
  ///@return true if the code point can continue a java identifier.
  static bool isJavaIdentifierPart(int cp) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_isJavaIdentifierPart,
          jni.JniType.booleanType, [cp]).boolean;

  static final _id_isLowerCase =
      jniAccessors.getStaticMethodIDOf(_classRef, "isLowerCase", "(I)Z");

  /// from: static public boolean isLowerCase(int ch)
  ///
  /// Determines if the specified code point is a lowercase character.
  /// UnicodeData only contains case mappings for code points where they are
  /// one-to-one mappings; it also omits information about context-sensitive
  /// case mappings.<br> For more information about Unicode case mapping
  /// please refer to the
  /// <a href=http://www.unicode.org/unicode/reports/tr21/>Technical report
  /// \#21</a>.<br>
  /// Up-to-date Unicode implementation of java.lang.Character.isLowerCase()
  ///@param ch code point to determine if it is in lowercase
  ///@return true if code point is a lowercase character
  static bool isLowerCase(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isLowerCase, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isWhitespace =
      jniAccessors.getStaticMethodIDOf(_classRef, "isWhitespace", "(I)Z");

  /// from: static public boolean isWhitespace(int ch)
  ///
  /// Determines if the specified code point is a white space character.
  /// A code point is considered to be an whitespace character if and only
  /// if it satisfies one of the following criteria:
  /// <ul>
  /// <li> It is a Unicode Separator character (categories "Z" = "Zs" or "Zl" or "Zp"), but is not
  ///      also a non-breaking space (&\#92;u00A0 or &\#92;u2007 or &\#92;u202F).
  /// <li> It is &\#92;u0009, HORIZONTAL TABULATION.
  /// <li> It is &\#92;u000A, LINE FEED.
  /// <li> It is &\#92;u000B, VERTICAL TABULATION.
  /// <li> It is &\#92;u000C, FORM FEED.
  /// <li> It is &\#92;u000D, CARRIAGE RETURN.
  /// <li> It is &\#92;u001C, FILE SEPARATOR.
  /// <li> It is &\#92;u001D, GROUP SEPARATOR.
  /// <li> It is &\#92;u001E, RECORD SEPARATOR.
  /// <li> It is &\#92;u001F, UNIT SEPARATOR.
  /// </ul>
  ///
  /// This API tries to sync with the semantics of Java's
  /// java.lang.Character.isWhitespace(), but it may not return
  /// the exact same results because of the Unicode version
  /// difference.
  /// Note: Unicode 4.0.1 changed U+200B ZERO WIDTH SPACE from a Space Separator (Zs)
  /// to a Format Control (Cf). Since then, isWhitespace(0x200b) returns false.
  /// See http://www.unicode.org/versions/Unicode4.0.1/
  ///@param ch code point to determine if it is a white space
  ///@return true if the specified code point is a white space character
  static bool isWhitespace(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isWhitespace, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isSpaceChar =
      jniAccessors.getStaticMethodIDOf(_classRef, "isSpaceChar", "(I)Z");

  /// from: static public boolean isSpaceChar(int ch)
  ///
  /// Determines if the specified code point is a Unicode specified space
  /// character, i.e. if code point is in the category Zs, Zl and Zp.
  /// Up-to-date Unicode implementation of java.lang.Character.isSpaceChar().
  ///@param ch code point to determine if it is a space
  ///@return true if the specified code point is a space character
  static bool isSpaceChar(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isSpaceChar, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isTitleCase =
      jniAccessors.getStaticMethodIDOf(_classRef, "isTitleCase", "(I)Z");

  /// from: static public boolean isTitleCase(int ch)
  ///
  /// Determines if the specified code point is a titlecase character.
  /// UnicodeData only contains case mappings for code points where they are
  /// one-to-one mappings; it also omits information about context-sensitive
  /// case mappings.<br>
  /// For more information about Unicode case mapping please refer to the
  /// <a href=http://www.unicode.org/unicode/reports/tr21/>
  /// Technical report \#21</a>.<br>
  /// Up-to-date Unicode implementation of java.lang.Character.isTitleCase().
  ///@param ch code point to determine if it is in title case
  ///@return true if the specified code point is a titlecase character
  static bool isTitleCase(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isTitleCase, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isUnicodeIdentifierPart = jniAccessors.getStaticMethodIDOf(
      _classRef, "isUnicodeIdentifierPart", "(I)Z");

  /// from: static public boolean isUnicodeIdentifierPart(int ch)
  ///
  /// Determines if the specified code point may be any part of a Unicode
  /// identifier other than the starting character.
  /// A code point may be part of a Unicode identifier if and only if it is
  /// one of the following:
  /// <ul>
  /// <li> Lu Uppercase letter
  /// <li> Ll Lowercase letter
  /// <li> Lt Titlecase letter
  /// <li> Lm Modifier letter
  /// <li> Lo Other letter
  /// <li> Nl Letter number
  /// <li> Pc Connecting punctuation character
  /// <li> Nd decimal number
  /// <li> Mc Spacing combining mark
  /// <li> Mn Non-spacing mark
  /// <li> Cf formatting code
  /// </ul>
  /// Up-to-date Unicode implementation of
  /// java.lang.Character.isUnicodeIdentifierPart().<br>
  /// See <a href=http://www.unicode.org/unicode/reports/tr8/>UTR \#8</a>.
  ///@param ch code point to determine if is can be part of a Unicode
  ///        identifier
  ///@return true if code point is any character belonging a unicode
  ///         identifier suffix after the first character
  static bool isUnicodeIdentifierPart(int ch) =>
      jniAccessors.callStaticMethodWithArgs(_classRef,
          _id_isUnicodeIdentifierPart, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isUnicodeIdentifierStart = jniAccessors.getStaticMethodIDOf(
      _classRef, "isUnicodeIdentifierStart", "(I)Z");

  /// from: static public boolean isUnicodeIdentifierStart(int ch)
  ///
  /// Determines if the specified code point is permissible as the first
  /// character in a Unicode identifier.
  /// A code point may start a Unicode identifier if it is of type either
  /// <ul>
  /// <li> Lu Uppercase letter
  /// <li> Ll Lowercase letter
  /// <li> Lt Titlecase letter
  /// <li> Lm Modifier letter
  /// <li> Lo Other letter
  /// <li> Nl Letter number
  /// </ul>
  /// Up-to-date Unicode implementation of
  /// java.lang.Character.isUnicodeIdentifierStart().<br>
  /// See <a href=http://www.unicode.org/unicode/reports/tr8/>UTR \#8</a>.
  ///@param ch code point to determine if it can start a Unicode identifier
  ///@return true if code point is the first character belonging a unicode
  ///              identifier
  static bool isUnicodeIdentifierStart(int ch) =>
      jniAccessors.callStaticMethodWithArgs(_classRef,
          _id_isUnicodeIdentifierStart, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isIdentifierIgnorable = jniAccessors.getStaticMethodIDOf(
      _classRef, "isIdentifierIgnorable", "(I)Z");

  /// from: static public boolean isIdentifierIgnorable(int ch)
  ///
  /// Determines if the specified code point should be regarded as an
  /// ignorable character in a Java identifier.
  /// A character is Java-identifier-ignorable if it has the general category
  /// Cf Formatting Control, or it is a non-Java-whitespace ISO control:
  /// U+0000..U+0008, U+000E..U+001B, U+007F..U+009F.<br>
  /// Up-to-date Unicode implementation of
  /// java.lang.Character.isIdentifierIgnorable().<br>
  /// See <a href=http://www.unicode.org/unicode/reports/tr8/>UTR \#8</a>.
  /// Note that Unicode just recommends to ignore Cf (format controls).
  ///@param ch code point to be determined if it can be ignored in a Unicode
  ///        identifier.
  ///@return true if the code point is ignorable
  static bool isIdentifierIgnorable(int ch) =>
      jniAccessors.callStaticMethodWithArgs(_classRef,
          _id_isIdentifierIgnorable, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isUpperCase =
      jniAccessors.getStaticMethodIDOf(_classRef, "isUpperCase", "(I)Z");

  /// from: static public boolean isUpperCase(int ch)
  ///
  /// Determines if the specified code point is an uppercase character.
  /// UnicodeData only contains case mappings for code point where they are
  /// one-to-one mappings; it also omits information about context-sensitive
  /// case mappings.<br>
  /// For language specific case conversion behavior, use
  /// toUpperCase(locale, str). <br>
  /// For example, the case conversion for dot-less i and dotted I in Turkish,
  /// or for final sigma in Greek.
  /// For more information about Unicode case mapping please refer to the
  /// <a href=http://www.unicode.org/unicode/reports/tr21/>
  /// Technical report \#21</a>.<br>
  /// Up-to-date Unicode implementation of java.lang.Character.isUpperCase().
  ///@param ch code point to determine if it is in uppercase
  ///@return true if the code point is an uppercase character
  static bool isUpperCase(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isUpperCase, jni.JniType.booleanType, [ch]).boolean;

  static final _id_toLowerCase =
      jniAccessors.getStaticMethodIDOf(_classRef, "toLowerCase", "(I)I");

  /// from: static public int toLowerCase(int ch)
  ///
  /// The given code point is mapped to its lowercase equivalent; if the code
  /// point has no lowercase equivalent, the code point itself is returned.
  /// Up-to-date Unicode implementation of java.lang.Character.toLowerCase()
  ///
  /// This function only returns the simple, single-code point case mapping.
  /// Full case mappings should be used whenever possible because they produce
  /// better results by working on whole strings.
  /// They take into account the string context and the language and can map
  /// to a result string with a different length as appropriate.
  /// Full case mappings are applied by the case mapping functions
  /// that take String parameters rather than code points (int).
  /// See also the User Guide chapter on C/POSIX migration:
  /// http://www.icu-project.org/userguide/posix.html\#case_mappings
  ///@param ch code point whose lowercase equivalent is to be retrieved
  ///@return the lowercase equivalent code point
  static int toLowerCase(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_toLowerCase, jni.JniType.intType, [ch]).integer;

  static final _id_toString1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "toString", "(I)Ljava/lang/String;");

  /// from: static public java.lang.String toString(int ch)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Converts argument code point and returns a String object representing
  /// the code point's value in UTF-16 format.
  /// The result is a string whose length is 1 for BMP code points, 2 for supplementary ones.
  ///
  /// Up-to-date Unicode implementation of java.lang.Character.toString().
  ///@param ch code point
  ///@return string representation of the code point, null if code point is not
  ///         defined in unicode
  static jni.JniString toString1(int ch) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_toString1, jni.JniType.objectType, [ch]).object);

  static final _id_toTitleCase =
      jniAccessors.getStaticMethodIDOf(_classRef, "toTitleCase", "(I)I");

  /// from: static public int toTitleCase(int ch)
  ///
  /// Converts the code point argument to titlecase.
  /// If no titlecase is available, the uppercase is returned. If no uppercase
  /// is available, the code point itself is returned.
  /// Up-to-date Unicode implementation of java.lang.Character.toTitleCase()
  ///
  /// This function only returns the simple, single-code point case mapping.
  /// Full case mappings should be used whenever possible because they produce
  /// better results by working on whole strings.
  /// They take into account the string context and the language and can map
  /// to a result string with a different length as appropriate.
  /// Full case mappings are applied by the case mapping functions
  /// that take String parameters rather than code points (int).
  /// See also the User Guide chapter on C/POSIX migration:
  /// http://www.icu-project.org/userguide/posix.html\#case_mappings
  ///@param ch code point  whose title case is to be retrieved
  ///@return titlecase code point
  static int toTitleCase(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_toTitleCase, jni.JniType.intType, [ch]).integer;

  static final _id_toUpperCase =
      jniAccessors.getStaticMethodIDOf(_classRef, "toUpperCase", "(I)I");

  /// from: static public int toUpperCase(int ch)
  ///
  /// Converts the character argument to uppercase.
  /// If no uppercase is available, the character itself is returned.
  /// Up-to-date Unicode implementation of java.lang.Character.toUpperCase()
  ///
  /// This function only returns the simple, single-code point case mapping.
  /// Full case mappings should be used whenever possible because they produce
  /// better results by working on whole strings.
  /// They take into account the string context and the language and can map
  /// to a result string with a different length as appropriate.
  /// Full case mappings are applied by the case mapping functions
  /// that take String parameters rather than code points (int).
  /// See also the User Guide chapter on C/POSIX migration:
  /// http://www.icu-project.org/userguide/posix.html\#case_mappings
  ///@param ch code point whose uppercase is to be retrieved
  ///@return uppercase code point
  static int toUpperCase(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_toUpperCase, jni.JniType.intType, [ch]).integer;

  static final _id_isSupplementary =
      jniAccessors.getStaticMethodIDOf(_classRef, "isSupplementary", "(I)Z");

  /// from: static public boolean isSupplementary(int ch)
  ///
  /// <strong>[icu]</strong> Determines if the code point is a supplementary character.
  /// A code point is a supplementary character if and only if it is greater
  /// than <a href=\#SUPPLEMENTARY_MIN_VALUE>SUPPLEMENTARY_MIN_VALUE</a>
  ///@param ch code point to be determined if it is in the supplementary
  ///        plane
  ///@return true if code point is a supplementary character
  static bool isSupplementary(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isSupplementary, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isBMP =
      jniAccessors.getStaticMethodIDOf(_classRef, "isBMP", "(I)Z");

  /// from: static public boolean isBMP(int ch)
  ///
  /// <strong>[icu]</strong> Determines if the code point is in the BMP plane.
  ///@param ch code point to be determined if it is not a supplementary
  ///        character
  ///@return true if code point is not a supplementary character
  static bool isBMP(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isBMP, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isPrintable =
      jniAccessors.getStaticMethodIDOf(_classRef, "isPrintable", "(I)Z");

  /// from: static public boolean isPrintable(int ch)
  ///
  /// <strong>[icu]</strong> Determines whether the specified code point is a printable character
  /// according to the Unicode standard.
  ///@param ch code point to be determined if it is printable
  ///@return true if the code point is a printable character
  static bool isPrintable(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isPrintable, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isBaseForm =
      jniAccessors.getStaticMethodIDOf(_classRef, "isBaseForm", "(I)Z");

  /// from: static public boolean isBaseForm(int ch)
  ///
  /// <strong>[icu]</strong> Determines whether the specified code point is of base form.
  /// A code point of base form does not graphically combine with preceding
  /// characters, and is neither a control nor a format character.
  ///@param ch code point to be determined if it is of base form
  ///@return true if the code point is of base form
  static bool isBaseForm(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isBaseForm, jni.JniType.booleanType, [ch]).boolean;

  static final _id_getDirection =
      jniAccessors.getStaticMethodIDOf(_classRef, "getDirection", "(I)I");

  /// from: static public int getDirection(int ch)
  ///
  /// <strong>[icu]</strong> Returns the Bidirection property of a code point.
  /// For example, 0x0041 (letter A) has the LEFT_TO_RIGHT directional
  /// property.<br>
  /// Result returned belongs to the interface
  /// <a href=UCharacterDirection.html>UCharacterDirection</a>
  ///@param ch the code point to be determined its direction
  ///@return direction constant from UCharacterDirection.
  static int getDirection(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_getDirection, jni.JniType.intType, [ch]).integer;

  static final _id_isMirrored =
      jniAccessors.getStaticMethodIDOf(_classRef, "isMirrored", "(I)Z");

  /// from: static public boolean isMirrored(int ch)
  ///
  /// Determines whether the code point has the "mirrored" property.
  /// This property is set for characters that are commonly used in
  /// Right-To-Left contexts and need to be displayed with a "mirrored"
  /// glyph.
  ///@param ch code point whose mirror is to be determined
  ///@return true if the code point has the "mirrored" property
  static bool isMirrored(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isMirrored, jni.JniType.booleanType, [ch]).boolean;

  static final _id_getMirror =
      jniAccessors.getStaticMethodIDOf(_classRef, "getMirror", "(I)I");

  /// from: static public int getMirror(int ch)
  ///
  /// <strong>[icu]</strong> Maps the specified code point to a "mirror-image" code point.
  /// For code points with the "mirrored" property, implementations sometimes
  /// need a "poor man's" mapping to another code point such that the default
  /// glyph may serve as the mirror-image of the default glyph of the
  /// specified code point.<br>
  /// This is useful for text conversion to and from codepages with visual
  /// order, and for displays without glyph selection capabilities.
  ///@param ch code point whose mirror is to be retrieved
  ///@return another code point that may serve as a mirror-image substitute,
  ///         or ch itself if there is no such mapping or ch does not have the
  ///         "mirrored" property
  static int getMirror(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_getMirror, jni.JniType.intType, [ch]).integer;

  static final _id_getBidiPairedBracket = jniAccessors.getStaticMethodIDOf(
      _classRef, "getBidiPairedBracket", "(I)I");

  /// from: static public int getBidiPairedBracket(int c)
  ///
  /// <strong>[icu]</strong> Maps the specified character to its paired bracket character.
  /// For Bidi_Paired_Bracket_Type!=None, this is the same as getMirror(int).
  /// Otherwise c itself is returned.
  /// See http://www.unicode.org/reports/tr9/
  ///@param c the code point to be mapped
  ///@return the paired bracket code point,
  ///         or c itself if there is no such mapping
  ///         (Bidi_Paired_Bracket_Type=None)
  ///@see UProperty\#BIDI_PAIRED_BRACKET
  ///@see UProperty\#BIDI_PAIRED_BRACKET_TYPE
  ///@see \#getMirror(int)
  static int getBidiPairedBracket(int c) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_getBidiPairedBracket,
          jni.JniType.intType, [c]).integer;

  static final _id_getCombiningClass =
      jniAccessors.getStaticMethodIDOf(_classRef, "getCombiningClass", "(I)I");

  /// from: static public int getCombiningClass(int ch)
  ///
  /// <strong>[icu]</strong> Returns the combining class of the argument codepoint
  ///@param ch code point whose combining is to be retrieved
  ///@return the combining class of the codepoint
  static int getCombiningClass(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_getCombiningClass, jni.JniType.intType, [ch]).integer;

  static final _id_isLegal =
      jniAccessors.getStaticMethodIDOf(_classRef, "isLegal", "(I)Z");

  /// from: static public boolean isLegal(int ch)
  ///
  /// <strong>[icu]</strong> A code point is illegal if and only if
  /// <ul>
  /// <li> Out of bounds, less than 0 or greater than UCharacter.MAX_VALUE
  /// <li> A surrogate value, 0xD800 to 0xDFFF
  /// <li> Not-a-character, having the form 0x xxFFFF or 0x xxFFFE
  /// </ul>
  /// Note: legal does not mean that it is assigned in this version of Unicode.
  ///@param ch code point to determine if it is a legal code point by itself
  ///@return true if and only if legal.
  static bool isLegal(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isLegal, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isLegal1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "isLegal", "(Ljava/lang/String;)Z");

  /// from: static public boolean isLegal(java.lang.String str)
  ///
  /// <strong>[icu]</strong> A string is legal iff all its code points are legal.
  /// A code point is illegal if and only if
  /// <ul>
  /// <li> Out of bounds, less than 0 or greater than UCharacter.MAX_VALUE
  /// <li> A surrogate value, 0xD800 to 0xDFFF
  /// <li> Not-a-character, having the form 0x xxFFFF or 0x xxFFFE
  /// </ul>
  /// Note: legal does not mean that it is assigned in this version of Unicode.
  ///@param str containing code points to examin
  ///@return true if and only if legal.
  static bool isLegal1(jni.JniString str) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_isLegal1,
          jni.JniType.booleanType, [str.reference]).boolean;

  static final _id_getUnicodeVersion = jniAccessors.getStaticMethodIDOf(
      _classRef, "getUnicodeVersion", "()Landroid/icu/util/VersionInfo;");

  /// from: static public android.icu.util.VersionInfo getUnicodeVersion()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// <strong>[icu]</strong> Returns the version of Unicode data used.
  ///@return the unicode version number used
  static versioninfo_.VersionInfo getUnicodeVersion() =>
      versioninfo_.VersionInfo.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_getUnicodeVersion, jni.JniType.objectType, []).object);

  static final _id_getName = jniAccessors.getStaticMethodIDOf(
      _classRef, "getName", "(I)Ljava/lang/String;");

  /// from: static public java.lang.String getName(int ch)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// <strong>[icu]</strong> Returns the most current Unicode name of the argument code point, or
  /// null if the character is unassigned or outside the range
  /// UCharacter.MIN_VALUE and UCharacter.MAX_VALUE or does not have a name.
  /// <br>
  /// Note calling any methods related to code point names, e.g. get*Name*()
  /// incurs a one-time initialisation cost to construct the name tables.
  ///@param ch the code point for which to get the name
  ///@return most current Unicode name
  static jni.JniString getName(int ch) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_getName, jni.JniType.objectType, [ch]).object);

  static final _id_getName1 = jniAccessors.getStaticMethodIDOf(_classRef,
      "getName", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;");

  /// from: static public java.lang.String getName(java.lang.String s, java.lang.String separator)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// <strong>[icu]</strong> Returns the names for each of the characters in a string
  ///@param s string to format
  ///@param separator string to go between names
  ///@return string of names
  static jni.JniString getName1(jni.JniString s, jni.JniString separator) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_getName1,
          jni.JniType.objectType,
          [s.reference, separator.reference]).object);

  static final _id_getExtendedName = jniAccessors.getStaticMethodIDOf(
      _classRef, "getExtendedName", "(I)Ljava/lang/String;");

  /// from: static public java.lang.String getExtendedName(int ch)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// <strong>[icu]</strong> Returns a name for a valid codepoint. Unlike, getName(int) and
  /// getName1_0(int), this method will return a name even for codepoints that
  /// are not assigned a name in UnicodeData.txt.
  ///
  /// The names are returned in the following order.
  /// <ul>
  /// <li> Most current Unicode name if there is any
  /// <li> Unicode 1.0 name if there is any
  /// <li> Extended name in the form of
  ///      "&lt;codepoint_type-codepoint_hex_digits&gt;". E.g., &lt;noncharacter-fffe&gt;
  /// </ul>
  /// Note calling any methods related to code point names, e.g. get*Name*()
  /// incurs a one-time initialisation cost to construct the name tables.
  ///@param ch the code point for which to get the name
  ///@return a name for the argument codepoint
  static jni.JniString getExtendedName(int ch) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_getExtendedName, jni.JniType.objectType, [ch]).object);

  static final _id_getNameAlias = jniAccessors.getStaticMethodIDOf(
      _classRef, "getNameAlias", "(I)Ljava/lang/String;");

  /// from: static public java.lang.String getNameAlias(int ch)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// <strong>[icu]</strong> Returns the corrected name from NameAliases.txt if there is one.
  /// Returns null if the character is unassigned or outside the range
  /// UCharacter.MIN_VALUE and UCharacter.MAX_VALUE or does not have a name.
  /// <br>
  /// Note calling any methods related to code point names, e.g. get*Name*()
  /// incurs a one-time initialisation cost to construct the name tables.
  ///@param ch the code point for which to get the name alias
  ///@return Unicode name alias, or null
  static jni.JniString getNameAlias(int ch) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_getNameAlias, jni.JniType.objectType, [ch]).object);

  static final _id_getCharFromName = jniAccessors.getStaticMethodIDOf(
      _classRef, "getCharFromName", "(Ljava/lang/String;)I");

  /// from: static public int getCharFromName(java.lang.String name)
  ///
  /// <strong>[icu]</strong> Finds a Unicode code point by its most current Unicode name and
  /// return its code point value. All Unicode names are in uppercase.
  /// Note calling any methods related to code point names, e.g. get*Name*()
  /// incurs a one-time initialisation cost to construct the name tables.
  ///@param name most current Unicode character name whose code point is to
  ///        be returned
  ///@return code point or -1 if name is not found
  static int getCharFromName(jni.JniString name) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_getCharFromName,
          jni.JniType.intType, [name.reference]).integer;

  static final _id_getCharFromExtendedName = jniAccessors.getStaticMethodIDOf(
      _classRef, "getCharFromExtendedName", "(Ljava/lang/String;)I");

  /// from: static public int getCharFromExtendedName(java.lang.String name)
  ///
  /// <strong>[icu]</strong> Find a Unicode character by either its name and return its code
  /// point value. All Unicode names are in uppercase.
  /// Extended names are all lowercase except for numbers and are contained
  /// within angle brackets.
  /// The names are searched in the following order
  /// <ul>
  /// <li> Most current Unicode name if there is any
  /// <li> Unicode 1.0 name if there is any
  /// <li> Extended name in the form of
  ///      "&lt;codepoint_type-codepoint_hex_digits&gt;". E.g. &lt;noncharacter-FFFE&gt;
  /// </ul>
  /// Note calling any methods related to code point names, e.g. get*Name*()
  /// incurs a one-time initialisation cost to construct the name tables.
  ///@param name codepoint name
  ///@return code point associated with the name or -1 if the name is not
  ///         found.
  static int getCharFromExtendedName(jni.JniString name) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_getCharFromExtendedName,
          jni.JniType.intType,
          [name.reference]).integer;

  static final _id_getCharFromNameAlias = jniAccessors.getStaticMethodIDOf(
      _classRef, "getCharFromNameAlias", "(Ljava/lang/String;)I");

  /// from: static public int getCharFromNameAlias(java.lang.String name)
  ///
  /// <strong>[icu]</strong> Find a Unicode character by its corrected name alias and return
  /// its code point value. All Unicode names are in uppercase.
  /// Note calling any methods related to code point names, e.g. get*Name*()
  /// incurs a one-time initialisation cost to construct the name tables.
  ///@param name Unicode name alias whose code point is to be returned
  ///@return code point or -1 if name is not found
  static int getCharFromNameAlias(jni.JniString name) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_getCharFromNameAlias,
          jni.JniType.intType, [name.reference]).integer;

  static final _id_getPropertyName = jniAccessors.getStaticMethodIDOf(
      _classRef, "getPropertyName", "(II)Ljava/lang/String;");

  /// from: static public java.lang.String getPropertyName(int property, int nameChoice)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// <strong>[icu]</strong> Return the Unicode name for a given property, as given in the
  /// Unicode database file PropertyAliases.txt.  Most properties
  /// have more than one name.  The nameChoice determines which one
  /// is returned.
  ///
  /// In addition, this function maps the property
  /// UProperty.GENERAL_CATEGORY_MASK to the synthetic names "gcm" /
  /// "General_Category_Mask".  These names are not in
  /// PropertyAliases.txt.
  ///@param property UProperty selector.
  ///@param nameChoice UProperty.NameChoice selector for which name
  /// to get.  All properties have a long name.  Most have a short
  /// name, but some do not.  Unicode allows for additional names; if
  /// present these will be returned by UProperty.NameChoice.LONG + i,
  /// where i=1, 2,...
  ///@return a name, or null if Unicode explicitly defines no name
  /// ("n/a") for a given property/nameChoice.  If a given nameChoice
  /// throws an exception, then all larger values of nameChoice will
  /// throw an exception.  If null is returned for a given
  /// nameChoice, then other nameChoice values may return non-null
  /// results.
  ///@exception IllegalArgumentException thrown if property or
  /// nameChoice are invalid.
  ///@see UProperty
  ///@see UProperty.NameChoice
  static jni.JniString getPropertyName(int property, int nameChoice) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_getPropertyName,
          jni.JniType.objectType,
          [property, nameChoice]).object);

  static final _id_getPropertyEnum = jniAccessors.getStaticMethodIDOf(
      _classRef, "getPropertyEnum", "(Ljava/lang/CharSequence;)I");

  /// from: static public int getPropertyEnum(java.lang.CharSequence propertyAlias)
  ///
  /// <strong>[icu]</strong> Return the UProperty selector for a given property name, as
  /// specified in the Unicode database file PropertyAliases.txt.
  /// Short, long, and any other variants are recognized.
  ///
  /// In addition, this function maps the synthetic names "gcm" /
  /// "General_Category_Mask" to the property
  /// UProperty.GENERAL_CATEGORY_MASK.  These names are not in
  /// PropertyAliases.txt.
  ///@param propertyAlias the property name to be matched.  The name
  /// is compared using "loose matching" as described in
  /// PropertyAliases.txt.
  ///@return a UProperty enum.
  ///@exception IllegalArgumentException thrown if propertyAlias
  /// is not recognized.
  ///@see UProperty
  static int getPropertyEnum(jni.JniObject propertyAlias) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_getPropertyEnum,
          jni.JniType.intType, [propertyAlias.reference]).integer;

  static final _id_getPropertyValueName = jniAccessors.getStaticMethodIDOf(
      _classRef, "getPropertyValueName", "(III)Ljava/lang/String;");

  /// from: static public java.lang.String getPropertyValueName(int property, int value, int nameChoice)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// <strong>[icu]</strong> Return the Unicode name for a given property value, as given in
  /// the Unicode database file PropertyValueAliases.txt.  Most
  /// values have more than one name.  The nameChoice determines
  /// which one is returned.
  ///
  /// Note: Some of the names in PropertyValueAliases.txt can only be
  /// retrieved using UProperty.GENERAL_CATEGORY_MASK, not
  /// UProperty.GENERAL_CATEGORY.  These include: "C" / "Other", "L" /
  /// "Letter", "LC" / "Cased_Letter", "M" / "Mark", "N" / "Number", "P"
  /// / "Punctuation", "S" / "Symbol", and "Z" / "Separator".
  ///@param property UProperty selector constant.
  /// UProperty.INT_START &lt;= property &lt; UProperty.INT_LIMIT or
  /// UProperty.BINARY_START &lt;= property &lt; UProperty.BINARY_LIMIT or
  /// UProperty.MASK_START &lt; = property &lt; UProperty.MASK_LIMIT.
  /// If out of range, null is returned.
  ///@param value selector for a value for the given property.  In
  /// general, valid values range from 0 up to some maximum.  There
  /// are a few exceptions: (1.) UProperty.BLOCK values begin at the
  /// non-zero value BASIC_LATIN.getID().  (2.)
  /// UProperty.CANONICAL_COMBINING_CLASS values are not contiguous
  /// and range from 0..240.  (3.)  UProperty.GENERAL_CATEGORY_MASK values
  /// are mask values produced by left-shifting 1 by
  /// UCharacter.getType().  This allows grouped categories such as
  /// [:L:] to be represented.  Mask values are non-contiguous.
  ///@param nameChoice UProperty.NameChoice selector for which name
  /// to get.  All values have a long name.  Most have a short name,
  /// but some do not.  Unicode allows for additional names; if
  /// present these will be returned by UProperty.NameChoice.LONG + i,
  /// where i=1, 2,...
  ///@return a name, or null if Unicode explicitly defines no name
  /// ("n/a") for a given property/value/nameChoice.  If a given
  /// nameChoice throws an exception, then all larger values of
  /// nameChoice will throw an exception.  If null is returned for a
  /// given nameChoice, then other nameChoice values may return
  /// non-null results.
  ///@exception IllegalArgumentException thrown if property, value,
  /// or nameChoice are invalid.
  ///@see UProperty
  ///@see UProperty.NameChoice
  static jni.JniString getPropertyValueName(
          int property, int value, int nameChoice) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_getPropertyValueName,
          jni.JniType.objectType,
          [property, value, nameChoice]).object);

  static final _id_getPropertyValueEnum = jniAccessors.getStaticMethodIDOf(
      _classRef, "getPropertyValueEnum", "(ILjava/lang/CharSequence;)I");

  /// from: static public int getPropertyValueEnum(int property, java.lang.CharSequence valueAlias)
  ///
  /// <strong>[icu]</strong> Return the property value integer for a given value name, as
  /// specified in the Unicode database file PropertyValueAliases.txt.
  /// Short, long, and any other variants are recognized.
  ///
  /// Note: Some of the names in PropertyValueAliases.txt will only be
  /// recognized with UProperty.GENERAL_CATEGORY_MASK, not
  /// UProperty.GENERAL_CATEGORY.  These include: "C" / "Other", "L" /
  /// "Letter", "LC" / "Cased_Letter", "M" / "Mark", "N" / "Number", "P"
  /// / "Punctuation", "S" / "Symbol", and "Z" / "Separator".
  ///@param property UProperty selector constant.
  /// UProperty.INT_START &lt;= property &lt; UProperty.INT_LIMIT or
  /// UProperty.BINARY_START &lt;= property &lt; UProperty.BINARY_LIMIT or
  /// UProperty.MASK_START &lt; = property &lt; UProperty.MASK_LIMIT.
  /// Only these properties can be enumerated.
  ///@param valueAlias the value name to be matched.  The name is
  /// compared using "loose matching" as described in
  /// PropertyValueAliases.txt.
  ///@return a value integer.  Note: UProperty.GENERAL_CATEGORY
  /// values are mask values produced by left-shifting 1 by
  /// UCharacter.getType().  This allows grouped categories such as
  /// [:L:] to be represented.
  ///@see UProperty
  ///@throws IllegalArgumentException if property is not a valid UProperty
  ///         selector or valueAlias is not a value of this property
  static int getPropertyValueEnum(int property, jni.JniObject valueAlias) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_getPropertyValueEnum,
          jni.JniType.intType, [property, valueAlias.reference]).integer;

  static final _id_getCodePoint =
      jniAccessors.getStaticMethodIDOf(_classRef, "getCodePoint", "(CC)I");

  /// from: static public int getCodePoint(char lead, char trail)
  ///
  /// <strong>[icu]</strong> Returns a code point corresponding to the two surrogate code units.
  ///@param lead the lead char
  ///@param trail the trail char
  ///@return code point if surrogate characters are valid.
  ///@exception IllegalArgumentException thrown when the code units do
  ///            not form a valid code point
  static int getCodePoint(int lead, int trail) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_getCodePoint,
          jni.JniType.intType, [lead, trail]).integer;

  static final _id_getCodePoint1 =
      jniAccessors.getStaticMethodIDOf(_classRef, "getCodePoint", "(C)I");

  /// from: static public int getCodePoint(char char16)
  ///
  /// <strong>[icu]</strong> Returns the code point corresponding to the BMP code point.
  ///@param char16 the BMP code point
  ///@return code point if argument is a valid character.
  ///@exception IllegalArgumentException thrown when char16 is not a valid
  ///            code point
  static int getCodePoint1(int char16) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_getCodePoint1, jni.JniType.intType, [char16]).integer;

  static final _id_toUpperCase1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "toUpperCase", "(Ljava/lang/String;)Ljava/lang/String;");

  /// from: static public java.lang.String toUpperCase(java.lang.String str)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the uppercase version of the argument string.
  /// Casing is dependent on the default locale and context-sensitive.
  ///@param str source string to be performed on
  ///@return uppercase version of the argument string
  static jni.JniString toUpperCase1(jni.JniString str) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(_classRef,
          _id_toUpperCase1, jni.JniType.objectType, [str.reference]).object);

  static final _id_toLowerCase1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "toLowerCase", "(Ljava/lang/String;)Ljava/lang/String;");

  /// from: static public java.lang.String toLowerCase(java.lang.String str)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the lowercase version of the argument string.
  /// Casing is dependent on the default locale and context-sensitive
  ///@param str source string to be performed on
  ///@return lowercase version of the argument string
  static jni.JniString toLowerCase1(jni.JniString str) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(_classRef,
          _id_toLowerCase1, jni.JniType.objectType, [str.reference]).object);

  static final _id_toTitleCase1 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "toTitleCase",
      "(Ljava/lang/String;Landroid/icu/text/BreakIterator;)Ljava/lang/String;");

  /// from: static public java.lang.String toTitleCase(java.lang.String str, android.icu.text.BreakIterator breakiter)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the titlecase version of the argument string.
  /// Position for titlecasing is determined by the argument break
  /// iterator, hence the user can customize his break iterator for
  /// a specialized titlecasing. In this case only the forward iteration
  /// needs to be implemented.
  /// If the break iterator passed in is null, the default Unicode algorithm
  /// will be used to determine the titlecase positions.
  ///
  /// Only positions returned by the break iterator will be title cased,
  /// character in between the positions will all be in lower case.
  /// Casing is dependent on the default locale and context-sensitive
  ///@param str source string to be performed on
  ///@param breakiter break iterator to determine the positions in which
  ///        the character should be title cased.
  ///@return titlecase version of the argument string
  static jni.JniString toTitleCase1(
          jni.JniString str, breakiterator_.BreakIterator breakiter) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_toTitleCase1,
          jni.JniType.objectType,
          [str.reference, breakiter.reference]).object);

  static final _id_toUpperCase2 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "toUpperCase",
      "(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;");

  /// from: static public java.lang.String toUpperCase(java.util.Locale locale, java.lang.String str)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the uppercase version of the argument string.
  /// Casing is dependent on the argument locale and context-sensitive.
  ///@param locale which string is to be converted in
  ///@param str source string to be performed on
  ///@return uppercase version of the argument string
  static jni.JniString toUpperCase2(jni.JniObject locale, jni.JniString str) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_toUpperCase2,
          jni.JniType.objectType,
          [locale.reference, str.reference]).object);

  static final _id_toUpperCase3 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "toUpperCase",
      "(Landroid/icu/util/ULocale;Ljava/lang/String;)Ljava/lang/String;");

  /// from: static public java.lang.String toUpperCase(android.icu.util.ULocale locale, java.lang.String str)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the uppercase version of the argument string.
  /// Casing is dependent on the argument locale and context-sensitive.
  ///@param locale which string is to be converted in
  ///@param str source string to be performed on
  ///@return uppercase version of the argument string
  static jni.JniString toUpperCase3(
          ulocale_.ULocale locale, jni.JniString str) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_toUpperCase3,
          jni.JniType.objectType,
          [locale.reference, str.reference]).object);

  static final _id_toLowerCase2 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "toLowerCase",
      "(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;");

  /// from: static public java.lang.String toLowerCase(java.util.Locale locale, java.lang.String str)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the lowercase version of the argument string.
  /// Casing is dependent on the argument locale and context-sensitive
  ///@param locale which string is to be converted in
  ///@param str source string to be performed on
  ///@return lowercase version of the argument string
  static jni.JniString toLowerCase2(jni.JniObject locale, jni.JniString str) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_toLowerCase2,
          jni.JniType.objectType,
          [locale.reference, str.reference]).object);

  static final _id_toLowerCase3 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "toLowerCase",
      "(Landroid/icu/util/ULocale;Ljava/lang/String;)Ljava/lang/String;");

  /// from: static public java.lang.String toLowerCase(android.icu.util.ULocale locale, java.lang.String str)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the lowercase version of the argument string.
  /// Casing is dependent on the argument locale and context-sensitive
  ///@param locale which string is to be converted in
  ///@param str source string to be performed on
  ///@return lowercase version of the argument string
  static jni.JniString toLowerCase3(
          ulocale_.ULocale locale, jni.JniString str) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_toLowerCase3,
          jni.JniType.objectType,
          [locale.reference, str.reference]).object);

  static final _id_toTitleCase2 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "toTitleCase",
      "(Ljava/util/Locale;Ljava/lang/String;Landroid/icu/text/BreakIterator;)Ljava/lang/String;");

  /// from: static public java.lang.String toTitleCase(java.util.Locale locale, java.lang.String str, android.icu.text.BreakIterator breakiter)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the titlecase version of the argument string.
  /// Position for titlecasing is determined by the argument break
  /// iterator, hence the user can customize his break iterator for
  /// a specialized titlecasing. In this case only the forward iteration
  /// needs to be implemented.
  /// If the break iterator passed in is null, the default Unicode algorithm
  /// will be used to determine the titlecase positions.
  ///
  /// Only positions returned by the break iterator will be title cased,
  /// character in between the positions will all be in lower case.
  /// Casing is dependent on the argument locale and context-sensitive
  ///@param locale which string is to be converted in
  ///@param str source string to be performed on
  ///@param breakiter break iterator to determine the positions in which
  ///        the character should be title cased.
  ///@return titlecase version of the argument string
  static jni.JniString toTitleCase2(jni.JniObject locale, jni.JniString str,
          breakiterator_.BreakIterator breakiter) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_toTitleCase2,
          jni.JniType.objectType,
          [locale.reference, str.reference, breakiter.reference]).object);

  static final _id_toTitleCase3 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "toTitleCase",
      "(Landroid/icu/util/ULocale;Ljava/lang/String;Landroid/icu/text/BreakIterator;)Ljava/lang/String;");

  /// from: static public java.lang.String toTitleCase(android.icu.util.ULocale locale, java.lang.String str, android.icu.text.BreakIterator titleIter)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the titlecase version of the argument string.
  /// Position for titlecasing is determined by the argument break
  /// iterator, hence the user can customize his break iterator for
  /// a specialized titlecasing. In this case only the forward iteration
  /// needs to be implemented.
  /// If the break iterator passed in is null, the default Unicode algorithm
  /// will be used to determine the titlecase positions.
  ///
  /// Only positions returned by the break iterator will be title cased,
  /// character in between the positions will all be in lower case.
  /// Casing is dependent on the argument locale and context-sensitive
  ///@param locale which string is to be converted in
  ///@param str source string to be performed on
  ///@param titleIter break iterator to determine the positions in which
  ///        the character should be title cased.
  ///@return titlecase version of the argument string
  static jni.JniString toTitleCase3(ulocale_.ULocale locale, jni.JniString str,
          breakiterator_.BreakIterator titleIter) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_toTitleCase3,
          jni.JniType.objectType,
          [locale.reference, str.reference, titleIter.reference]).object);

  static final _id_toTitleCase4 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "toTitleCase",
      "(Landroid/icu/util/ULocale;Ljava/lang/String;Landroid/icu/text/BreakIterator;I)Ljava/lang/String;");

  /// from: static public java.lang.String toTitleCase(android.icu.util.ULocale locale, java.lang.String str, android.icu.text.BreakIterator titleIter, int options)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the titlecase version of the argument string.
  /// Position for titlecasing is determined by the argument break
  /// iterator, hence the user can customize his break iterator for
  /// a specialized titlecasing. In this case only the forward iteration
  /// needs to be implemented.
  /// If the break iterator passed in is null, the default Unicode algorithm
  /// will be used to determine the titlecase positions.
  ///
  /// Only positions returned by the break iterator will be title cased,
  /// character in between the positions will all be in lower case.
  /// Casing is dependent on the argument locale and context-sensitive
  ///@param locale which string is to be converted in
  ///@param str source string to be performed on
  ///@param titleIter break iterator to determine the positions in which
  ///        the character should be title cased.
  ///@param options bit set to modify the titlecasing operation
  ///@return titlecase version of the argument string
  ///@see \#TITLECASE_NO_LOWERCASE
  ///@see \#TITLECASE_NO_BREAK_ADJUSTMENT
  static jni.JniString toTitleCase4(ulocale_.ULocale locale, jni.JniString str,
          breakiterator_.BreakIterator titleIter, int options) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_toTitleCase4, jni.JniType.objectType, [
        locale.reference,
        str.reference,
        titleIter.reference,
        options
      ]).object);

  static final _id_toTitleCase5 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "toTitleCase",
      "(Ljava/util/Locale;Ljava/lang/String;Landroid/icu/text/BreakIterator;I)Ljava/lang/String;");

  /// from: static public java.lang.String toTitleCase(java.util.Locale locale, java.lang.String str, android.icu.text.BreakIterator titleIter, int options)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// <strong>[icu]</strong> Returns the titlecase version of the argument string.
  /// Position for titlecasing is determined by the argument break
  /// iterator, hence the user can customize his break iterator for
  /// a specialized titlecasing. In this case only the forward iteration
  /// needs to be implemented.
  /// If the break iterator passed in is null, the default Unicode algorithm
  /// will be used to determine the titlecase positions.
  ///
  /// Only positions returned by the break iterator will be title cased,
  /// character in between the positions will all be in lower case.
  /// Casing is dependent on the argument locale and context-sensitive
  ///@param locale which string is to be converted in
  ///@param str source string to be performed on
  ///@param titleIter break iterator to determine the positions in which
  ///        the character should be title cased.
  ///@param options bit set to modify the titlecasing operation
  ///@return titlecase version of the argument string
  ///@see \#TITLECASE_NO_LOWERCASE
  ///@see \#TITLECASE_NO_BREAK_ADJUSTMENT
  static jni.JniString toTitleCase5(jni.JniObject locale, jni.JniString str,
          breakiterator_.BreakIterator titleIter, int options) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_toTitleCase5, jni.JniType.objectType, [
        locale.reference,
        str.reference,
        titleIter.reference,
        options
      ]).object);

  static final _id_foldCase =
      jniAccessors.getStaticMethodIDOf(_classRef, "foldCase", "(IZ)I");

  /// from: static public int foldCase(int ch, boolean defaultmapping)
  ///
  /// <strong>[icu]</strong> The given character is mapped to its case folding equivalent according
  /// to UnicodeData.txt and CaseFolding.txt; if the character has no case
  /// folding equivalent, the character itself is returned.
  ///
  /// This function only returns the simple, single-code point case mapping.
  /// Full case mappings should be used whenever possible because they produce
  /// better results by working on whole strings.
  /// They can map to a result string with a different length as appropriate.
  /// Full case mappings are applied by the case mapping functions
  /// that take String parameters rather than code points (int).
  /// See also the User Guide chapter on C/POSIX migration:
  /// http://www.icu-project.org/userguide/posix.html\#case_mappings
  ///@param ch the character to be converted
  ///@param defaultmapping Indicates whether the default mappings defined in
  ///                       CaseFolding.txt are to be used, otherwise the
  ///                       mappings for dotted I and dotless i marked with
  ///                       'T' in CaseFolding.txt are included.
  ///@return the case folding equivalent of the character, if
  ///                       any; otherwise the character itself.
  ///@see \#foldCase(String, boolean)
  static int foldCase(int ch, bool defaultmapping) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_foldCase,
          jni.JniType.intType, [ch, defaultmapping]).integer;

  static final _id_foldCase1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "foldCase", "(Ljava/lang/String;Z)Ljava/lang/String;");

  /// from: static public java.lang.String foldCase(java.lang.String str, boolean defaultmapping)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// <strong>[icu]</strong> The given string is mapped to its case folding equivalent according to
  /// UnicodeData.txt and CaseFolding.txt; if any character has no case
  /// folding equivalent, the character itself is returned.
  /// "Full", multiple-code point case folding mappings are returned here.
  /// For "simple" single-code point mappings use the API
  /// foldCase(int ch, boolean defaultmapping).
  ///@param str the String to be converted
  ///@param defaultmapping Indicates whether the default mappings defined in
  ///                       CaseFolding.txt are to be used, otherwise the
  ///                       mappings for dotted I and dotless i marked with
  ///                       'T' in CaseFolding.txt are included.
  ///@return the case folding equivalent of the character, if
  ///                       any; otherwise the character itself.
  ///@see \#foldCase(int, boolean)
  static jni.JniString foldCase1(jni.JniString str, bool defaultmapping) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_foldCase1,
          jni.JniType.objectType,
          [str.reference, defaultmapping]).object);

  static final _id_foldCase2 =
      jniAccessors.getStaticMethodIDOf(_classRef, "foldCase", "(II)I");

  /// from: static public int foldCase(int ch, int options)
  ///
  /// <strong>[icu]</strong> The given character is mapped to its case folding equivalent according
  /// to UnicodeData.txt and CaseFolding.txt; if the character has no case
  /// folding equivalent, the character itself is returned.
  ///
  /// This function only returns the simple, single-code point case mapping.
  /// Full case mappings should be used whenever possible because they produce
  /// better results by working on whole strings.
  /// They can map to a result string with a different length as appropriate.
  /// Full case mappings are applied by the case mapping functions
  /// that take String parameters rather than code points (int).
  /// See also the User Guide chapter on C/POSIX migration:
  /// http://www.icu-project.org/userguide/posix.html\#case_mappings
  ///@param ch the character to be converted
  ///@param options A bit set for special processing. Currently the recognised options
  /// are FOLD_CASE_EXCLUDE_SPECIAL_I and FOLD_CASE_DEFAULT
  ///@return the case folding equivalent of the character, if any; otherwise the
  /// character itself.
  ///@see \#foldCase(String, boolean)
  static int foldCase2(int ch, int options) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_foldCase2, jni.JniType.intType, [ch, options]).integer;

  static final _id_foldCase3 = jniAccessors.getStaticMethodIDOf(
      _classRef, "foldCase", "(Ljava/lang/String;I)Ljava/lang/String;");

  /// from: static public java.lang.String foldCase(java.lang.String str, int options)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// <strong>[icu]</strong> The given string is mapped to its case folding equivalent according to
  /// UnicodeData.txt and CaseFolding.txt; if any character has no case
  /// folding equivalent, the character itself is returned.
  /// "Full", multiple-code point case folding mappings are returned here.
  /// For "simple" single-code point mappings use the API
  /// foldCase(int ch, boolean defaultmapping).
  ///@param str the String to be converted
  ///@param options A bit set for special processing. Currently the recognised options
  ///                are FOLD_CASE_EXCLUDE_SPECIAL_I and FOLD_CASE_DEFAULT
  ///@return the case folding equivalent of the character, if any; otherwise the
  ///         character itself.
  ///@see \#foldCase(int, boolean)
  static jni.JniString foldCase3(jni.JniString str, int options) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_foldCase3,
          jni.JniType.objectType,
          [str.reference, options]).object);

  static final _id_getHanNumericValue =
      jniAccessors.getStaticMethodIDOf(_classRef, "getHanNumericValue", "(I)I");

  /// from: static public int getHanNumericValue(int ch)
  ///
  /// <strong>[icu]</strong> Returns the numeric value of a Han character.
  ///
  /// This returns the value of Han 'numeric' code points,
  /// including those for zero, ten, hundred, thousand, ten thousand,
  /// and hundred million.
  /// This includes both the standard and 'checkwriting'
  /// characters, the 'big circle' zero character, and the standard
  /// zero character.
  ///
  /// Note: The Unicode Standard has numeric values for more
  /// Han characters recognized by this method
  /// (see \#getNumericValue(int) and the UCD file DerivedNumericValues.txt),
  /// and a android.icu.text.NumberFormat can be used with
  /// a Chinese android.icu.text.NumberingSystem.
  ///@param ch code point to query
  ///@return value if it is a Han 'numeric character,' otherwise return -1.
  static int getHanNumericValue(int ch) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_getHanNumericValue, jni.JniType.intType, [ch]).integer;

  static final _id_getTypeIterator = jniAccessors.getStaticMethodIDOf(
      _classRef, "getTypeIterator", "()Landroid/icu/util/RangeValueIterator;");

  /// from: static public android.icu.util.RangeValueIterator getTypeIterator()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// <strong>[icu]</strong> Returns an iterator for character types, iterating over codepoints.
  /// Example of use:<br>
  /// <pre>
  /// RangeValueIterator iterator = UCharacter.getTypeIterator();
  /// RangeValueIterator.Element element = new RangeValueIterator.Element();
  /// while (iterator.next(element)) {
  ///     System.out.println("Codepoint \\u" +
  ///                        Integer.toHexString(element.start) +
  ///                        " to codepoint \\u" +
  ///                        Integer.toHexString(element.limit - 1) +
  ///                        " has the character type " +
  ///                        element.value);
  /// }
  /// </pre>
  ///@return an iterator
  static rangevalueiterator_.RangeValueIterator getTypeIterator() =>
      rangevalueiterator_.RangeValueIterator.fromRef(jniAccessors
          .callStaticMethodWithArgs(_classRef, _id_getTypeIterator,
              jni.JniType.objectType, []).object);

  static final _id_getNameIterator = jniAccessors.getStaticMethodIDOf(
      _classRef, "getNameIterator", "()Landroid/icu/util/ValueIterator;");

  /// from: static public android.icu.util.ValueIterator getNameIterator()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// <strong>[icu]</strong> Returns an iterator for character names, iterating over codepoints.
  /// This API only gets the iterator for the modern, most up-to-date
  /// Unicode names. For older 1.0 Unicode names use get1_0NameIterator() or
  /// for extended names use getExtendedNameIterator().
  /// Example of use:<br>
  /// <pre>
  /// ValueIterator iterator = UCharacter.getNameIterator();
  /// ValueIterator.Element element = new ValueIterator.Element();
  /// while (iterator.next(element)) {
  ///     System.out.println("Codepoint \\u" +
  ///                        Integer.toHexString(element.codepoint) +
  ///                        " has the name " + (String)element.value);
  /// }
  /// </pre>
  /// The maximal range which the name iterator iterates is from
  /// UCharacter.MIN_VALUE to UCharacter.MAX_VALUE.
  ///@return an iterator
  static valueiterator_.ValueIterator getNameIterator() =>
      valueiterator_.ValueIterator.fromRef(jniAccessors
          .callStaticMethodWithArgs(_classRef, _id_getNameIterator,
              jni.JniType.objectType, []).object);

  static final _id_getExtendedNameIterator = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "getExtendedNameIterator",
      "()Landroid/icu/util/ValueIterator;");

  /// from: static public android.icu.util.ValueIterator getExtendedNameIterator()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// <strong>[icu]</strong> Returns an iterator for character names, iterating over codepoints.
  /// This API only gets the iterator for the extended names.
  /// For modern, most up-to-date Unicode names use getNameIterator() or
  /// for older 1.0 Unicode names use get1_0NameIterator().
  /// Example of use:<br>
  /// <pre>
  /// ValueIterator iterator = UCharacter.getExtendedNameIterator();
  /// ValueIterator.Element element = new ValueIterator.Element();
  /// while (iterator.next(element)) {
  ///     System.out.println("Codepoint \\u" +
  ///                        Integer.toHexString(element.codepoint) +
  ///                        " has the name " + (String)element.value);
  /// }
  /// </pre>
  /// The maximal range which the name iterator iterates is from
  ///@return an iterator
  static valueiterator_.ValueIterator getExtendedNameIterator() =>
      valueiterator_.ValueIterator.fromRef(jniAccessors
          .callStaticMethodWithArgs(_classRef, _id_getExtendedNameIterator,
              jni.JniType.objectType, []).object);

  static final _id_getAge = jniAccessors.getStaticMethodIDOf(
      _classRef, "getAge", "(I)Landroid/icu/util/VersionInfo;");

  /// from: static public android.icu.util.VersionInfo getAge(int ch)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// <strong>[icu]</strong> Returns the "age" of the code point.
  /// The "age" is the Unicode version when the code point was first
  /// designated (as a non-character or for Private Use) or assigned a
  /// character.
  /// This can be useful to avoid emitting code points to receiving
  /// processes that do not accept newer characters.
  /// The data is from the UCD file DerivedAge.txt.
  ///@param ch The code point.
  ///@return the Unicode version number
  static versioninfo_.VersionInfo getAge(int ch) =>
      versioninfo_.VersionInfo.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_getAge, jni.JniType.objectType, [ch]).object);

  static final _id_hasBinaryProperty =
      jniAccessors.getStaticMethodIDOf(_classRef, "hasBinaryProperty", "(II)Z");

  /// from: static public boolean hasBinaryProperty(int ch, int property)
  ///
  /// <strong>[icu]</strong> Check a binary Unicode property for a code point.
  /// Unicode, especially in version 3.2, defines many more properties
  /// than the original set in UnicodeData.txt.
  /// This API is intended to reflect Unicode properties as defined in
  /// the Unicode Character Database (UCD) and Unicode Technical Reports
  /// (UTR).
  /// For details about the properties see
  /// <a href=http://www.unicode.org/>http://www.unicode.org/</a>.
  /// For names of Unicode properties see the UCD file
  /// PropertyAliases.txt.
  /// This API does not check the validity of the codepoint.
  /// Important: If ICU is built with UCD files from Unicode versions
  /// below 3.2, then properties marked with "new" are not or
  /// not fully available.
  ///@param ch code point to test.
  ///@param property selector constant from android.icu.lang.UProperty,
  ///        identifies which binary property to check.
  ///@return true or false according to the binary Unicode property value
  ///         for ch. Also false if property is out of bounds or if the
  ///         Unicode version does not have data for the property at all, or
  ///         not for this code point.
  ///@see android.icu.lang.UProperty
  static bool hasBinaryProperty(int ch, int property) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_hasBinaryProperty,
          jni.JniType.booleanType, [ch, property]).boolean;

  static final _id_isUAlphabetic =
      jniAccessors.getStaticMethodIDOf(_classRef, "isUAlphabetic", "(I)Z");

  /// from: static public boolean isUAlphabetic(int ch)
  ///
  /// <strong>[icu]</strong> Check if a code point has the Alphabetic Unicode property.
  /// Same as UCharacter.hasBinaryProperty(ch, UProperty.ALPHABETIC).
  /// Different from UCharacter.isLetter(ch)!
  ///@param ch codepoint to be tested
  static bool isUAlphabetic(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isUAlphabetic, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isULowercase =
      jniAccessors.getStaticMethodIDOf(_classRef, "isULowercase", "(I)Z");

  /// from: static public boolean isULowercase(int ch)
  ///
  /// <strong>[icu]</strong> Check if a code point has the Lowercase Unicode property.
  /// Same as UCharacter.hasBinaryProperty(ch, UProperty.LOWERCASE).
  /// This is different from UCharacter.isLowerCase(ch)!
  ///@param ch codepoint to be tested
  static bool isULowercase(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isULowercase, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isUUppercase =
      jniAccessors.getStaticMethodIDOf(_classRef, "isUUppercase", "(I)Z");

  /// from: static public boolean isUUppercase(int ch)
  ///
  /// <strong>[icu]</strong> Check if a code point has the Uppercase Unicode property.
  /// Same as UCharacter.hasBinaryProperty(ch, UProperty.UPPERCASE).
  /// This is different from UCharacter.isUpperCase(ch)!
  ///@param ch codepoint to be tested
  static bool isUUppercase(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isUUppercase, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isUWhiteSpace =
      jniAccessors.getStaticMethodIDOf(_classRef, "isUWhiteSpace", "(I)Z");

  /// from: static public boolean isUWhiteSpace(int ch)
  ///
  /// <strong>[icu]</strong> Check if a code point has the White_Space Unicode property.
  /// Same as UCharacter.hasBinaryProperty(ch, UProperty.WHITE_SPACE).
  /// This is different from both UCharacter.isSpace(ch) and
  /// UCharacter.isWhitespace(ch)!
  ///@param ch codepoint to be tested
  static bool isUWhiteSpace(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isUWhiteSpace, jni.JniType.booleanType, [ch]).boolean;

  static final _id_getIntPropertyValue = jniAccessors.getStaticMethodIDOf(
      _classRef, "getIntPropertyValue", "(II)I");

  /// from: static public int getIntPropertyValue(int ch, int type)
  ///
  /// <strong>[icu]</strong> Returns the property value for an Unicode property type of a code point.
  /// Also returns binary and mask property values.
  /// Unicode, especially in version 3.2, defines many more properties than
  /// the original set in UnicodeData.txt.
  /// The properties APIs are intended to reflect Unicode properties as
  /// defined in the Unicode Character Database (UCD) and Unicode Technical
  /// Reports (UTR). For details about the properties see
  /// http://www.unicode.org/.
  /// For names of Unicode properties see the UCD file PropertyAliases.txt.
  ///
  /// <pre>
  /// Sample usage:
  /// int ea = UCharacter.getIntPropertyValue(c, UProperty.EAST_ASIAN_WIDTH);
  /// int ideo = UCharacter.getIntPropertyValue(c, UProperty.IDEOGRAPHIC);
  /// boolean b = (ideo == 1) ? true : false;
  /// </pre>
  ///@param ch code point to test.
  ///@param type UProperty selector constant, identifies which binary
  ///        property to check. Must be
  ///        UProperty.BINARY_START &lt;= type &lt; UProperty.BINARY_LIMIT or
  ///        UProperty.INT_START &lt;= type &lt; UProperty.INT_LIMIT or
  ///        UProperty.MASK_START &lt;= type &lt; UProperty.MASK_LIMIT.
  ///@return numeric value that is directly the property value or,
  ///         for enumerated properties, corresponds to the numeric value of
  ///         the enumerated constant of the respective property value
  ///         enumeration type (cast to enum type if necessary).
  ///         Returns 0 or 1 (for false / true) for binary Unicode properties.
  ///         Returns a bit-mask for mask properties.
  ///         Returns 0 if 'type' is out of bounds or if the Unicode version
  ///         does not have data for the property at all, or not for this code
  ///         point.
  ///@see UProperty
  ///@see \#hasBinaryProperty
  ///@see \#getIntPropertyMinValue
  ///@see \#getIntPropertyMaxValue
  ///@see \#getUnicodeVersion
  static int getIntPropertyValue(int ch, int type) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_getIntPropertyValue,
          jni.JniType.intType, [ch, type]).integer;

  static final _id_getIntPropertyMinValue = jniAccessors.getStaticMethodIDOf(
      _classRef, "getIntPropertyMinValue", "(I)I");

  /// from: static public int getIntPropertyMinValue(int type)
  ///
  /// <strong>[icu]</strong> Returns the minimum value for an integer/binary Unicode property type.
  /// Can be used together with UCharacter.getIntPropertyMaxValue(int)
  /// to allocate arrays of android.icu.text.UnicodeSet or similar.
  ///@param type UProperty selector constant, identifies which binary
  ///        property to check. Must be
  ///        UProperty.BINARY_START &lt;= type &lt; UProperty.BINARY_LIMIT or
  ///        UProperty.INT_START &lt;= type &lt; UProperty.INT_LIMIT.
  ///@return Minimum value returned by UCharacter.getIntPropertyValue(int)
  ///         for a Unicode property. 0 if the property
  ///         selector 'type' is out of range.
  ///@see UProperty
  ///@see \#hasBinaryProperty
  ///@see \#getUnicodeVersion
  ///@see \#getIntPropertyMaxValue
  ///@see \#getIntPropertyValue
  static int getIntPropertyMinValue(int type) =>
      jniAccessors.callStaticMethodWithArgs(_classRef,
          _id_getIntPropertyMinValue, jni.JniType.intType, [type]).integer;

  static final _id_getIntPropertyMaxValue = jniAccessors.getStaticMethodIDOf(
      _classRef, "getIntPropertyMaxValue", "(I)I");

  /// from: static public int getIntPropertyMaxValue(int type)
  ///
  /// <strong>[icu]</strong> Returns the maximum value for an integer/binary Unicode property.
  /// Can be used together with UCharacter.getIntPropertyMinValue(int)
  /// to allocate arrays of android.icu.text.UnicodeSet or similar.
  /// Examples for min/max values (for Unicode 3.2):
  /// <ul>
  /// <li> UProperty.BIDI_CLASS:    0/18
  /// (UCharacterDirection.LEFT_TO_RIGHT/UCharacterDirection.BOUNDARY_NEUTRAL)
  /// <li> UProperty.SCRIPT:        0/45 (UScript.COMMON/UScript.TAGBANWA)
  /// <li> UProperty.IDEOGRAPHIC:   0/1  (false/true)
  /// </ul>
  /// For undefined UProperty constant values, min/max values will be 0/-1.
  ///@param type UProperty selector constant, identifies which binary
  ///        property to check. Must be
  ///        UProperty.BINARY_START &lt;= type &lt; UProperty.BINARY_LIMIT or
  ///        UProperty.INT_START &lt;= type &lt; UProperty.INT_LIMIT.
  ///@return Maximum value returned by u_getIntPropertyValue for a Unicode
  ///         property. &lt;= 0 if the property selector 'type' is out of range.
  ///@see UProperty
  ///@see \#hasBinaryProperty
  ///@see \#getUnicodeVersion
  ///@see \#getIntPropertyMaxValue
  ///@see \#getIntPropertyValue
  static int getIntPropertyMaxValue(int type) =>
      jniAccessors.callStaticMethodWithArgs(_classRef,
          _id_getIntPropertyMaxValue, jni.JniType.intType, [type]).integer;

  static final _id_forDigit =
      jniAccessors.getStaticMethodIDOf(_classRef, "forDigit", "(II)C");

  /// from: static public char forDigit(int digit, int radix)
  ///
  /// Provide the java.lang.Character forDigit API, for convenience.
  static int forDigit(int digit, int radix) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_forDigit, jni.JniType.charType, [digit, radix]).char;

  static final _id_isValidCodePoint =
      jniAccessors.getStaticMethodIDOf(_classRef, "isValidCodePoint", "(I)Z");

  /// from: static public boolean isValidCodePoint(int cp)
  ///
  /// Equivalent to Character\#isValidCodePoint.
  ///@param cp the code point to check
  ///@return true if cp is a valid code point
  static bool isValidCodePoint(int cp) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isValidCodePoint, jni.JniType.booleanType, [cp]).boolean;

  static final _id_isSupplementaryCodePoint = jniAccessors.getStaticMethodIDOf(
      _classRef, "isSupplementaryCodePoint", "(I)Z");

  /// from: static public boolean isSupplementaryCodePoint(int cp)
  ///
  /// Same as Character\#isSupplementaryCodePoint.
  ///@param cp the code point to check
  ///@return true if cp is a supplementary code point
  static bool isSupplementaryCodePoint(int cp) =>
      jniAccessors.callStaticMethodWithArgs(_classRef,
          _id_isSupplementaryCodePoint, jni.JniType.booleanType, [cp]).boolean;

  static final _id_isHighSurrogate =
      jniAccessors.getStaticMethodIDOf(_classRef, "isHighSurrogate", "(C)Z");

  /// from: static public boolean isHighSurrogate(char ch)
  ///
  /// Same as Character\#isHighSurrogate.
  ///@param ch the char to check
  ///@return true if ch is a high (lead) surrogate
  static bool isHighSurrogate(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isHighSurrogate, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isLowSurrogate =
      jniAccessors.getStaticMethodIDOf(_classRef, "isLowSurrogate", "(C)Z");

  /// from: static public boolean isLowSurrogate(char ch)
  ///
  /// Same as Character\#isLowSurrogate.
  ///@param ch the char to check
  ///@return true if ch is a low (trail) surrogate
  static bool isLowSurrogate(int ch) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_isLowSurrogate, jni.JniType.booleanType, [ch]).boolean;

  static final _id_isSurrogatePair =
      jniAccessors.getStaticMethodIDOf(_classRef, "isSurrogatePair", "(CC)Z");

  /// from: static public boolean isSurrogatePair(char high, char low)
  ///
  /// Same as Character\#isSurrogatePair.
  ///@param high the high (lead) char
  ///@param low the low (trail) char
  ///@return true if high, low form a surrogate pair
  static bool isSurrogatePair(int high, int low) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_isSurrogatePair,
          jni.JniType.booleanType, [high, low]).boolean;

  static final _id_charCount =
      jniAccessors.getStaticMethodIDOf(_classRef, "charCount", "(I)I");

  /// from: static public int charCount(int cp)
  ///
  /// Same as Character\#charCount.
  /// Returns the number of chars needed to represent the code point (1 or 2).
  /// This does not check the code point for validity.
  ///@param cp the code point to check
  ///@return the number of chars needed to represent the code point
  static int charCount(int cp) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_charCount, jni.JniType.intType, [cp]).integer;

  static final _id_toCodePoint =
      jniAccessors.getStaticMethodIDOf(_classRef, "toCodePoint", "(CC)I");

  /// from: static public int toCodePoint(char high, char low)
  ///
  /// Same as Character\#toCodePoint.
  /// Returns the code point represented by the two surrogate code units.
  /// This does not check the surrogate pair for validity.
  ///@param high the high (lead) surrogate
  ///@param low the low (trail) surrogate
  ///@return the code point formed by the surrogate pair
  static int toCodePoint(int high, int low) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_toCodePoint, jni.JniType.intType, [high, low]).integer;

  static final _id_codePointAt = jniAccessors.getStaticMethodIDOf(
      _classRef, "codePointAt", "(Ljava/lang/CharSequence;I)I");

  /// from: static public int codePointAt(java.lang.CharSequence seq, int index)
  ///
  /// Same as Character\#codePointAt(CharSequence, int).
  /// Returns the code point at index.
  /// This examines only the characters at index and index+1.
  ///@param seq the characters to check
  ///@param index the index of the first or only char forming the code point
  ///@return the code point at the index
  static int codePointAt(jni.JniObject seq, int index) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_codePointAt,
          jni.JniType.intType, [seq.reference, index]).integer;

  static final _id_codePointAt1 =
      jniAccessors.getStaticMethodIDOf(_classRef, "codePointAt", "([CI)I");

  /// from: static public int codePointAt(char[] text, int index)
  ///
  /// Same as Character\#codePointAt(char[], int).
  /// Returns the code point at index.
  /// This examines only the characters at index and index+1.
  ///@param text the characters to check
  ///@param index the index of the first or only char forming the code point
  ///@return the code point at the index
  static int codePointAt1(jni.JniObject text, int index) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_codePointAt1,
          jni.JniType.intType, [text.reference, index]).integer;

  static final _id_codePointAt2 =
      jniAccessors.getStaticMethodIDOf(_classRef, "codePointAt", "([CII)I");

  /// from: static public int codePointAt(char[] text, int index, int limit)
  ///
  /// Same as Character\#codePointAt(char[], int, int).
  /// Returns the code point at index.
  /// This examines only the characters at index and index+1.
  ///@param text the characters to check
  ///@param index the index of the first or only char forming the code point
  ///@param limit the limit of the valid text
  ///@return the code point at the index
  static int codePointAt2(jni.JniObject text, int index, int limit) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_codePointAt2,
          jni.JniType.intType, [text.reference, index, limit]).integer;

  static final _id_codePointBefore = jniAccessors.getStaticMethodIDOf(
      _classRef, "codePointBefore", "(Ljava/lang/CharSequence;I)I");

  /// from: static public int codePointBefore(java.lang.CharSequence seq, int index)
  ///
  /// Same as Character\#codePointBefore(CharSequence, int).
  /// Return the code point before index.
  /// This examines only the characters at index-1 and index-2.
  ///@param seq the characters to check
  ///@param index the index after the last or only char forming the code point
  ///@return the code point before the index
  static int codePointBefore(jni.JniObject seq, int index) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_codePointBefore,
          jni.JniType.intType, [seq.reference, index]).integer;

  static final _id_codePointBefore1 =
      jniAccessors.getStaticMethodIDOf(_classRef, "codePointBefore", "([CI)I");

  /// from: static public int codePointBefore(char[] text, int index)
  ///
  /// Same as Character\#codePointBefore(char[], int).
  /// Returns the code point before index.
  /// This examines only the characters at index-1 and index-2.
  ///@param text the characters to check
  ///@param index the index after the last or only char forming the code point
  ///@return the code point before the index
  static int codePointBefore1(jni.JniObject text, int index) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_codePointBefore1,
          jni.JniType.intType, [text.reference, index]).integer;

  static final _id_codePointBefore2 =
      jniAccessors.getStaticMethodIDOf(_classRef, "codePointBefore", "([CII)I");

  /// from: static public int codePointBefore(char[] text, int index, int limit)
  ///
  /// Same as Character\#codePointBefore(char[], int, int).
  /// Return the code point before index.
  /// This examines only the characters at index-1 and index-2.
  ///@param text the characters to check
  ///@param index the index after the last or only char forming the code point
  ///@param limit the start of the valid text
  ///@return the code point before the index
  static int codePointBefore2(jni.JniObject text, int index, int limit) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_codePointBefore2,
          jni.JniType.intType, [text.reference, index, limit]).integer;

  static final _id_toChars =
      jniAccessors.getStaticMethodIDOf(_classRef, "toChars", "(I[CI)I");

  /// from: static public int toChars(int cp, char[] dst, int dstIndex)
  ///
  /// Same as Character\#toChars(int, char[], int).
  /// Writes the chars representing the
  /// code point into the destination at the given index.
  ///@param cp the code point to convert
  ///@param dst the destination array into which to put the char(s) representing the code point
  ///@param dstIndex the index at which to put the first (or only) char
  ///@return the count of the number of chars written (1 or 2)
  ///@throws IllegalArgumentException if cp is not a valid code point
  static int toChars(int cp, jni.JniObject dst, int dstIndex) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_toChars,
          jni.JniType.intType, [cp, dst.reference, dstIndex]).integer;

  static final _id_toChars1 =
      jniAccessors.getStaticMethodIDOf(_classRef, "toChars", "(I)[C");

  /// from: static public char[] toChars(int cp)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Same as Character\#toChars(int).
  /// Returns a char array representing the code point.
  ///@param cp the code point to convert
  ///@return an array containing the char(s) representing the code point
  ///@throws IllegalArgumentException if cp is not a valid code point
  static jni.JniObject toChars1(int cp) =>
      jni.JniObject.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_toChars1, jni.JniType.objectType, [cp]).object);

  static final _id_getDirectionality =
      jniAccessors.getStaticMethodIDOf(_classRef, "getDirectionality", "(I)B");

  /// from: static public byte getDirectionality(int cp)
  ///
  /// Equivalent to the Character\#getDirectionality(char) method, for
  /// convenience. Returns a byte representing the directionality of the
  /// character.
  ///
  /// <strong>[icu] Note:</strong> Unlike Character\#getDirectionality(char), this returns
  /// DIRECTIONALITY_LEFT_TO_RIGHT for undefined or out-of-bounds characters.
  ///
  /// <strong>[icu] Note:</strong> The return value must be tested using the constants defined in UCharacterDirection and its interface UCharacterEnums.ECharacterDirection since the values are different from the ones
  /// defined by <code>java.lang.Character</code>.
  ///@param cp the code point to check
  ///@return the directionality of the code point
  ///@see \#getDirection
  static int getDirectionality(int cp) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_getDirectionality, jni.JniType.byteType, [cp]).byte;

  static final _id_codePointCount = jniAccessors.getStaticMethodIDOf(
      _classRef, "codePointCount", "(Ljava/lang/CharSequence;II)I");

  /// from: static public int codePointCount(java.lang.CharSequence text, int start, int limit)
  ///
  /// Equivalent to the Character\#codePointCount(CharSequence, int, int)
  /// method, for convenience.  Counts the number of code points in the range
  /// of text.
  ///@param text the characters to check
  ///@param start the start of the range
  ///@param limit the limit of the range
  ///@return the number of code points in the range
  static int codePointCount(jni.JniObject text, int start, int limit) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_codePointCount,
          jni.JniType.intType, [text.reference, start, limit]).integer;

  static final _id_codePointCount1 =
      jniAccessors.getStaticMethodIDOf(_classRef, "codePointCount", "([CII)I");

  /// from: static public int codePointCount(char[] text, int start, int limit)
  ///
  /// Equivalent to the Character\#codePointCount(char[], int, int) method, for
  /// convenience. Counts the number of code points in the range of text.
  ///@param text the characters to check
  ///@param start the start of the range
  ///@param limit the limit of the range
  ///@return the number of code points in the range
  static int codePointCount1(jni.JniObject text, int start, int limit) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_codePointCount1,
          jni.JniType.intType, [text.reference, start, limit]).integer;

  static final _id_offsetByCodePoints = jniAccessors.getStaticMethodIDOf(
      _classRef, "offsetByCodePoints", "(Ljava/lang/CharSequence;II)I");

  /// from: static public int offsetByCodePoints(java.lang.CharSequence text, int index, int codePointOffset)
  ///
  /// Equivalent to the Character\#offsetByCodePoints(CharSequence, int, int)
  /// method, for convenience.  Adjusts the char index by a code point offset.
  ///@param text the characters to check
  ///@param index the index to adjust
  ///@param codePointOffset the number of code points by which to offset the index
  ///@return the adjusted index
  static int offsetByCodePoints(
          jni.JniObject text, int index, int codePointOffset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_offsetByCodePoints,
          jni.JniType.intType,
          [text.reference, index, codePointOffset]).integer;

  static final _id_offsetByCodePoints1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "offsetByCodePoints", "([CIIII)I");

  /// from: static public int offsetByCodePoints(char[] text, int start, int count, int index, int codePointOffset)
  ///
  /// Equivalent to the
  /// Character\#offsetByCodePoints(char[], int, int, int, int)
  /// method, for convenience.  Adjusts the char index by a code point offset.
  ///@param text the characters to check
  ///@param start the start of the range to check
  ///@param count the length of the range to check
  ///@param index the index to adjust
  ///@param codePointOffset the number of code points by which to offset the index
  ///@return the adjusted index
  static int offsetByCodePoints1(jni.JniObject text, int start, int count,
          int index, int codePointOffset) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_offsetByCodePoints1,
          jni.JniType.intType,
          [text.reference, start, count, index, codePointOffset]).integer;
}

/// from: android.icu.lang.UCharacter$WordBreak
///
/// Word Break constants.
///@see UProperty\#WORD_BREAK
class UCharacter_WordBreak extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/icu/lang/UCharacter\$WordBreak");
  UCharacter_WordBreak.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int ALETTER
  ///
  ///
  static const ALETTER = 1;

  /// from: static public final int CR
  ///
  ///
  static const CR = 8;

  /// from: static public final int DOUBLE_QUOTE
  ///
  ///
  static const DOUBLE_QUOTE = 16;

  /// from: static public final int EXTEND
  ///
  ///
  static const EXTEND = 9;

  /// from: static public final int EXTENDNUMLET
  ///
  ///
  static const EXTENDNUMLET = 7;

  /// from: static public final int E_BASE
  ///
  ///
  static const E_BASE = 17;

  /// from: static public final int E_BASE_GAZ
  ///
  ///
  static const E_BASE_GAZ = 18;

  /// from: static public final int E_MODIFIER
  ///
  ///
  static const E_MODIFIER = 19;

  /// from: static public final int FORMAT
  ///
  ///
  static const FORMAT = 2;

  /// from: static public final int GLUE_AFTER_ZWJ
  ///
  ///
  static const GLUE_AFTER_ZWJ = 20;

  /// from: static public final int HEBREW_LETTER
  ///
  ///
  static const HEBREW_LETTER = 14;

  /// from: static public final int KATAKANA
  ///
  ///
  static const KATAKANA = 3;

  /// from: static public final int LF
  ///
  ///
  static const LF = 10;

  /// from: static public final int MIDLETTER
  ///
  ///
  static const MIDLETTER = 4;

  /// from: static public final int MIDNUM
  ///
  ///
  static const MIDNUM = 5;

  /// from: static public final int MIDNUMLET
  ///
  ///
  static const MIDNUMLET = 11;

  /// from: static public final int NEWLINE
  ///
  ///
  static const NEWLINE = 12;

  /// from: static public final int NUMERIC
  ///
  ///
  static const NUMERIC = 6;

  /// from: static public final int OTHER
  ///
  ///
  static const OTHER = 0;

  /// from: static public final int REGIONAL_INDICATOR
  ///
  ///
  static const REGIONAL_INDICATOR = 13;

  /// from: static public final int SINGLE_QUOTE
  ///
  ///
  static const SINGLE_QUOTE = 15;

  /// from: static public final int ZWJ
  ///
  ///
  static const ZWJ = 21;
}

/// from: android.icu.lang.UCharacter$UnicodeBlock
///
/// <strong>[icu enhancement]</strong> ICU's replacement for java.lang.Character.UnicodeBlock.&nbsp;Methods, fields, and other functionality specific to ICU are labeled '<strong>[icu]</strong>'.
///
/// A family of character subsets representing the character blocks in the
/// Unicode specification, generated from Unicode Data file Blocks.txt.
/// Character blocks generally define characters used for a specific script
/// or purpose. A character is contained by at most one Unicode block.
///
/// <strong>[icu] Note:</strong> All fields named XXX_ID are specific to ICU.
class UCharacter_UnicodeBlock extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/icu/lang/UCharacter\$UnicodeBlock");
  UCharacter_UnicodeBlock.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ADLAM = jniAccessors.getStaticFieldIDOf(
      _classRef, "ADLAM", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ADLAM
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ADLAM =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ADLAM, jni.JniType.objectType)
          .object);

  /// from: static public final int ADLAM_ID
  ///
  ///
  static const ADLAM_ID = 263;

  static final _id_AEGEAN_NUMBERS = jniAccessors.getStaticFieldIDOf(_classRef,
      "AEGEAN_NUMBERS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock AEGEAN_NUMBERS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get AEGEAN_NUMBERS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_AEGEAN_NUMBERS, jni.JniType.objectType)
          .object);

  /// from: static public final int AEGEAN_NUMBERS_ID
  ///
  ///
  static const AEGEAN_NUMBERS_ID = 119;

  static final _id_AHOM = jniAccessors.getStaticFieldIDOf(
      _classRef, "AHOM", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock AHOM
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get AHOM =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_AHOM, jni.JniType.objectType)
          .object);

  /// from: static public final int AHOM_ID
  ///
  ///
  static const AHOM_ID = 253;

  static final _id_ALCHEMICAL_SYMBOLS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "ALCHEMICAL_SYMBOLS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ALCHEMICAL_SYMBOLS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ALCHEMICAL_SYMBOLS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_ALCHEMICAL_SYMBOLS, jni.JniType.objectType)
          .object);

  /// from: static public final int ALCHEMICAL_SYMBOLS_ID
  ///
  ///
  static const ALCHEMICAL_SYMBOLS_ID = 208;

  static final _id_ALPHABETIC_PRESENTATION_FORMS =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "ALPHABETIC_PRESENTATION_FORMS",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ALPHABETIC_PRESENTATION_FORMS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ALPHABETIC_PRESENTATION_FORMS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ALPHABETIC_PRESENTATION_FORMS,
              jni.JniType.objectType)
          .object);

  /// from: static public final int ALPHABETIC_PRESENTATION_FORMS_ID
  ///
  ///
  static const ALPHABETIC_PRESENTATION_FORMS_ID = 80;

  static final _id_ANATOLIAN_HIEROGLYPHS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "ANATOLIAN_HIEROGLYPHS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ANATOLIAN_HIEROGLYPHS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ANATOLIAN_HIEROGLYPHS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_ANATOLIAN_HIEROGLYPHS, jni.JniType.objectType)
          .object);

  /// from: static public final int ANATOLIAN_HIEROGLYPHS_ID
  ///
  ///
  static const ANATOLIAN_HIEROGLYPHS_ID = 254;

  static final _id_ANCIENT_GREEK_MUSICAL_NOTATION =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "ANCIENT_GREEK_MUSICAL_NOTATION",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ANCIENT_GREEK_MUSICAL_NOTATION
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ANCIENT_GREEK_MUSICAL_NOTATION =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ANCIENT_GREEK_MUSICAL_NOTATION,
              jni.JniType.objectType)
          .object);

  /// from: static public final int ANCIENT_GREEK_MUSICAL_NOTATION_ID
  ///
  ///
  static const ANCIENT_GREEK_MUSICAL_NOTATION_ID = 126;

  static final _id_ANCIENT_GREEK_NUMBERS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "ANCIENT_GREEK_NUMBERS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ANCIENT_GREEK_NUMBERS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ANCIENT_GREEK_NUMBERS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_ANCIENT_GREEK_NUMBERS, jni.JniType.objectType)
          .object);

  /// from: static public final int ANCIENT_GREEK_NUMBERS_ID
  ///
  ///
  static const ANCIENT_GREEK_NUMBERS_ID = 127;

  static final _id_ANCIENT_SYMBOLS = jniAccessors.getStaticFieldIDOf(_classRef,
      "ANCIENT_SYMBOLS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ANCIENT_SYMBOLS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ANCIENT_SYMBOLS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_ANCIENT_SYMBOLS, jni.JniType.objectType)
          .object);

  /// from: static public final int ANCIENT_SYMBOLS_ID
  ///
  ///
  static const ANCIENT_SYMBOLS_ID = 165;

  static final _id_ARABIC = jniAccessors.getStaticFieldIDOf(
      _classRef, "ARABIC", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ARABIC
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ARABIC =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ARABIC, jni.JniType.objectType)
          .object);

  static final _id_ARABIC_EXTENDED_A = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "ARABIC_EXTENDED_A",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ARABIC_EXTENDED_A
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ARABIC_EXTENDED_A =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_ARABIC_EXTENDED_A, jni.JniType.objectType)
          .object);

  /// from: static public final int ARABIC_EXTENDED_A_ID
  ///
  ///
  static const ARABIC_EXTENDED_A_ID = 210;

  /// from: static public final int ARABIC_ID
  ///
  ///
  static const ARABIC_ID = 12;

  static final _id_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS,
              jni.JniType.objectType)
          .object);

  /// from: static public final int ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_ID
  ///
  ///
  static const ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS_ID = 211;

  static final _id_ARABIC_PRESENTATION_FORMS_A =
      jniAccessors.getStaticFieldIDOf(_classRef, "ARABIC_PRESENTATION_FORMS_A",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ARABIC_PRESENTATION_FORMS_A
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ARABIC_PRESENTATION_FORMS_A =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ARABIC_PRESENTATION_FORMS_A,
              jni.JniType.objectType)
          .object);

  /// from: static public final int ARABIC_PRESENTATION_FORMS_A_ID
  ///
  ///
  static const ARABIC_PRESENTATION_FORMS_A_ID = 81;

  static final _id_ARABIC_PRESENTATION_FORMS_B =
      jniAccessors.getStaticFieldIDOf(_classRef, "ARABIC_PRESENTATION_FORMS_B",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ARABIC_PRESENTATION_FORMS_B
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ARABIC_PRESENTATION_FORMS_B =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ARABIC_PRESENTATION_FORMS_B,
              jni.JniType.objectType)
          .object);

  /// from: static public final int ARABIC_PRESENTATION_FORMS_B_ID
  ///
  ///
  static const ARABIC_PRESENTATION_FORMS_B_ID = 85;

  static final _id_ARABIC_SUPPLEMENT = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "ARABIC_SUPPLEMENT",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ARABIC_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ARABIC_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_ARABIC_SUPPLEMENT, jni.JniType.objectType)
          .object);

  /// from: static public final int ARABIC_SUPPLEMENT_ID
  ///
  ///
  static const ARABIC_SUPPLEMENT_ID = 128;

  static final _id_ARMENIAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "ARMENIAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ARMENIAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ARMENIAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ARMENIAN, jni.JniType.objectType)
          .object);

  /// from: static public final int ARMENIAN_ID
  ///
  ///
  static const ARMENIAN_ID = 10;

  static final _id_ARROWS = jniAccessors.getStaticFieldIDOf(
      _classRef, "ARROWS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ARROWS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ARROWS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ARROWS, jni.JniType.objectType)
          .object);

  /// from: static public final int ARROWS_ID
  ///
  ///
  static const ARROWS_ID = 46;

  static final _id_AVESTAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "AVESTAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock AVESTAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get AVESTAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_AVESTAN, jni.JniType.objectType)
          .object);

  /// from: static public final int AVESTAN_ID
  ///
  ///
  static const AVESTAN_ID = 188;

  static final _id_BALINESE = jniAccessors.getStaticFieldIDOf(
      _classRef, "BALINESE", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BALINESE
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BALINESE =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_BALINESE, jni.JniType.objectType)
          .object);

  /// from: static public final int BALINESE_ID
  ///
  ///
  static const BALINESE_ID = 147;

  static final _id_BAMUM = jniAccessors.getStaticFieldIDOf(
      _classRef, "BAMUM", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BAMUM
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BAMUM =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_BAMUM, jni.JniType.objectType)
          .object);

  /// from: static public final int BAMUM_ID
  ///
  ///
  static const BAMUM_ID = 177;

  static final _id_BAMUM_SUPPLEMENT = jniAccessors.getStaticFieldIDOf(_classRef,
      "BAMUM_SUPPLEMENT", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BAMUM_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BAMUM_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_BAMUM_SUPPLEMENT, jni.JniType.objectType)
          .object);

  /// from: static public final int BAMUM_SUPPLEMENT_ID
  ///
  ///
  static const BAMUM_SUPPLEMENT_ID = 202;

  static final _id_BASIC_LATIN = jniAccessors.getStaticFieldIDOf(
      _classRef, "BASIC_LATIN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BASIC_LATIN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BASIC_LATIN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_BASIC_LATIN, jni.JniType.objectType)
          .object);

  /// from: static public final int BASIC_LATIN_ID
  ///
  ///
  static const BASIC_LATIN_ID = 1;

  static final _id_BASSA_VAH = jniAccessors.getStaticFieldIDOf(
      _classRef, "BASSA_VAH", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BASSA_VAH
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BASSA_VAH =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_BASSA_VAH, jni.JniType.objectType)
          .object);

  /// from: static public final int BASSA_VAH_ID
  ///
  ///
  static const BASSA_VAH_ID = 221;

  static final _id_BATAK = jniAccessors.getStaticFieldIDOf(
      _classRef, "BATAK", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BATAK
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BATAK =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_BATAK, jni.JniType.objectType)
          .object);

  /// from: static public final int BATAK_ID
  ///
  ///
  static const BATAK_ID = 199;

  static final _id_BENGALI = jniAccessors.getStaticFieldIDOf(
      _classRef, "BENGALI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BENGALI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BENGALI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_BENGALI, jni.JniType.objectType)
          .object);

  /// from: static public final int BENGALI_ID
  ///
  ///
  static const BENGALI_ID = 16;

  static final _id_BHAIKSUKI = jniAccessors.getStaticFieldIDOf(
      _classRef, "BHAIKSUKI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BHAIKSUKI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BHAIKSUKI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_BHAIKSUKI, jni.JniType.objectType)
          .object);

  /// from: static public final int BHAIKSUKI_ID
  ///
  ///
  static const BHAIKSUKI_ID = 264;

  static final _id_BLOCK_ELEMENTS = jniAccessors.getStaticFieldIDOf(_classRef,
      "BLOCK_ELEMENTS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BLOCK_ELEMENTS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BLOCK_ELEMENTS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_BLOCK_ELEMENTS, jni.JniType.objectType)
          .object);

  /// from: static public final int BLOCK_ELEMENTS_ID
  ///
  ///
  static const BLOCK_ELEMENTS_ID = 53;

  static final _id_BOPOMOFO = jniAccessors.getStaticFieldIDOf(
      _classRef, "BOPOMOFO", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BOPOMOFO
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BOPOMOFO =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_BOPOMOFO, jni.JniType.objectType)
          .object);

  static final _id_BOPOMOFO_EXTENDED = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "BOPOMOFO_EXTENDED",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BOPOMOFO_EXTENDED
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BOPOMOFO_EXTENDED =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_BOPOMOFO_EXTENDED, jni.JniType.objectType)
          .object);

  /// from: static public final int BOPOMOFO_EXTENDED_ID
  ///
  ///
  static const BOPOMOFO_EXTENDED_ID = 67;

  /// from: static public final int BOPOMOFO_ID
  ///
  ///
  static const BOPOMOFO_ID = 64;

  static final _id_BOX_DRAWING = jniAccessors.getStaticFieldIDOf(
      _classRef, "BOX_DRAWING", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BOX_DRAWING
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BOX_DRAWING =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_BOX_DRAWING, jni.JniType.objectType)
          .object);

  /// from: static public final int BOX_DRAWING_ID
  ///
  ///
  static const BOX_DRAWING_ID = 52;

  static final _id_BRAHMI = jniAccessors.getStaticFieldIDOf(
      _classRef, "BRAHMI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BRAHMI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BRAHMI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_BRAHMI, jni.JniType.objectType)
          .object);

  /// from: static public final int BRAHMI_ID
  ///
  ///
  static const BRAHMI_ID = 201;

  static final _id_BRAILLE_PATTERNS = jniAccessors.getStaticFieldIDOf(_classRef,
      "BRAILLE_PATTERNS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BRAILLE_PATTERNS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BRAILLE_PATTERNS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_BRAILLE_PATTERNS, jni.JniType.objectType)
          .object);

  /// from: static public final int BRAILLE_PATTERNS_ID
  ///
  ///
  static const BRAILLE_PATTERNS_ID = 57;

  static final _id_BUGINESE = jniAccessors.getStaticFieldIDOf(
      _classRef, "BUGINESE", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BUGINESE
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BUGINESE =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_BUGINESE, jni.JniType.objectType)
          .object);

  /// from: static public final int BUGINESE_ID
  ///
  ///
  static const BUGINESE_ID = 129;

  static final _id_BUHID = jniAccessors.getStaticFieldIDOf(
      _classRef, "BUHID", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BUHID
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BUHID =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_BUHID, jni.JniType.objectType)
          .object);

  /// from: static public final int BUHID_ID
  ///
  ///
  static const BUHID_ID = 100;

  static final _id_BYZANTINE_MUSICAL_SYMBOLS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "BYZANTINE_MUSICAL_SYMBOLS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock BYZANTINE_MUSICAL_SYMBOLS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get BYZANTINE_MUSICAL_SYMBOLS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_BYZANTINE_MUSICAL_SYMBOLS, jni.JniType.objectType)
          .object);

  /// from: static public final int BYZANTINE_MUSICAL_SYMBOLS_ID
  ///
  ///
  static const BYZANTINE_MUSICAL_SYMBOLS_ID = 91;

  static final _id_CARIAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "CARIAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CARIAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CARIAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CARIAN, jni.JniType.objectType)
          .object);

  /// from: static public final int CARIAN_ID
  ///
  ///
  static const CARIAN_ID = 168;

  static final _id_CAUCASIAN_ALBANIAN = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "CAUCASIAN_ALBANIAN",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CAUCASIAN_ALBANIAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CAUCASIAN_ALBANIAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_CAUCASIAN_ALBANIAN, jni.JniType.objectType)
          .object);

  /// from: static public final int CAUCASIAN_ALBANIAN_ID
  ///
  ///
  static const CAUCASIAN_ALBANIAN_ID = 222;

  static final _id_CHAKMA = jniAccessors.getStaticFieldIDOf(
      _classRef, "CHAKMA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CHAKMA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CHAKMA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CHAKMA, jni.JniType.objectType)
          .object);

  /// from: static public final int CHAKMA_ID
  ///
  ///
  static const CHAKMA_ID = 212;

  static final _id_CHAM = jniAccessors.getStaticFieldIDOf(
      _classRef, "CHAM", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CHAM
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CHAM =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CHAM, jni.JniType.objectType)
          .object);

  /// from: static public final int CHAM_ID
  ///
  ///
  static const CHAM_ID = 164;

  static final _id_CHEROKEE = jniAccessors.getStaticFieldIDOf(
      _classRef, "CHEROKEE", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CHEROKEE
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CHEROKEE =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CHEROKEE, jni.JniType.objectType)
          .object);

  /// from: static public final int CHEROKEE_ID
  ///
  ///
  static const CHEROKEE_ID = 32;

  static final _id_CHEROKEE_SUPPLEMENT = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "CHEROKEE_SUPPLEMENT",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CHEROKEE_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CHEROKEE_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_CHEROKEE_SUPPLEMENT, jni.JniType.objectType)
          .object);

  /// from: static public final int CHEROKEE_SUPPLEMENT_ID
  ///
  ///
  static const CHEROKEE_SUPPLEMENT_ID = 255;

  static final _id_CJK_COMPATIBILITY = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "CJK_COMPATIBILITY",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CJK_COMPATIBILITY
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CJK_COMPATIBILITY =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_CJK_COMPATIBILITY, jni.JniType.objectType)
          .object);

  static final _id_CJK_COMPATIBILITY_FORMS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "CJK_COMPATIBILITY_FORMS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CJK_COMPATIBILITY_FORMS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CJK_COMPATIBILITY_FORMS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_CJK_COMPATIBILITY_FORMS, jni.JniType.objectType)
          .object);

  /// from: static public final int CJK_COMPATIBILITY_FORMS_ID
  ///
  ///
  static const CJK_COMPATIBILITY_FORMS_ID = 83;

  /// from: static public final int CJK_COMPATIBILITY_ID
  ///
  ///
  static const CJK_COMPATIBILITY_ID = 69;

  static final _id_CJK_COMPATIBILITY_IDEOGRAPHS =
      jniAccessors.getStaticFieldIDOf(_classRef, "CJK_COMPATIBILITY_IDEOGRAPHS",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CJK_COMPATIBILITY_IDEOGRAPHS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CJK_COMPATIBILITY_IDEOGRAPHS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CJK_COMPATIBILITY_IDEOGRAPHS,
              jni.JniType.objectType)
          .object);

  /// from: static public final int CJK_COMPATIBILITY_IDEOGRAPHS_ID
  ///
  ///
  static const CJK_COMPATIBILITY_IDEOGRAPHS_ID = 79;

  static final _id_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef,
              _id_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT,
              jni.JniType.objectType)
          .object);

  /// from: static public final int CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_ID
  ///
  ///
  static const CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT_ID = 95;

  static final _id_CJK_RADICALS_SUPPLEMENT = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "CJK_RADICALS_SUPPLEMENT",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CJK_RADICALS_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CJK_RADICALS_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_CJK_RADICALS_SUPPLEMENT, jni.JniType.objectType)
          .object);

  /// from: static public final int CJK_RADICALS_SUPPLEMENT_ID
  ///
  ///
  static const CJK_RADICALS_SUPPLEMENT_ID = 58;

  static final _id_CJK_STROKES = jniAccessors.getStaticFieldIDOf(
      _classRef, "CJK_STROKES", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CJK_STROKES
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CJK_STROKES =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CJK_STROKES, jni.JniType.objectType)
          .object);

  /// from: static public final int CJK_STROKES_ID
  ///
  ///
  static const CJK_STROKES_ID = 130;

  static final _id_CJK_SYMBOLS_AND_PUNCTUATION =
      jniAccessors.getStaticFieldIDOf(_classRef, "CJK_SYMBOLS_AND_PUNCTUATION",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CJK_SYMBOLS_AND_PUNCTUATION
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CJK_SYMBOLS_AND_PUNCTUATION =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CJK_SYMBOLS_AND_PUNCTUATION,
              jni.JniType.objectType)
          .object);

  /// from: static public final int CJK_SYMBOLS_AND_PUNCTUATION_ID
  ///
  ///
  static const CJK_SYMBOLS_AND_PUNCTUATION_ID = 61;

  static final _id_CJK_UNIFIED_IDEOGRAPHS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "CJK_UNIFIED_IDEOGRAPHS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CJK_UNIFIED_IDEOGRAPHS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_CJK_UNIFIED_IDEOGRAPHS, jni.JniType.objectType)
          .object);

  static final _id_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A,
              jni.JniType.objectType)
          .object);

  /// from: static public final int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_ID
  ///
  ///
  static const CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A_ID = 70;

  static final _id_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B,
              jni.JniType.objectType)
          .object);

  /// from: static public final int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_ID
  ///
  ///
  static const CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B_ID = 94;

  static final _id_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C,
              jni.JniType.objectType)
          .object);

  /// from: static public final int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_ID
  ///
  ///
  static const CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C_ID = 197;

  static final _id_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D,
              jni.JniType.objectType)
          .object);

  /// from: static public final int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_ID
  ///
  ///
  static const CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D_ID = 209;

  static final _id_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E,
              jni.JniType.objectType)
          .object);

  /// from: static public final int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_ID
  ///
  ///
  static const CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E_ID = 256;

  static final _id_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F,
              jni.JniType.objectType)
          .object);

  /// from: static public final int CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F_ID
  ///
  ///
  static const CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F_ID = 274;

  /// from: static public final int CJK_UNIFIED_IDEOGRAPHS_ID
  ///
  ///
  static const CJK_UNIFIED_IDEOGRAPHS_ID = 71;

  static final _id_COMBINING_DIACRITICAL_MARKS =
      jniAccessors.getStaticFieldIDOf(_classRef, "COMBINING_DIACRITICAL_MARKS",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock COMBINING_DIACRITICAL_MARKS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get COMBINING_DIACRITICAL_MARKS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_COMBINING_DIACRITICAL_MARKS,
              jni.JniType.objectType)
          .object);

  static final _id_COMBINING_DIACRITICAL_MARKS_EXTENDED =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "COMBINING_DIACRITICAL_MARKS_EXTENDED",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock COMBINING_DIACRITICAL_MARKS_EXTENDED
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get COMBINING_DIACRITICAL_MARKS_EXTENDED =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_COMBINING_DIACRITICAL_MARKS_EXTENDED,
              jni.JniType.objectType)
          .object);

  /// from: static public final int COMBINING_DIACRITICAL_MARKS_EXTENDED_ID
  ///
  ///
  static const COMBINING_DIACRITICAL_MARKS_EXTENDED_ID = 224;

  /// from: static public final int COMBINING_DIACRITICAL_MARKS_ID
  ///
  ///
  static const COMBINING_DIACRITICAL_MARKS_ID = 7;

  static final _id_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "COMBINING_DIACRITICAL_MARKS_SUPPLEMENT",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock COMBINING_DIACRITICAL_MARKS_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get COMBINING_DIACRITICAL_MARKS_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT,
              jni.JniType.objectType)
          .object);

  /// from: static public final int COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_ID
  ///
  ///
  static const COMBINING_DIACRITICAL_MARKS_SUPPLEMENT_ID = 131;

  static final _id_COMBINING_HALF_MARKS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "COMBINING_HALF_MARKS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock COMBINING_HALF_MARKS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get COMBINING_HALF_MARKS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_COMBINING_HALF_MARKS, jni.JniType.objectType)
          .object);

  /// from: static public final int COMBINING_HALF_MARKS_ID
  ///
  ///
  static const COMBINING_HALF_MARKS_ID = 82;

  static final _id_COMBINING_MARKS_FOR_SYMBOLS =
      jniAccessors.getStaticFieldIDOf(_classRef, "COMBINING_MARKS_FOR_SYMBOLS",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock COMBINING_MARKS_FOR_SYMBOLS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Unicode 3.2 renames this block to "Combining Diacritical Marks for
  /// Symbols".
  static UCharacter_UnicodeBlock get COMBINING_MARKS_FOR_SYMBOLS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_COMBINING_MARKS_FOR_SYMBOLS,
              jni.JniType.objectType)
          .object);

  /// from: static public final int COMBINING_MARKS_FOR_SYMBOLS_ID
  ///
  /// Unicode 3.2 renames this block to "Combining Diacritical Marks for
  /// Symbols".
  static const COMBINING_MARKS_FOR_SYMBOLS_ID = 43;

  static final _id_COMMON_INDIC_NUMBER_FORMS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "COMMON_INDIC_NUMBER_FORMS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock COMMON_INDIC_NUMBER_FORMS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get COMMON_INDIC_NUMBER_FORMS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_COMMON_INDIC_NUMBER_FORMS, jni.JniType.objectType)
          .object);

  /// from: static public final int COMMON_INDIC_NUMBER_FORMS_ID
  ///
  ///
  static const COMMON_INDIC_NUMBER_FORMS_ID = 178;

  static final _id_CONTROL_PICTURES = jniAccessors.getStaticFieldIDOf(_classRef,
      "CONTROL_PICTURES", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CONTROL_PICTURES
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CONTROL_PICTURES =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_CONTROL_PICTURES, jni.JniType.objectType)
          .object);

  /// from: static public final int CONTROL_PICTURES_ID
  ///
  ///
  static const CONTROL_PICTURES_ID = 49;

  static final _id_COPTIC = jniAccessors.getStaticFieldIDOf(
      _classRef, "COPTIC", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock COPTIC
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get COPTIC =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_COPTIC, jni.JniType.objectType)
          .object);

  static final _id_COPTIC_EPACT_NUMBERS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "COPTIC_EPACT_NUMBERS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock COPTIC_EPACT_NUMBERS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get COPTIC_EPACT_NUMBERS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_COPTIC_EPACT_NUMBERS, jni.JniType.objectType)
          .object);

  /// from: static public final int COPTIC_EPACT_NUMBERS_ID
  ///
  ///
  static const COPTIC_EPACT_NUMBERS_ID = 223;

  /// from: static public final int COPTIC_ID
  ///
  ///
  static const COPTIC_ID = 132;

  static final _id_COUNTING_ROD_NUMERALS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "COUNTING_ROD_NUMERALS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock COUNTING_ROD_NUMERALS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get COUNTING_ROD_NUMERALS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_COUNTING_ROD_NUMERALS, jni.JniType.objectType)
          .object);

  /// from: static public final int COUNTING_ROD_NUMERALS_ID
  ///
  ///
  static const COUNTING_ROD_NUMERALS_ID = 154;

  static final _id_CUNEIFORM = jniAccessors.getStaticFieldIDOf(
      _classRef, "CUNEIFORM", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CUNEIFORM
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CUNEIFORM =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CUNEIFORM, jni.JniType.objectType)
          .object);

  /// from: static public final int CUNEIFORM_ID
  ///
  ///
  static const CUNEIFORM_ID = 152;

  static final _id_CUNEIFORM_NUMBERS_AND_PUNCTUATION =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "CUNEIFORM_NUMBERS_AND_PUNCTUATION",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CUNEIFORM_NUMBERS_AND_PUNCTUATION
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CUNEIFORM_NUMBERS_AND_PUNCTUATION =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CUNEIFORM_NUMBERS_AND_PUNCTUATION,
              jni.JniType.objectType)
          .object);

  /// from: static public final int CUNEIFORM_NUMBERS_AND_PUNCTUATION_ID
  ///
  ///
  static const CUNEIFORM_NUMBERS_AND_PUNCTUATION_ID = 153;

  static final _id_CURRENCY_SYMBOLS = jniAccessors.getStaticFieldIDOf(_classRef,
      "CURRENCY_SYMBOLS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CURRENCY_SYMBOLS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CURRENCY_SYMBOLS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_CURRENCY_SYMBOLS, jni.JniType.objectType)
          .object);

  /// from: static public final int CURRENCY_SYMBOLS_ID
  ///
  ///
  static const CURRENCY_SYMBOLS_ID = 42;

  static final _id_CYPRIOT_SYLLABARY = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "CYPRIOT_SYLLABARY",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CYPRIOT_SYLLABARY
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CYPRIOT_SYLLABARY =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_CYPRIOT_SYLLABARY, jni.JniType.objectType)
          .object);

  /// from: static public final int CYPRIOT_SYLLABARY_ID
  ///
  ///
  static const CYPRIOT_SYLLABARY_ID = 123;

  static final _id_CYRILLIC = jniAccessors.getStaticFieldIDOf(
      _classRef, "CYRILLIC", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CYRILLIC
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CYRILLIC =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CYRILLIC, jni.JniType.objectType)
          .object);

  static final _id_CYRILLIC_EXTENDED_A = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "CYRILLIC_EXTENDED_A",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CYRILLIC_EXTENDED_A
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CYRILLIC_EXTENDED_A =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_CYRILLIC_EXTENDED_A, jni.JniType.objectType)
          .object);

  /// from: static public final int CYRILLIC_EXTENDED_A_ID
  ///
  ///
  static const CYRILLIC_EXTENDED_A_ID = 158;

  static final _id_CYRILLIC_EXTENDED_B = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "CYRILLIC_EXTENDED_B",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CYRILLIC_EXTENDED_B
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CYRILLIC_EXTENDED_B =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_CYRILLIC_EXTENDED_B, jni.JniType.objectType)
          .object);

  /// from: static public final int CYRILLIC_EXTENDED_B_ID
  ///
  ///
  static const CYRILLIC_EXTENDED_B_ID = 160;

  static final _id_CYRILLIC_EXTENDED_C = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "CYRILLIC_EXTENDED_C",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CYRILLIC_EXTENDED_C
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get CYRILLIC_EXTENDED_C =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_CYRILLIC_EXTENDED_C, jni.JniType.objectType)
          .object);

  /// from: static public final int CYRILLIC_EXTENDED_C_ID
  ///
  ///
  static const CYRILLIC_EXTENDED_C_ID = 265;

  /// from: static public final int CYRILLIC_ID
  ///
  ///
  static const CYRILLIC_ID = 9;

  static final _id_CYRILLIC_SUPPLEMENT = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "CYRILLIC_SUPPLEMENT",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CYRILLIC_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Unicode 4.0.1 renames the "Cyrillic Supplementary" block to "Cyrillic Supplement".
  static UCharacter_UnicodeBlock get CYRILLIC_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_CYRILLIC_SUPPLEMENT, jni.JniType.objectType)
          .object);

  static final _id_CYRILLIC_SUPPLEMENTARY = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "CYRILLIC_SUPPLEMENTARY",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock CYRILLIC_SUPPLEMENTARY
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Unicode 4.0.1 renames the "Cyrillic Supplementary" block to "Cyrillic Supplement".
  static UCharacter_UnicodeBlock get CYRILLIC_SUPPLEMENTARY =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_CYRILLIC_SUPPLEMENTARY, jni.JniType.objectType)
          .object);

  /// from: static public final int CYRILLIC_SUPPLEMENTARY_ID
  ///
  /// Unicode 4.0.1 renames the "Cyrillic Supplementary" block to "Cyrillic Supplement".
  static const CYRILLIC_SUPPLEMENTARY_ID = 97;

  /// from: static public final int CYRILLIC_SUPPLEMENT_ID
  ///
  /// Unicode 4.0.1 renames the "Cyrillic Supplementary" block to "Cyrillic Supplement".
  static const CYRILLIC_SUPPLEMENT_ID = 97;

  static final _id_DESERET = jniAccessors.getStaticFieldIDOf(
      _classRef, "DESERET", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock DESERET
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get DESERET =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_DESERET, jni.JniType.objectType)
          .object);

  /// from: static public final int DESERET_ID
  ///
  ///
  static const DESERET_ID = 90;

  static final _id_DEVANAGARI = jniAccessors.getStaticFieldIDOf(
      _classRef, "DEVANAGARI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock DEVANAGARI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get DEVANAGARI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_DEVANAGARI, jni.JniType.objectType)
          .object);

  static final _id_DEVANAGARI_EXTENDED = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "DEVANAGARI_EXTENDED",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock DEVANAGARI_EXTENDED
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get DEVANAGARI_EXTENDED =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_DEVANAGARI_EXTENDED, jni.JniType.objectType)
          .object);

  /// from: static public final int DEVANAGARI_EXTENDED_ID
  ///
  ///
  static const DEVANAGARI_EXTENDED_ID = 179;

  /// from: static public final int DEVANAGARI_ID
  ///
  ///
  static const DEVANAGARI_ID = 15;

  static final _id_DINGBATS = jniAccessors.getStaticFieldIDOf(
      _classRef, "DINGBATS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock DINGBATS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get DINGBATS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_DINGBATS, jni.JniType.objectType)
          .object);

  /// from: static public final int DINGBATS_ID
  ///
  ///
  static const DINGBATS_ID = 56;

  static final _id_DOMINO_TILES = jniAccessors.getStaticFieldIDOf(
      _classRef, "DOMINO_TILES", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock DOMINO_TILES
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get DOMINO_TILES =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_DOMINO_TILES, jni.JniType.objectType)
          .object);

  /// from: static public final int DOMINO_TILES_ID
  ///
  ///
  static const DOMINO_TILES_ID = 171;

  static final _id_DUPLOYAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "DUPLOYAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock DUPLOYAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get DUPLOYAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_DUPLOYAN, jni.JniType.objectType)
          .object);

  /// from: static public final int DUPLOYAN_ID
  ///
  ///
  static const DUPLOYAN_ID = 225;

  static final _id_EARLY_DYNASTIC_CUNEIFORM = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "EARLY_DYNASTIC_CUNEIFORM",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock EARLY_DYNASTIC_CUNEIFORM
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get EARLY_DYNASTIC_CUNEIFORM =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_EARLY_DYNASTIC_CUNEIFORM, jni.JniType.objectType)
          .object);

  /// from: static public final int EARLY_DYNASTIC_CUNEIFORM_ID
  ///
  ///
  static const EARLY_DYNASTIC_CUNEIFORM_ID = 257;

  static final _id_EGYPTIAN_HIEROGLYPHS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "EGYPTIAN_HIEROGLYPHS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock EGYPTIAN_HIEROGLYPHS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get EGYPTIAN_HIEROGLYPHS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_EGYPTIAN_HIEROGLYPHS, jni.JniType.objectType)
          .object);

  /// from: static public final int EGYPTIAN_HIEROGLYPHS_ID
  ///
  ///
  static const EGYPTIAN_HIEROGLYPHS_ID = 194;

  static final _id_ELBASAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "ELBASAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ELBASAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ELBASAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ELBASAN, jni.JniType.objectType)
          .object);

  /// from: static public final int ELBASAN_ID
  ///
  ///
  static const ELBASAN_ID = 226;

  static final _id_EMOTICONS = jniAccessors.getStaticFieldIDOf(
      _classRef, "EMOTICONS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock EMOTICONS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get EMOTICONS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_EMOTICONS, jni.JniType.objectType)
          .object);

  /// from: static public final int EMOTICONS_ID
  ///
  ///
  static const EMOTICONS_ID = 206;

  static final _id_ENCLOSED_ALPHANUMERICS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "ENCLOSED_ALPHANUMERICS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ENCLOSED_ALPHANUMERICS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ENCLOSED_ALPHANUMERICS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_ENCLOSED_ALPHANUMERICS, jni.JniType.objectType)
          .object);

  /// from: static public final int ENCLOSED_ALPHANUMERICS_ID
  ///
  ///
  static const ENCLOSED_ALPHANUMERICS_ID = 51;

  static final _id_ENCLOSED_ALPHANUMERIC_SUPPLEMENT =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "ENCLOSED_ALPHANUMERIC_SUPPLEMENT",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ENCLOSED_ALPHANUMERIC_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ENCLOSED_ALPHANUMERIC_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ENCLOSED_ALPHANUMERIC_SUPPLEMENT,
              jni.JniType.objectType)
          .object);

  /// from: static public final int ENCLOSED_ALPHANUMERIC_SUPPLEMENT_ID
  ///
  ///
  static const ENCLOSED_ALPHANUMERIC_SUPPLEMENT_ID = 195;

  static final _id_ENCLOSED_CJK_LETTERS_AND_MONTHS =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "ENCLOSED_CJK_LETTERS_AND_MONTHS",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ENCLOSED_CJK_LETTERS_AND_MONTHS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ENCLOSED_CJK_LETTERS_AND_MONTHS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ENCLOSED_CJK_LETTERS_AND_MONTHS,
              jni.JniType.objectType)
          .object);

  /// from: static public final int ENCLOSED_CJK_LETTERS_AND_MONTHS_ID
  ///
  ///
  static const ENCLOSED_CJK_LETTERS_AND_MONTHS_ID = 68;

  static final _id_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "ENCLOSED_IDEOGRAPHIC_SUPPLEMENT",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ENCLOSED_IDEOGRAPHIC_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ENCLOSED_IDEOGRAPHIC_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT,
              jni.JniType.objectType)
          .object);

  /// from: static public final int ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_ID
  ///
  ///
  static const ENCLOSED_IDEOGRAPHIC_SUPPLEMENT_ID = 196;

  static final _id_ETHIOPIC = jniAccessors.getStaticFieldIDOf(
      _classRef, "ETHIOPIC", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ETHIOPIC
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ETHIOPIC =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ETHIOPIC, jni.JniType.objectType)
          .object);

  static final _id_ETHIOPIC_EXTENDED = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "ETHIOPIC_EXTENDED",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ETHIOPIC_EXTENDED
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ETHIOPIC_EXTENDED =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_ETHIOPIC_EXTENDED, jni.JniType.objectType)
          .object);

  static final _id_ETHIOPIC_EXTENDED_A = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "ETHIOPIC_EXTENDED_A",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ETHIOPIC_EXTENDED_A
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ETHIOPIC_EXTENDED_A =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_ETHIOPIC_EXTENDED_A, jni.JniType.objectType)
          .object);

  /// from: static public final int ETHIOPIC_EXTENDED_A_ID
  ///
  ///
  static const ETHIOPIC_EXTENDED_A_ID = 200;

  /// from: static public final int ETHIOPIC_EXTENDED_ID
  ///
  ///
  static const ETHIOPIC_EXTENDED_ID = 133;

  /// from: static public final int ETHIOPIC_ID
  ///
  ///
  static const ETHIOPIC_ID = 31;

  static final _id_ETHIOPIC_SUPPLEMENT = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "ETHIOPIC_SUPPLEMENT",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ETHIOPIC_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ETHIOPIC_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_ETHIOPIC_SUPPLEMENT, jni.JniType.objectType)
          .object);

  /// from: static public final int ETHIOPIC_SUPPLEMENT_ID
  ///
  ///
  static const ETHIOPIC_SUPPLEMENT_ID = 134;

  static final _id_GENERAL_PUNCTUATION = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "GENERAL_PUNCTUATION",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock GENERAL_PUNCTUATION
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get GENERAL_PUNCTUATION =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_GENERAL_PUNCTUATION, jni.JniType.objectType)
          .object);

  /// from: static public final int GENERAL_PUNCTUATION_ID
  ///
  ///
  static const GENERAL_PUNCTUATION_ID = 40;

  static final _id_GEOMETRIC_SHAPES = jniAccessors.getStaticFieldIDOf(_classRef,
      "GEOMETRIC_SHAPES", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock GEOMETRIC_SHAPES
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get GEOMETRIC_SHAPES =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_GEOMETRIC_SHAPES, jni.JniType.objectType)
          .object);

  static final _id_GEOMETRIC_SHAPES_EXTENDED = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "GEOMETRIC_SHAPES_EXTENDED",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock GEOMETRIC_SHAPES_EXTENDED
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get GEOMETRIC_SHAPES_EXTENDED =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_GEOMETRIC_SHAPES_EXTENDED, jni.JniType.objectType)
          .object);

  /// from: static public final int GEOMETRIC_SHAPES_EXTENDED_ID
  ///
  ///
  static const GEOMETRIC_SHAPES_EXTENDED_ID = 227;

  /// from: static public final int GEOMETRIC_SHAPES_ID
  ///
  ///
  static const GEOMETRIC_SHAPES_ID = 54;

  static final _id_GEORGIAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "GEORGIAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock GEORGIAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get GEORGIAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_GEORGIAN, jni.JniType.objectType)
          .object);

  /// from: static public final int GEORGIAN_ID
  ///
  ///
  static const GEORGIAN_ID = 29;

  static final _id_GEORGIAN_SUPPLEMENT = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "GEORGIAN_SUPPLEMENT",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock GEORGIAN_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get GEORGIAN_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_GEORGIAN_SUPPLEMENT, jni.JniType.objectType)
          .object);

  /// from: static public final int GEORGIAN_SUPPLEMENT_ID
  ///
  ///
  static const GEORGIAN_SUPPLEMENT_ID = 135;

  static final _id_GLAGOLITIC = jniAccessors.getStaticFieldIDOf(
      _classRef, "GLAGOLITIC", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock GLAGOLITIC
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get GLAGOLITIC =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_GLAGOLITIC, jni.JniType.objectType)
          .object);

  /// from: static public final int GLAGOLITIC_ID
  ///
  ///
  static const GLAGOLITIC_ID = 136;

  static final _id_GLAGOLITIC_SUPPLEMENT = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "GLAGOLITIC_SUPPLEMENT",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock GLAGOLITIC_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get GLAGOLITIC_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_GLAGOLITIC_SUPPLEMENT, jni.JniType.objectType)
          .object);

  /// from: static public final int GLAGOLITIC_SUPPLEMENT_ID
  ///
  ///
  static const GLAGOLITIC_SUPPLEMENT_ID = 266;

  static final _id_GOTHIC = jniAccessors.getStaticFieldIDOf(
      _classRef, "GOTHIC", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock GOTHIC
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get GOTHIC =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_GOTHIC, jni.JniType.objectType)
          .object);

  /// from: static public final int GOTHIC_ID
  ///
  ///
  static const GOTHIC_ID = 89;

  static final _id_GRANTHA = jniAccessors.getStaticFieldIDOf(
      _classRef, "GRANTHA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock GRANTHA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get GRANTHA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_GRANTHA, jni.JniType.objectType)
          .object);

  /// from: static public final int GRANTHA_ID
  ///
  ///
  static const GRANTHA_ID = 228;

  static final _id_GREEK = jniAccessors.getStaticFieldIDOf(
      _classRef, "GREEK", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock GREEK
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Unicode 3.2 renames this block to "Greek and Coptic".
  static UCharacter_UnicodeBlock get GREEK =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_GREEK, jni.JniType.objectType)
          .object);

  static final _id_GREEK_EXTENDED = jniAccessors.getStaticFieldIDOf(_classRef,
      "GREEK_EXTENDED", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock GREEK_EXTENDED
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get GREEK_EXTENDED =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_GREEK_EXTENDED, jni.JniType.objectType)
          .object);

  /// from: static public final int GREEK_EXTENDED_ID
  ///
  ///
  static const GREEK_EXTENDED_ID = 39;

  /// from: static public final int GREEK_ID
  ///
  /// Unicode 3.2 renames this block to "Greek and Coptic".
  static const GREEK_ID = 8;

  static final _id_GUJARATI = jniAccessors.getStaticFieldIDOf(
      _classRef, "GUJARATI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock GUJARATI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get GUJARATI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_GUJARATI, jni.JniType.objectType)
          .object);

  /// from: static public final int GUJARATI_ID
  ///
  ///
  static const GUJARATI_ID = 18;

  static final _id_GURMUKHI = jniAccessors.getStaticFieldIDOf(
      _classRef, "GURMUKHI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock GURMUKHI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get GURMUKHI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_GURMUKHI, jni.JniType.objectType)
          .object);

  /// from: static public final int GURMUKHI_ID
  ///
  ///
  static const GURMUKHI_ID = 17;

  static final _id_HALFWIDTH_AND_FULLWIDTH_FORMS =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "HALFWIDTH_AND_FULLWIDTH_FORMS",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock HALFWIDTH_AND_FULLWIDTH_FORMS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get HALFWIDTH_AND_FULLWIDTH_FORMS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_HALFWIDTH_AND_FULLWIDTH_FORMS,
              jni.JniType.objectType)
          .object);

  /// from: static public final int HALFWIDTH_AND_FULLWIDTH_FORMS_ID
  ///
  ///
  static const HALFWIDTH_AND_FULLWIDTH_FORMS_ID = 87;

  static final _id_HANGUL_COMPATIBILITY_JAMO = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "HANGUL_COMPATIBILITY_JAMO",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock HANGUL_COMPATIBILITY_JAMO
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get HANGUL_COMPATIBILITY_JAMO =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_HANGUL_COMPATIBILITY_JAMO, jni.JniType.objectType)
          .object);

  /// from: static public final int HANGUL_COMPATIBILITY_JAMO_ID
  ///
  ///
  static const HANGUL_COMPATIBILITY_JAMO_ID = 65;

  static final _id_HANGUL_JAMO = jniAccessors.getStaticFieldIDOf(
      _classRef, "HANGUL_JAMO", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock HANGUL_JAMO
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get HANGUL_JAMO =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_HANGUL_JAMO, jni.JniType.objectType)
          .object);

  static final _id_HANGUL_JAMO_EXTENDED_A = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "HANGUL_JAMO_EXTENDED_A",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock HANGUL_JAMO_EXTENDED_A
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get HANGUL_JAMO_EXTENDED_A =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_HANGUL_JAMO_EXTENDED_A, jni.JniType.objectType)
          .object);

  /// from: static public final int HANGUL_JAMO_EXTENDED_A_ID
  ///
  ///
  static const HANGUL_JAMO_EXTENDED_A_ID = 180;

  static final _id_HANGUL_JAMO_EXTENDED_B = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "HANGUL_JAMO_EXTENDED_B",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock HANGUL_JAMO_EXTENDED_B
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get HANGUL_JAMO_EXTENDED_B =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_HANGUL_JAMO_EXTENDED_B, jni.JniType.objectType)
          .object);

  /// from: static public final int HANGUL_JAMO_EXTENDED_B_ID
  ///
  ///
  static const HANGUL_JAMO_EXTENDED_B_ID = 185;

  /// from: static public final int HANGUL_JAMO_ID
  ///
  ///
  static const HANGUL_JAMO_ID = 30;

  static final _id_HANGUL_SYLLABLES = jniAccessors.getStaticFieldIDOf(_classRef,
      "HANGUL_SYLLABLES", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock HANGUL_SYLLABLES
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get HANGUL_SYLLABLES =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_HANGUL_SYLLABLES, jni.JniType.objectType)
          .object);

  /// from: static public final int HANGUL_SYLLABLES_ID
  ///
  ///
  static const HANGUL_SYLLABLES_ID = 74;

  static final _id_HANUNOO = jniAccessors.getStaticFieldIDOf(
      _classRef, "HANUNOO", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock HANUNOO
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get HANUNOO =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_HANUNOO, jni.JniType.objectType)
          .object);

  /// from: static public final int HANUNOO_ID
  ///
  ///
  static const HANUNOO_ID = 99;

  static final _id_HATRAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "HATRAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock HATRAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get HATRAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_HATRAN, jni.JniType.objectType)
          .object);

  /// from: static public final int HATRAN_ID
  ///
  ///
  static const HATRAN_ID = 258;

  static final _id_HEBREW = jniAccessors.getStaticFieldIDOf(
      _classRef, "HEBREW", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock HEBREW
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get HEBREW =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_HEBREW, jni.JniType.objectType)
          .object);

  /// from: static public final int HEBREW_ID
  ///
  ///
  static const HEBREW_ID = 11;

  static final _id_HIGH_PRIVATE_USE_SURROGATES =
      jniAccessors.getStaticFieldIDOf(_classRef, "HIGH_PRIVATE_USE_SURROGATES",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock HIGH_PRIVATE_USE_SURROGATES
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get HIGH_PRIVATE_USE_SURROGATES =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_HIGH_PRIVATE_USE_SURROGATES,
              jni.JniType.objectType)
          .object);

  /// from: static public final int HIGH_PRIVATE_USE_SURROGATES_ID
  ///
  ///
  static const HIGH_PRIVATE_USE_SURROGATES_ID = 76;

  static final _id_HIGH_SURROGATES = jniAccessors.getStaticFieldIDOf(_classRef,
      "HIGH_SURROGATES", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock HIGH_SURROGATES
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get HIGH_SURROGATES =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_HIGH_SURROGATES, jni.JniType.objectType)
          .object);

  /// from: static public final int HIGH_SURROGATES_ID
  ///
  ///
  static const HIGH_SURROGATES_ID = 75;

  static final _id_HIRAGANA = jniAccessors.getStaticFieldIDOf(
      _classRef, "HIRAGANA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock HIRAGANA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get HIRAGANA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_HIRAGANA, jni.JniType.objectType)
          .object);

  /// from: static public final int HIRAGANA_ID
  ///
  ///
  static const HIRAGANA_ID = 62;

  static final _id_IDEOGRAPHIC_DESCRIPTION_CHARACTERS =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "IDEOGRAPHIC_DESCRIPTION_CHARACTERS",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock IDEOGRAPHIC_DESCRIPTION_CHARACTERS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get IDEOGRAPHIC_DESCRIPTION_CHARACTERS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_IDEOGRAPHIC_DESCRIPTION_CHARACTERS,
              jni.JniType.objectType)
          .object);

  /// from: static public final int IDEOGRAPHIC_DESCRIPTION_CHARACTERS_ID
  ///
  ///
  static const IDEOGRAPHIC_DESCRIPTION_CHARACTERS_ID = 60;

  static final _id_IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION,
              jni.JniType.objectType)
          .object);

  /// from: static public final int IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_ID
  ///
  ///
  static const IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION_ID = 267;

  static final _id_IMPERIAL_ARAMAIC = jniAccessors.getStaticFieldIDOf(_classRef,
      "IMPERIAL_ARAMAIC", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock IMPERIAL_ARAMAIC
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get IMPERIAL_ARAMAIC =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_IMPERIAL_ARAMAIC, jni.JniType.objectType)
          .object);

  /// from: static public final int IMPERIAL_ARAMAIC_ID
  ///
  ///
  static const IMPERIAL_ARAMAIC_ID = 186;

  static final _id_INSCRIPTIONAL_PAHLAVI = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "INSCRIPTIONAL_PAHLAVI",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock INSCRIPTIONAL_PAHLAVI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get INSCRIPTIONAL_PAHLAVI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_INSCRIPTIONAL_PAHLAVI, jni.JniType.objectType)
          .object);

  /// from: static public final int INSCRIPTIONAL_PAHLAVI_ID
  ///
  ///
  static const INSCRIPTIONAL_PAHLAVI_ID = 190;

  static final _id_INSCRIPTIONAL_PARTHIAN = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "INSCRIPTIONAL_PARTHIAN",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock INSCRIPTIONAL_PARTHIAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get INSCRIPTIONAL_PARTHIAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_INSCRIPTIONAL_PARTHIAN, jni.JniType.objectType)
          .object);

  /// from: static public final int INSCRIPTIONAL_PARTHIAN_ID
  ///
  ///
  static const INSCRIPTIONAL_PARTHIAN_ID = 189;

  static final _id_INVALID_CODE = jniAccessors.getStaticFieldIDOf(
      _classRef, "INVALID_CODE", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock INVALID_CODE
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get INVALID_CODE =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_INVALID_CODE, jni.JniType.objectType)
          .object);

  /// from: static public final int INVALID_CODE_ID
  ///
  ///
  static const INVALID_CODE_ID = -1;

  static final _id_IPA_EXTENSIONS = jniAccessors.getStaticFieldIDOf(_classRef,
      "IPA_EXTENSIONS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock IPA_EXTENSIONS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get IPA_EXTENSIONS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_IPA_EXTENSIONS, jni.JniType.objectType)
          .object);

  /// from: static public final int IPA_EXTENSIONS_ID
  ///
  ///
  static const IPA_EXTENSIONS_ID = 5;

  static final _id_JAVANESE = jniAccessors.getStaticFieldIDOf(
      _classRef, "JAVANESE", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock JAVANESE
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get JAVANESE =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_JAVANESE, jni.JniType.objectType)
          .object);

  /// from: static public final int JAVANESE_ID
  ///
  ///
  static const JAVANESE_ID = 181;

  static final _id_KAITHI = jniAccessors.getStaticFieldIDOf(
      _classRef, "KAITHI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock KAITHI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get KAITHI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_KAITHI, jni.JniType.objectType)
          .object);

  /// from: static public final int KAITHI_ID
  ///
  ///
  static const KAITHI_ID = 193;

  static final _id_KANA_EXTENDED_A = jniAccessors.getStaticFieldIDOf(_classRef,
      "KANA_EXTENDED_A", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock KANA_EXTENDED_A
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get KANA_EXTENDED_A =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_KANA_EXTENDED_A, jni.JniType.objectType)
          .object);

  /// from: static public final int KANA_EXTENDED_A_ID
  ///
  ///
  static const KANA_EXTENDED_A_ID = 275;

  static final _id_KANA_SUPPLEMENT = jniAccessors.getStaticFieldIDOf(_classRef,
      "KANA_SUPPLEMENT", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock KANA_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get KANA_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_KANA_SUPPLEMENT, jni.JniType.objectType)
          .object);

  /// from: static public final int KANA_SUPPLEMENT_ID
  ///
  ///
  static const KANA_SUPPLEMENT_ID = 203;

  static final _id_KANBUN = jniAccessors.getStaticFieldIDOf(
      _classRef, "KANBUN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock KANBUN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get KANBUN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_KANBUN, jni.JniType.objectType)
          .object);

  /// from: static public final int KANBUN_ID
  ///
  ///
  static const KANBUN_ID = 66;

  static final _id_KANGXI_RADICALS = jniAccessors.getStaticFieldIDOf(_classRef,
      "KANGXI_RADICALS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock KANGXI_RADICALS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get KANGXI_RADICALS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_KANGXI_RADICALS, jni.JniType.objectType)
          .object);

  /// from: static public final int KANGXI_RADICALS_ID
  ///
  ///
  static const KANGXI_RADICALS_ID = 59;

  static final _id_KANNADA = jniAccessors.getStaticFieldIDOf(
      _classRef, "KANNADA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock KANNADA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get KANNADA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_KANNADA, jni.JniType.objectType)
          .object);

  /// from: static public final int KANNADA_ID
  ///
  ///
  static const KANNADA_ID = 22;

  static final _id_KATAKANA = jniAccessors.getStaticFieldIDOf(
      _classRef, "KATAKANA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock KATAKANA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get KATAKANA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_KATAKANA, jni.JniType.objectType)
          .object);

  /// from: static public final int KATAKANA_ID
  ///
  ///
  static const KATAKANA_ID = 63;

  static final _id_KATAKANA_PHONETIC_EXTENSIONS =
      jniAccessors.getStaticFieldIDOf(_classRef, "KATAKANA_PHONETIC_EXTENSIONS",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock KATAKANA_PHONETIC_EXTENSIONS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get KATAKANA_PHONETIC_EXTENSIONS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_KATAKANA_PHONETIC_EXTENSIONS,
              jni.JniType.objectType)
          .object);

  /// from: static public final int KATAKANA_PHONETIC_EXTENSIONS_ID
  ///
  ///
  static const KATAKANA_PHONETIC_EXTENSIONS_ID = 107;

  static final _id_KAYAH_LI = jniAccessors.getStaticFieldIDOf(
      _classRef, "KAYAH_LI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock KAYAH_LI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get KAYAH_LI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_KAYAH_LI, jni.JniType.objectType)
          .object);

  /// from: static public final int KAYAH_LI_ID
  ///
  ///
  static const KAYAH_LI_ID = 162;

  static final _id_KHAROSHTHI = jniAccessors.getStaticFieldIDOf(
      _classRef, "KHAROSHTHI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock KHAROSHTHI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get KHAROSHTHI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_KHAROSHTHI, jni.JniType.objectType)
          .object);

  /// from: static public final int KHAROSHTHI_ID
  ///
  ///
  static const KHAROSHTHI_ID = 137;

  static final _id_KHMER = jniAccessors.getStaticFieldIDOf(
      _classRef, "KHMER", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock KHMER
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get KHMER =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_KHMER, jni.JniType.objectType)
          .object);

  /// from: static public final int KHMER_ID
  ///
  ///
  static const KHMER_ID = 36;

  static final _id_KHMER_SYMBOLS = jniAccessors.getStaticFieldIDOf(_classRef,
      "KHMER_SYMBOLS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock KHMER_SYMBOLS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get KHMER_SYMBOLS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_KHMER_SYMBOLS, jni.JniType.objectType)
          .object);

  /// from: static public final int KHMER_SYMBOLS_ID
  ///
  ///
  static const KHMER_SYMBOLS_ID = 113;

  static final _id_KHOJKI = jniAccessors.getStaticFieldIDOf(
      _classRef, "KHOJKI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock KHOJKI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get KHOJKI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_KHOJKI, jni.JniType.objectType)
          .object);

  /// from: static public final int KHOJKI_ID
  ///
  ///
  static const KHOJKI_ID = 229;

  static final _id_KHUDAWADI = jniAccessors.getStaticFieldIDOf(
      _classRef, "KHUDAWADI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock KHUDAWADI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get KHUDAWADI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_KHUDAWADI, jni.JniType.objectType)
          .object);

  /// from: static public final int KHUDAWADI_ID
  ///
  ///
  static const KHUDAWADI_ID = 230;

  static final _id_LAO = jniAccessors.getStaticFieldIDOf(
      _classRef, "LAO", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LAO
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LAO =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_LAO, jni.JniType.objectType)
          .object);

  /// from: static public final int LAO_ID
  ///
  ///
  static const LAO_ID = 26;

  static final _id_LATIN_1_SUPPLEMENT = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "LATIN_1_SUPPLEMENT",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LATIN_1_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LATIN_1_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_LATIN_1_SUPPLEMENT, jni.JniType.objectType)
          .object);

  /// from: static public final int LATIN_1_SUPPLEMENT_ID
  ///
  ///
  static const LATIN_1_SUPPLEMENT_ID = 2;

  static final _id_LATIN_EXTENDED_A = jniAccessors.getStaticFieldIDOf(_classRef,
      "LATIN_EXTENDED_A", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LATIN_EXTENDED_A
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LATIN_EXTENDED_A =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_LATIN_EXTENDED_A, jni.JniType.objectType)
          .object);

  static final _id_LATIN_EXTENDED_ADDITIONAL = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "LATIN_EXTENDED_ADDITIONAL",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LATIN_EXTENDED_ADDITIONAL
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LATIN_EXTENDED_ADDITIONAL =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_LATIN_EXTENDED_ADDITIONAL, jni.JniType.objectType)
          .object);

  /// from: static public final int LATIN_EXTENDED_ADDITIONAL_ID
  ///
  ///
  static const LATIN_EXTENDED_ADDITIONAL_ID = 38;

  /// from: static public final int LATIN_EXTENDED_A_ID
  ///
  ///
  static const LATIN_EXTENDED_A_ID = 3;

  static final _id_LATIN_EXTENDED_B = jniAccessors.getStaticFieldIDOf(_classRef,
      "LATIN_EXTENDED_B", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LATIN_EXTENDED_B
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LATIN_EXTENDED_B =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_LATIN_EXTENDED_B, jni.JniType.objectType)
          .object);

  /// from: static public final int LATIN_EXTENDED_B_ID
  ///
  ///
  static const LATIN_EXTENDED_B_ID = 4;

  static final _id_LATIN_EXTENDED_C = jniAccessors.getStaticFieldIDOf(_classRef,
      "LATIN_EXTENDED_C", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LATIN_EXTENDED_C
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LATIN_EXTENDED_C =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_LATIN_EXTENDED_C, jni.JniType.objectType)
          .object);

  /// from: static public final int LATIN_EXTENDED_C_ID
  ///
  ///
  static const LATIN_EXTENDED_C_ID = 148;

  static final _id_LATIN_EXTENDED_D = jniAccessors.getStaticFieldIDOf(_classRef,
      "LATIN_EXTENDED_D", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LATIN_EXTENDED_D
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LATIN_EXTENDED_D =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_LATIN_EXTENDED_D, jni.JniType.objectType)
          .object);

  /// from: static public final int LATIN_EXTENDED_D_ID
  ///
  ///
  static const LATIN_EXTENDED_D_ID = 149;

  static final _id_LATIN_EXTENDED_E = jniAccessors.getStaticFieldIDOf(_classRef,
      "LATIN_EXTENDED_E", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LATIN_EXTENDED_E
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LATIN_EXTENDED_E =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_LATIN_EXTENDED_E, jni.JniType.objectType)
          .object);

  /// from: static public final int LATIN_EXTENDED_E_ID
  ///
  ///
  static const LATIN_EXTENDED_E_ID = 231;

  static final _id_LEPCHA = jniAccessors.getStaticFieldIDOf(
      _classRef, "LEPCHA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LEPCHA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LEPCHA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_LEPCHA, jni.JniType.objectType)
          .object);

  /// from: static public final int LEPCHA_ID
  ///
  ///
  static const LEPCHA_ID = 156;

  static final _id_LETTERLIKE_SYMBOLS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "LETTERLIKE_SYMBOLS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LETTERLIKE_SYMBOLS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LETTERLIKE_SYMBOLS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_LETTERLIKE_SYMBOLS, jni.JniType.objectType)
          .object);

  /// from: static public final int LETTERLIKE_SYMBOLS_ID
  ///
  ///
  static const LETTERLIKE_SYMBOLS_ID = 44;

  static final _id_LIMBU = jniAccessors.getStaticFieldIDOf(
      _classRef, "LIMBU", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LIMBU
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LIMBU =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_LIMBU, jni.JniType.objectType)
          .object);

  /// from: static public final int LIMBU_ID
  ///
  ///
  static const LIMBU_ID = 111;

  static final _id_LINEAR_A = jniAccessors.getStaticFieldIDOf(
      _classRef, "LINEAR_A", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LINEAR_A
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LINEAR_A =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_LINEAR_A, jni.JniType.objectType)
          .object);

  /// from: static public final int LINEAR_A_ID
  ///
  ///
  static const LINEAR_A_ID = 232;

  static final _id_LINEAR_B_IDEOGRAMS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "LINEAR_B_IDEOGRAMS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LINEAR_B_IDEOGRAMS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LINEAR_B_IDEOGRAMS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_LINEAR_B_IDEOGRAMS, jni.JniType.objectType)
          .object);

  /// from: static public final int LINEAR_B_IDEOGRAMS_ID
  ///
  ///
  static const LINEAR_B_IDEOGRAMS_ID = 118;

  static final _id_LINEAR_B_SYLLABARY = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "LINEAR_B_SYLLABARY",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LINEAR_B_SYLLABARY
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LINEAR_B_SYLLABARY =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_LINEAR_B_SYLLABARY, jni.JniType.objectType)
          .object);

  /// from: static public final int LINEAR_B_SYLLABARY_ID
  ///
  ///
  static const LINEAR_B_SYLLABARY_ID = 117;

  static final _id_LISU = jniAccessors.getStaticFieldIDOf(
      _classRef, "LISU", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LISU
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LISU =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_LISU, jni.JniType.objectType)
          .object);

  /// from: static public final int LISU_ID
  ///
  ///
  static const LISU_ID = 176;

  static final _id_LOW_SURROGATES = jniAccessors.getStaticFieldIDOf(_classRef,
      "LOW_SURROGATES", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LOW_SURROGATES
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LOW_SURROGATES =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_LOW_SURROGATES, jni.JniType.objectType)
          .object);

  /// from: static public final int LOW_SURROGATES_ID
  ///
  ///
  static const LOW_SURROGATES_ID = 77;

  static final _id_LYCIAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "LYCIAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LYCIAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LYCIAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_LYCIAN, jni.JniType.objectType)
          .object);

  /// from: static public final int LYCIAN_ID
  ///
  ///
  static const LYCIAN_ID = 167;

  static final _id_LYDIAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "LYDIAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock LYDIAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get LYDIAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_LYDIAN, jni.JniType.objectType)
          .object);

  /// from: static public final int LYDIAN_ID
  ///
  ///
  static const LYDIAN_ID = 169;

  static final _id_MAHAJANI = jniAccessors.getStaticFieldIDOf(
      _classRef, "MAHAJANI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MAHAJANI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MAHAJANI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MAHAJANI, jni.JniType.objectType)
          .object);

  /// from: static public final int MAHAJANI_ID
  ///
  ///
  static const MAHAJANI_ID = 233;

  static final _id_MAHJONG_TILES = jniAccessors.getStaticFieldIDOf(_classRef,
      "MAHJONG_TILES", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MAHJONG_TILES
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MAHJONG_TILES =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MAHJONG_TILES, jni.JniType.objectType)
          .object);

  /// from: static public final int MAHJONG_TILES_ID
  ///
  ///
  static const MAHJONG_TILES_ID = 170;

  static final _id_MALAYALAM = jniAccessors.getStaticFieldIDOf(
      _classRef, "MALAYALAM", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MALAYALAM
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MALAYALAM =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MALAYALAM, jni.JniType.objectType)
          .object);

  /// from: static public final int MALAYALAM_ID
  ///
  ///
  static const MALAYALAM_ID = 23;

  static final _id_MANDAIC = jniAccessors.getStaticFieldIDOf(
      _classRef, "MANDAIC", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MANDAIC
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MANDAIC =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MANDAIC, jni.JniType.objectType)
          .object);

  /// from: static public final int MANDAIC_ID
  ///
  ///
  static const MANDAIC_ID = 198;

  static final _id_MANICHAEAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "MANICHAEAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MANICHAEAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MANICHAEAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MANICHAEAN, jni.JniType.objectType)
          .object);

  /// from: static public final int MANICHAEAN_ID
  ///
  ///
  static const MANICHAEAN_ID = 234;

  static final _id_MARCHEN = jniAccessors.getStaticFieldIDOf(
      _classRef, "MARCHEN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MARCHEN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MARCHEN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MARCHEN, jni.JniType.objectType)
          .object);

  /// from: static public final int MARCHEN_ID
  ///
  ///
  static const MARCHEN_ID = 268;

  static final _id_MASARAM_GONDI = jniAccessors.getStaticFieldIDOf(_classRef,
      "MASARAM_GONDI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MASARAM_GONDI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MASARAM_GONDI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MASARAM_GONDI, jni.JniType.objectType)
          .object);

  /// from: static public final int MASARAM_GONDI_ID
  ///
  ///
  static const MASARAM_GONDI_ID = 276;

  static final _id_MATHEMATICAL_ALPHANUMERIC_SYMBOLS =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "MATHEMATICAL_ALPHANUMERIC_SYMBOLS",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MATHEMATICAL_ALPHANUMERIC_SYMBOLS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MATHEMATICAL_ALPHANUMERIC_SYMBOLS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MATHEMATICAL_ALPHANUMERIC_SYMBOLS,
              jni.JniType.objectType)
          .object);

  /// from: static public final int MATHEMATICAL_ALPHANUMERIC_SYMBOLS_ID
  ///
  ///
  static const MATHEMATICAL_ALPHANUMERIC_SYMBOLS_ID = 93;

  static final _id_MATHEMATICAL_OPERATORS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "MATHEMATICAL_OPERATORS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MATHEMATICAL_OPERATORS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MATHEMATICAL_OPERATORS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_MATHEMATICAL_OPERATORS, jni.JniType.objectType)
          .object);

  /// from: static public final int MATHEMATICAL_OPERATORS_ID
  ///
  ///
  static const MATHEMATICAL_OPERATORS_ID = 47;

  static final _id_MEETEI_MAYEK = jniAccessors.getStaticFieldIDOf(
      _classRef, "MEETEI_MAYEK", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MEETEI_MAYEK
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MEETEI_MAYEK =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MEETEI_MAYEK, jni.JniType.objectType)
          .object);

  static final _id_MEETEI_MAYEK_EXTENSIONS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "MEETEI_MAYEK_EXTENSIONS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MEETEI_MAYEK_EXTENSIONS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MEETEI_MAYEK_EXTENSIONS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_MEETEI_MAYEK_EXTENSIONS, jni.JniType.objectType)
          .object);

  /// from: static public final int MEETEI_MAYEK_EXTENSIONS_ID
  ///
  ///
  static const MEETEI_MAYEK_EXTENSIONS_ID = 213;

  /// from: static public final int MEETEI_MAYEK_ID
  ///
  ///
  static const MEETEI_MAYEK_ID = 184;

  static final _id_MENDE_KIKAKUI = jniAccessors.getStaticFieldIDOf(_classRef,
      "MENDE_KIKAKUI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MENDE_KIKAKUI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MENDE_KIKAKUI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MENDE_KIKAKUI, jni.JniType.objectType)
          .object);

  /// from: static public final int MENDE_KIKAKUI_ID
  ///
  ///
  static const MENDE_KIKAKUI_ID = 235;

  static final _id_MEROITIC_CURSIVE = jniAccessors.getStaticFieldIDOf(_classRef,
      "MEROITIC_CURSIVE", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MEROITIC_CURSIVE
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MEROITIC_CURSIVE =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_MEROITIC_CURSIVE, jni.JniType.objectType)
          .object);

  /// from: static public final int MEROITIC_CURSIVE_ID
  ///
  ///
  static const MEROITIC_CURSIVE_ID = 214;

  static final _id_MEROITIC_HIEROGLYPHS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "MEROITIC_HIEROGLYPHS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MEROITIC_HIEROGLYPHS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MEROITIC_HIEROGLYPHS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_MEROITIC_HIEROGLYPHS, jni.JniType.objectType)
          .object);

  /// from: static public final int MEROITIC_HIEROGLYPHS_ID
  ///
  ///
  static const MEROITIC_HIEROGLYPHS_ID = 215;

  static final _id_MIAO = jniAccessors.getStaticFieldIDOf(
      _classRef, "MIAO", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MIAO
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MIAO =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MIAO, jni.JniType.objectType)
          .object);

  /// from: static public final int MIAO_ID
  ///
  ///
  static const MIAO_ID = 216;

  static final _id_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A,
              jni.JniType.objectType)
          .object);

  /// from: static public final int MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_ID
  ///
  ///
  static const MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A_ID = 102;

  static final _id_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B,
              jni.JniType.objectType)
          .object);

  /// from: static public final int MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_ID
  ///
  ///
  static const MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B_ID = 105;

  static final _id_MISCELLANEOUS_SYMBOLS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "MISCELLANEOUS_SYMBOLS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MISCELLANEOUS_SYMBOLS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MISCELLANEOUS_SYMBOLS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_MISCELLANEOUS_SYMBOLS, jni.JniType.objectType)
          .object);

  static final _id_MISCELLANEOUS_SYMBOLS_AND_ARROWS =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "MISCELLANEOUS_SYMBOLS_AND_ARROWS",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MISCELLANEOUS_SYMBOLS_AND_ARROWS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MISCELLANEOUS_SYMBOLS_AND_ARROWS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MISCELLANEOUS_SYMBOLS_AND_ARROWS,
              jni.JniType.objectType)
          .object);

  /// from: static public final int MISCELLANEOUS_SYMBOLS_AND_ARROWS_ID
  ///
  ///
  static const MISCELLANEOUS_SYMBOLS_AND_ARROWS_ID = 115;

  static final _id_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS,
              jni.JniType.objectType)
          .object);

  /// from: static public final int MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_ID
  ///
  ///
  static const MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS_ID = 205;

  /// from: static public final int MISCELLANEOUS_SYMBOLS_ID
  ///
  ///
  static const MISCELLANEOUS_SYMBOLS_ID = 55;

  static final _id_MISCELLANEOUS_TECHNICAL = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "MISCELLANEOUS_TECHNICAL",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MISCELLANEOUS_TECHNICAL
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MISCELLANEOUS_TECHNICAL =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_MISCELLANEOUS_TECHNICAL, jni.JniType.objectType)
          .object);

  /// from: static public final int MISCELLANEOUS_TECHNICAL_ID
  ///
  ///
  static const MISCELLANEOUS_TECHNICAL_ID = 48;

  static final _id_MODI = jniAccessors.getStaticFieldIDOf(
      _classRef, "MODI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MODI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MODI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MODI, jni.JniType.objectType)
          .object);

  static final _id_MODIFIER_TONE_LETTERS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "MODIFIER_TONE_LETTERS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MODIFIER_TONE_LETTERS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MODIFIER_TONE_LETTERS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_MODIFIER_TONE_LETTERS, jni.JniType.objectType)
          .object);

  /// from: static public final int MODIFIER_TONE_LETTERS_ID
  ///
  ///
  static const MODIFIER_TONE_LETTERS_ID = 138;

  /// from: static public final int MODI_ID
  ///
  ///
  static const MODI_ID = 236;

  static final _id_MONGOLIAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "MONGOLIAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MONGOLIAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MONGOLIAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MONGOLIAN, jni.JniType.objectType)
          .object);

  /// from: static public final int MONGOLIAN_ID
  ///
  ///
  static const MONGOLIAN_ID = 37;

  static final _id_MONGOLIAN_SUPPLEMENT = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "MONGOLIAN_SUPPLEMENT",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MONGOLIAN_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MONGOLIAN_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_MONGOLIAN_SUPPLEMENT, jni.JniType.objectType)
          .object);

  /// from: static public final int MONGOLIAN_SUPPLEMENT_ID
  ///
  ///
  static const MONGOLIAN_SUPPLEMENT_ID = 269;

  static final _id_MRO = jniAccessors.getStaticFieldIDOf(
      _classRef, "MRO", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MRO
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MRO =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MRO, jni.JniType.objectType)
          .object);

  /// from: static public final int MRO_ID
  ///
  ///
  static const MRO_ID = 237;

  static final _id_MULTANI = jniAccessors.getStaticFieldIDOf(
      _classRef, "MULTANI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MULTANI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MULTANI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MULTANI, jni.JniType.objectType)
          .object);

  /// from: static public final int MULTANI_ID
  ///
  ///
  static const MULTANI_ID = 259;

  static final _id_MUSICAL_SYMBOLS = jniAccessors.getStaticFieldIDOf(_classRef,
      "MUSICAL_SYMBOLS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MUSICAL_SYMBOLS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MUSICAL_SYMBOLS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_MUSICAL_SYMBOLS, jni.JniType.objectType)
          .object);

  /// from: static public final int MUSICAL_SYMBOLS_ID
  ///
  ///
  static const MUSICAL_SYMBOLS_ID = 92;

  static final _id_MYANMAR = jniAccessors.getStaticFieldIDOf(
      _classRef, "MYANMAR", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MYANMAR
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MYANMAR =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_MYANMAR, jni.JniType.objectType)
          .object);

  static final _id_MYANMAR_EXTENDED_A = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "MYANMAR_EXTENDED_A",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MYANMAR_EXTENDED_A
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MYANMAR_EXTENDED_A =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_MYANMAR_EXTENDED_A, jni.JniType.objectType)
          .object);

  /// from: static public final int MYANMAR_EXTENDED_A_ID
  ///
  ///
  static const MYANMAR_EXTENDED_A_ID = 182;

  static final _id_MYANMAR_EXTENDED_B = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "MYANMAR_EXTENDED_B",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock MYANMAR_EXTENDED_B
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get MYANMAR_EXTENDED_B =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_MYANMAR_EXTENDED_B, jni.JniType.objectType)
          .object);

  /// from: static public final int MYANMAR_EXTENDED_B_ID
  ///
  ///
  static const MYANMAR_EXTENDED_B_ID = 238;

  /// from: static public final int MYANMAR_ID
  ///
  ///
  static const MYANMAR_ID = 28;

  static final _id_NABATAEAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "NABATAEAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock NABATAEAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get NABATAEAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NABATAEAN, jni.JniType.objectType)
          .object);

  /// from: static public final int NABATAEAN_ID
  ///
  ///
  static const NABATAEAN_ID = 239;

  static final _id_NEWA = jniAccessors.getStaticFieldIDOf(
      _classRef, "NEWA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock NEWA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get NEWA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NEWA, jni.JniType.objectType)
          .object);

  /// from: static public final int NEWA_ID
  ///
  ///
  static const NEWA_ID = 270;

  static final _id_NEW_TAI_LUE = jniAccessors.getStaticFieldIDOf(
      _classRef, "NEW_TAI_LUE", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock NEW_TAI_LUE
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get NEW_TAI_LUE =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NEW_TAI_LUE, jni.JniType.objectType)
          .object);

  /// from: static public final int NEW_TAI_LUE_ID
  ///
  ///
  static const NEW_TAI_LUE_ID = 139;

  static final _id_NKO = jniAccessors.getStaticFieldIDOf(
      _classRef, "NKO", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock NKO
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get NKO =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NKO, jni.JniType.objectType)
          .object);

  /// from: static public final int NKO_ID
  ///
  ///
  static const NKO_ID = 146;

  static final _id_NO_BLOCK = jniAccessors.getStaticFieldIDOf(
      _classRef, "NO_BLOCK", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock NO_BLOCK
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get NO_BLOCK =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NO_BLOCK, jni.JniType.objectType)
          .object);

  static final _id_NUMBER_FORMS = jniAccessors.getStaticFieldIDOf(
      _classRef, "NUMBER_FORMS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock NUMBER_FORMS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get NUMBER_FORMS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NUMBER_FORMS, jni.JniType.objectType)
          .object);

  /// from: static public final int NUMBER_FORMS_ID
  ///
  ///
  static const NUMBER_FORMS_ID = 45;

  static final _id_NUSHU = jniAccessors.getStaticFieldIDOf(
      _classRef, "NUSHU", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock NUSHU
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get NUSHU =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_NUSHU, jni.JniType.objectType)
          .object);

  /// from: static public final int NUSHU_ID
  ///
  ///
  static const NUSHU_ID = 277;

  static final _id_OGHAM = jniAccessors.getStaticFieldIDOf(
      _classRef, "OGHAM", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock OGHAM
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get OGHAM =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_OGHAM, jni.JniType.objectType)
          .object);

  /// from: static public final int OGHAM_ID
  ///
  ///
  static const OGHAM_ID = 34;

  static final _id_OLD_HUNGARIAN = jniAccessors.getStaticFieldIDOf(_classRef,
      "OLD_HUNGARIAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock OLD_HUNGARIAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get OLD_HUNGARIAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_OLD_HUNGARIAN, jni.JniType.objectType)
          .object);

  /// from: static public final int OLD_HUNGARIAN_ID
  ///
  ///
  static const OLD_HUNGARIAN_ID = 260;

  static final _id_OLD_ITALIC = jniAccessors.getStaticFieldIDOf(
      _classRef, "OLD_ITALIC", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock OLD_ITALIC
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get OLD_ITALIC =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_OLD_ITALIC, jni.JniType.objectType)
          .object);

  /// from: static public final int OLD_ITALIC_ID
  ///
  ///
  static const OLD_ITALIC_ID = 88;

  static final _id_OLD_NORTH_ARABIAN = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "OLD_NORTH_ARABIAN",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock OLD_NORTH_ARABIAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get OLD_NORTH_ARABIAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_OLD_NORTH_ARABIAN, jni.JniType.objectType)
          .object);

  /// from: static public final int OLD_NORTH_ARABIAN_ID
  ///
  ///
  static const OLD_NORTH_ARABIAN_ID = 240;

  static final _id_OLD_PERMIC = jniAccessors.getStaticFieldIDOf(
      _classRef, "OLD_PERMIC", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock OLD_PERMIC
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get OLD_PERMIC =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_OLD_PERMIC, jni.JniType.objectType)
          .object);

  /// from: static public final int OLD_PERMIC_ID
  ///
  ///
  static const OLD_PERMIC_ID = 241;

  static final _id_OLD_PERSIAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "OLD_PERSIAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock OLD_PERSIAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get OLD_PERSIAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_OLD_PERSIAN, jni.JniType.objectType)
          .object);

  /// from: static public final int OLD_PERSIAN_ID
  ///
  ///
  static const OLD_PERSIAN_ID = 140;

  static final _id_OLD_SOUTH_ARABIAN = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "OLD_SOUTH_ARABIAN",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock OLD_SOUTH_ARABIAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get OLD_SOUTH_ARABIAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_OLD_SOUTH_ARABIAN, jni.JniType.objectType)
          .object);

  /// from: static public final int OLD_SOUTH_ARABIAN_ID
  ///
  ///
  static const OLD_SOUTH_ARABIAN_ID = 187;

  static final _id_OLD_TURKIC = jniAccessors.getStaticFieldIDOf(
      _classRef, "OLD_TURKIC", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock OLD_TURKIC
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get OLD_TURKIC =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_OLD_TURKIC, jni.JniType.objectType)
          .object);

  /// from: static public final int OLD_TURKIC_ID
  ///
  ///
  static const OLD_TURKIC_ID = 191;

  static final _id_OL_CHIKI = jniAccessors.getStaticFieldIDOf(
      _classRef, "OL_CHIKI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock OL_CHIKI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get OL_CHIKI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_OL_CHIKI, jni.JniType.objectType)
          .object);

  /// from: static public final int OL_CHIKI_ID
  ///
  ///
  static const OL_CHIKI_ID = 157;

  static final _id_OPTICAL_CHARACTER_RECOGNITION =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "OPTICAL_CHARACTER_RECOGNITION",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock OPTICAL_CHARACTER_RECOGNITION
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get OPTICAL_CHARACTER_RECOGNITION =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_OPTICAL_CHARACTER_RECOGNITION,
              jni.JniType.objectType)
          .object);

  /// from: static public final int OPTICAL_CHARACTER_RECOGNITION_ID
  ///
  ///
  static const OPTICAL_CHARACTER_RECOGNITION_ID = 50;

  static final _id_ORIYA = jniAccessors.getStaticFieldIDOf(
      _classRef, "ORIYA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ORIYA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ORIYA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_ORIYA, jni.JniType.objectType)
          .object);

  /// from: static public final int ORIYA_ID
  ///
  ///
  static const ORIYA_ID = 19;

  static final _id_ORNAMENTAL_DINGBATS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "ORNAMENTAL_DINGBATS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ORNAMENTAL_DINGBATS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ORNAMENTAL_DINGBATS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_ORNAMENTAL_DINGBATS, jni.JniType.objectType)
          .object);

  /// from: static public final int ORNAMENTAL_DINGBATS_ID
  ///
  ///
  static const ORNAMENTAL_DINGBATS_ID = 242;

  static final _id_OSAGE = jniAccessors.getStaticFieldIDOf(
      _classRef, "OSAGE", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock OSAGE
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get OSAGE =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_OSAGE, jni.JniType.objectType)
          .object);

  /// from: static public final int OSAGE_ID
  ///
  ///
  static const OSAGE_ID = 271;

  static final _id_OSMANYA = jniAccessors.getStaticFieldIDOf(
      _classRef, "OSMANYA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock OSMANYA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get OSMANYA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_OSMANYA, jni.JniType.objectType)
          .object);

  /// from: static public final int OSMANYA_ID
  ///
  ///
  static const OSMANYA_ID = 122;

  static final _id_PAHAWH_HMONG = jniAccessors.getStaticFieldIDOf(
      _classRef, "PAHAWH_HMONG", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock PAHAWH_HMONG
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get PAHAWH_HMONG =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PAHAWH_HMONG, jni.JniType.objectType)
          .object);

  /// from: static public final int PAHAWH_HMONG_ID
  ///
  ///
  static const PAHAWH_HMONG_ID = 243;

  static final _id_PALMYRENE = jniAccessors.getStaticFieldIDOf(
      _classRef, "PALMYRENE", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock PALMYRENE
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get PALMYRENE =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PALMYRENE, jni.JniType.objectType)
          .object);

  /// from: static public final int PALMYRENE_ID
  ///
  ///
  static const PALMYRENE_ID = 244;

  static final _id_PAU_CIN_HAU = jniAccessors.getStaticFieldIDOf(
      _classRef, "PAU_CIN_HAU", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock PAU_CIN_HAU
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get PAU_CIN_HAU =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PAU_CIN_HAU, jni.JniType.objectType)
          .object);

  /// from: static public final int PAU_CIN_HAU_ID
  ///
  ///
  static const PAU_CIN_HAU_ID = 245;

  static final _id_PHAGS_PA = jniAccessors.getStaticFieldIDOf(
      _classRef, "PHAGS_PA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock PHAGS_PA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get PHAGS_PA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PHAGS_PA, jni.JniType.objectType)
          .object);

  /// from: static public final int PHAGS_PA_ID
  ///
  ///
  static const PHAGS_PA_ID = 150;

  static final _id_PHAISTOS_DISC = jniAccessors.getStaticFieldIDOf(_classRef,
      "PHAISTOS_DISC", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock PHAISTOS_DISC
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get PHAISTOS_DISC =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PHAISTOS_DISC, jni.JniType.objectType)
          .object);

  /// from: static public final int PHAISTOS_DISC_ID
  ///
  ///
  static const PHAISTOS_DISC_ID = 166;

  static final _id_PHOENICIAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "PHOENICIAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock PHOENICIAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get PHOENICIAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PHOENICIAN, jni.JniType.objectType)
          .object);

  /// from: static public final int PHOENICIAN_ID
  ///
  ///
  static const PHOENICIAN_ID = 151;

  static final _id_PHONETIC_EXTENSIONS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "PHONETIC_EXTENSIONS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock PHONETIC_EXTENSIONS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get PHONETIC_EXTENSIONS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_PHONETIC_EXTENSIONS, jni.JniType.objectType)
          .object);

  /// from: static public final int PHONETIC_EXTENSIONS_ID
  ///
  ///
  static const PHONETIC_EXTENSIONS_ID = 114;

  static final _id_PHONETIC_EXTENSIONS_SUPPLEMENT =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "PHONETIC_EXTENSIONS_SUPPLEMENT",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock PHONETIC_EXTENSIONS_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get PHONETIC_EXTENSIONS_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PHONETIC_EXTENSIONS_SUPPLEMENT,
              jni.JniType.objectType)
          .object);

  /// from: static public final int PHONETIC_EXTENSIONS_SUPPLEMENT_ID
  ///
  ///
  static const PHONETIC_EXTENSIONS_SUPPLEMENT_ID = 141;

  static final _id_PLAYING_CARDS = jniAccessors.getStaticFieldIDOf(_classRef,
      "PLAYING_CARDS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock PLAYING_CARDS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get PLAYING_CARDS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PLAYING_CARDS, jni.JniType.objectType)
          .object);

  /// from: static public final int PLAYING_CARDS_ID
  ///
  ///
  static const PLAYING_CARDS_ID = 204;

  static final _id_PRIVATE_USE = jniAccessors.getStaticFieldIDOf(
      _classRef, "PRIVATE_USE", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock PRIVATE_USE
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Same as public static final int PRIVATE_USE_AREA.
  /// Until Unicode 3.1.1; the corresponding block name was "Private Use";
  /// and multiple code point ranges had this block.
  /// Unicode 3.2 renames the block for the BMP PUA to "Private Use Area"
  /// and adds separate blocks for the supplementary PUAs.
  static UCharacter_UnicodeBlock get PRIVATE_USE =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_PRIVATE_USE, jni.JniType.objectType)
          .object);

  static final _id_PRIVATE_USE_AREA = jniAccessors.getStaticFieldIDOf(_classRef,
      "PRIVATE_USE_AREA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock PRIVATE_USE_AREA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Same as public static final int PRIVATE_USE.
  /// Until Unicode 3.1.1; the corresponding block name was "Private Use";
  /// and multiple code point ranges had this block.
  /// Unicode 3.2 renames the block for the BMP PUA to "Private Use Area"
  /// and adds separate blocks for the supplementary PUAs.
  static UCharacter_UnicodeBlock get PRIVATE_USE_AREA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_PRIVATE_USE_AREA, jni.JniType.objectType)
          .object);

  /// from: static public final int PRIVATE_USE_AREA_ID
  ///
  /// Same as public static final int PRIVATE_USE.
  /// Until Unicode 3.1.1; the corresponding block name was "Private Use";
  /// and multiple code point ranges had this block.
  /// Unicode 3.2 renames the block for the BMP PUA to "Private Use Area"
  /// and adds separate blocks for the supplementary PUAs.
  static const PRIVATE_USE_AREA_ID = 78;

  /// from: static public final int PRIVATE_USE_ID
  ///
  /// Same as public static final int PRIVATE_USE_AREA.
  /// Until Unicode 3.1.1; the corresponding block name was "Private Use";
  /// and multiple code point ranges had this block.
  /// Unicode 3.2 renames the block for the BMP PUA to "Private Use Area"
  /// and adds separate blocks for the supplementary PUAs.
  static const PRIVATE_USE_ID = 78;

  static final _id_PSALTER_PAHLAVI = jniAccessors.getStaticFieldIDOf(_classRef,
      "PSALTER_PAHLAVI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock PSALTER_PAHLAVI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get PSALTER_PAHLAVI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_PSALTER_PAHLAVI, jni.JniType.objectType)
          .object);

  /// from: static public final int PSALTER_PAHLAVI_ID
  ///
  ///
  static const PSALTER_PAHLAVI_ID = 246;

  static final _id_REJANG = jniAccessors.getStaticFieldIDOf(
      _classRef, "REJANG", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock REJANG
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get REJANG =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_REJANG, jni.JniType.objectType)
          .object);

  /// from: static public final int REJANG_ID
  ///
  ///
  static const REJANG_ID = 163;

  static final _id_RUMI_NUMERAL_SYMBOLS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "RUMI_NUMERAL_SYMBOLS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock RUMI_NUMERAL_SYMBOLS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get RUMI_NUMERAL_SYMBOLS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_RUMI_NUMERAL_SYMBOLS, jni.JniType.objectType)
          .object);

  /// from: static public final int RUMI_NUMERAL_SYMBOLS_ID
  ///
  ///
  static const RUMI_NUMERAL_SYMBOLS_ID = 192;

  static final _id_RUNIC = jniAccessors.getStaticFieldIDOf(
      _classRef, "RUNIC", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock RUNIC
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get RUNIC =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_RUNIC, jni.JniType.objectType)
          .object);

  /// from: static public final int RUNIC_ID
  ///
  ///
  static const RUNIC_ID = 35;

  static final _id_SAMARITAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "SAMARITAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SAMARITAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SAMARITAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SAMARITAN, jni.JniType.objectType)
          .object);

  /// from: static public final int SAMARITAN_ID
  ///
  ///
  static const SAMARITAN_ID = 172;

  static final _id_SAURASHTRA = jniAccessors.getStaticFieldIDOf(
      _classRef, "SAURASHTRA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SAURASHTRA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SAURASHTRA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SAURASHTRA, jni.JniType.objectType)
          .object);

  /// from: static public final int SAURASHTRA_ID
  ///
  ///
  static const SAURASHTRA_ID = 161;

  static final _id_SHARADA = jniAccessors.getStaticFieldIDOf(
      _classRef, "SHARADA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SHARADA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SHARADA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SHARADA, jni.JniType.objectType)
          .object);

  /// from: static public final int SHARADA_ID
  ///
  ///
  static const SHARADA_ID = 217;

  static final _id_SHAVIAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "SHAVIAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SHAVIAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SHAVIAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SHAVIAN, jni.JniType.objectType)
          .object);

  /// from: static public final int SHAVIAN_ID
  ///
  ///
  static const SHAVIAN_ID = 121;

  static final _id_SHORTHAND_FORMAT_CONTROLS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "SHORTHAND_FORMAT_CONTROLS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SHORTHAND_FORMAT_CONTROLS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SHORTHAND_FORMAT_CONTROLS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_SHORTHAND_FORMAT_CONTROLS, jni.JniType.objectType)
          .object);

  /// from: static public final int SHORTHAND_FORMAT_CONTROLS_ID
  ///
  ///
  static const SHORTHAND_FORMAT_CONTROLS_ID = 247;

  static final _id_SIDDHAM = jniAccessors.getStaticFieldIDOf(
      _classRef, "SIDDHAM", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SIDDHAM
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SIDDHAM =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SIDDHAM, jni.JniType.objectType)
          .object);

  /// from: static public final int SIDDHAM_ID
  ///
  ///
  static const SIDDHAM_ID = 248;

  static final _id_SINHALA = jniAccessors.getStaticFieldIDOf(
      _classRef, "SINHALA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SINHALA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SINHALA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SINHALA, jni.JniType.objectType)
          .object);

  static final _id_SINHALA_ARCHAIC_NUMBERS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "SINHALA_ARCHAIC_NUMBERS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SINHALA_ARCHAIC_NUMBERS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SINHALA_ARCHAIC_NUMBERS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_SINHALA_ARCHAIC_NUMBERS, jni.JniType.objectType)
          .object);

  /// from: static public final int SINHALA_ARCHAIC_NUMBERS_ID
  ///
  ///
  static const SINHALA_ARCHAIC_NUMBERS_ID = 249;

  /// from: static public final int SINHALA_ID
  ///
  ///
  static const SINHALA_ID = 24;

  static final _id_SMALL_FORM_VARIANTS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "SMALL_FORM_VARIANTS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SMALL_FORM_VARIANTS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SMALL_FORM_VARIANTS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_SMALL_FORM_VARIANTS, jni.JniType.objectType)
          .object);

  /// from: static public final int SMALL_FORM_VARIANTS_ID
  ///
  ///
  static const SMALL_FORM_VARIANTS_ID = 84;

  static final _id_SORA_SOMPENG = jniAccessors.getStaticFieldIDOf(
      _classRef, "SORA_SOMPENG", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SORA_SOMPENG
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SORA_SOMPENG =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SORA_SOMPENG, jni.JniType.objectType)
          .object);

  /// from: static public final int SORA_SOMPENG_ID
  ///
  ///
  static const SORA_SOMPENG_ID = 218;

  static final _id_SOYOMBO = jniAccessors.getStaticFieldIDOf(
      _classRef, "SOYOMBO", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SOYOMBO
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SOYOMBO =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SOYOMBO, jni.JniType.objectType)
          .object);

  /// from: static public final int SOYOMBO_ID
  ///
  ///
  static const SOYOMBO_ID = 278;

  static final _id_SPACING_MODIFIER_LETTERS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "SPACING_MODIFIER_LETTERS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SPACING_MODIFIER_LETTERS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SPACING_MODIFIER_LETTERS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_SPACING_MODIFIER_LETTERS, jni.JniType.objectType)
          .object);

  /// from: static public final int SPACING_MODIFIER_LETTERS_ID
  ///
  ///
  static const SPACING_MODIFIER_LETTERS_ID = 6;

  static final _id_SPECIALS = jniAccessors.getStaticFieldIDOf(
      _classRef, "SPECIALS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SPECIALS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SPECIALS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SPECIALS, jni.JniType.objectType)
          .object);

  /// from: static public final int SPECIALS_ID
  ///
  ///
  static const SPECIALS_ID = 86;

  static final _id_SUNDANESE = jniAccessors.getStaticFieldIDOf(
      _classRef, "SUNDANESE", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SUNDANESE
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SUNDANESE =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SUNDANESE, jni.JniType.objectType)
          .object);

  /// from: static public final int SUNDANESE_ID
  ///
  ///
  static const SUNDANESE_ID = 155;

  static final _id_SUNDANESE_SUPPLEMENT = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "SUNDANESE_SUPPLEMENT",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SUNDANESE_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SUNDANESE_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_SUNDANESE_SUPPLEMENT, jni.JniType.objectType)
          .object);

  /// from: static public final int SUNDANESE_SUPPLEMENT_ID
  ///
  ///
  static const SUNDANESE_SUPPLEMENT_ID = 219;

  static final _id_SUPERSCRIPTS_AND_SUBSCRIPTS =
      jniAccessors.getStaticFieldIDOf(_classRef, "SUPERSCRIPTS_AND_SUBSCRIPTS",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SUPERSCRIPTS_AND_SUBSCRIPTS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SUPERSCRIPTS_AND_SUBSCRIPTS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SUPERSCRIPTS_AND_SUBSCRIPTS,
              jni.JniType.objectType)
          .object);

  /// from: static public final int SUPERSCRIPTS_AND_SUBSCRIPTS_ID
  ///
  ///
  static const SUPERSCRIPTS_AND_SUBSCRIPTS_ID = 41;

  static final _id_SUPPLEMENTAL_ARROWS_A = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "SUPPLEMENTAL_ARROWS_A",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SUPPLEMENTAL_ARROWS_A
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SUPPLEMENTAL_ARROWS_A =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_SUPPLEMENTAL_ARROWS_A, jni.JniType.objectType)
          .object);

  /// from: static public final int SUPPLEMENTAL_ARROWS_A_ID
  ///
  ///
  static const SUPPLEMENTAL_ARROWS_A_ID = 103;

  static final _id_SUPPLEMENTAL_ARROWS_B = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "SUPPLEMENTAL_ARROWS_B",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SUPPLEMENTAL_ARROWS_B
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SUPPLEMENTAL_ARROWS_B =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_SUPPLEMENTAL_ARROWS_B, jni.JniType.objectType)
          .object);

  /// from: static public final int SUPPLEMENTAL_ARROWS_B_ID
  ///
  ///
  static const SUPPLEMENTAL_ARROWS_B_ID = 104;

  static final _id_SUPPLEMENTAL_ARROWS_C = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "SUPPLEMENTAL_ARROWS_C",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SUPPLEMENTAL_ARROWS_C
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SUPPLEMENTAL_ARROWS_C =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_SUPPLEMENTAL_ARROWS_C, jni.JniType.objectType)
          .object);

  /// from: static public final int SUPPLEMENTAL_ARROWS_C_ID
  ///
  ///
  static const SUPPLEMENTAL_ARROWS_C_ID = 250;

  static final _id_SUPPLEMENTAL_MATHEMATICAL_OPERATORS =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "SUPPLEMENTAL_MATHEMATICAL_OPERATORS",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SUPPLEMENTAL_MATHEMATICAL_OPERATORS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SUPPLEMENTAL_MATHEMATICAL_OPERATORS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SUPPLEMENTAL_MATHEMATICAL_OPERATORS,
              jni.JniType.objectType)
          .object);

  /// from: static public final int SUPPLEMENTAL_MATHEMATICAL_OPERATORS_ID
  ///
  ///
  static const SUPPLEMENTAL_MATHEMATICAL_OPERATORS_ID = 106;

  static final _id_SUPPLEMENTAL_PUNCTUATION = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "SUPPLEMENTAL_PUNCTUATION",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SUPPLEMENTAL_PUNCTUATION
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SUPPLEMENTAL_PUNCTUATION =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_SUPPLEMENTAL_PUNCTUATION, jni.JniType.objectType)
          .object);

  /// from: static public final int SUPPLEMENTAL_PUNCTUATION_ID
  ///
  ///
  static const SUPPLEMENTAL_PUNCTUATION_ID = 142;

  static final _id_SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS,
              jni.JniType.objectType)
          .object);

  /// from: static public final int SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_ID
  ///
  ///
  static const SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS_ID = 261;

  static final _id_SUPPLEMENTARY_PRIVATE_USE_AREA_A =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "SUPPLEMENTARY_PRIVATE_USE_AREA_A",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SUPPLEMENTARY_PRIVATE_USE_AREA_A
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SUPPLEMENTARY_PRIVATE_USE_AREA_A =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SUPPLEMENTARY_PRIVATE_USE_AREA_A,
              jni.JniType.objectType)
          .object);

  /// from: static public final int SUPPLEMENTARY_PRIVATE_USE_AREA_A_ID
  ///
  ///
  static const SUPPLEMENTARY_PRIVATE_USE_AREA_A_ID = 109;

  static final _id_SUPPLEMENTARY_PRIVATE_USE_AREA_B =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "SUPPLEMENTARY_PRIVATE_USE_AREA_B",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SUPPLEMENTARY_PRIVATE_USE_AREA_B
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SUPPLEMENTARY_PRIVATE_USE_AREA_B =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SUPPLEMENTARY_PRIVATE_USE_AREA_B,
              jni.JniType.objectType)
          .object);

  /// from: static public final int SUPPLEMENTARY_PRIVATE_USE_AREA_B_ID
  ///
  ///
  static const SUPPLEMENTARY_PRIVATE_USE_AREA_B_ID = 110;

  static final _id_SUTTON_SIGNWRITING = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "SUTTON_SIGNWRITING",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SUTTON_SIGNWRITING
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SUTTON_SIGNWRITING =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_SUTTON_SIGNWRITING, jni.JniType.objectType)
          .object);

  /// from: static public final int SUTTON_SIGNWRITING_ID
  ///
  ///
  static const SUTTON_SIGNWRITING_ID = 262;

  static final _id_SYLOTI_NAGRI = jniAccessors.getStaticFieldIDOf(
      _classRef, "SYLOTI_NAGRI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SYLOTI_NAGRI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SYLOTI_NAGRI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SYLOTI_NAGRI, jni.JniType.objectType)
          .object);

  /// from: static public final int SYLOTI_NAGRI_ID
  ///
  ///
  static const SYLOTI_NAGRI_ID = 143;

  static final _id_SYRIAC = jniAccessors.getStaticFieldIDOf(
      _classRef, "SYRIAC", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SYRIAC
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SYRIAC =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_SYRIAC, jni.JniType.objectType)
          .object);

  /// from: static public final int SYRIAC_ID
  ///
  ///
  static const SYRIAC_ID = 13;

  static final _id_SYRIAC_SUPPLEMENT = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "SYRIAC_SUPPLEMENT",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock SYRIAC_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get SYRIAC_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_SYRIAC_SUPPLEMENT, jni.JniType.objectType)
          .object);

  /// from: static public final int SYRIAC_SUPPLEMENT_ID
  ///
  ///
  static const SYRIAC_SUPPLEMENT_ID = 279;

  static final _id_TAGALOG = jniAccessors.getStaticFieldIDOf(
      _classRef, "TAGALOG", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock TAGALOG
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get TAGALOG =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_TAGALOG, jni.JniType.objectType)
          .object);

  /// from: static public final int TAGALOG_ID
  ///
  ///
  static const TAGALOG_ID = 98;

  static final _id_TAGBANWA = jniAccessors.getStaticFieldIDOf(
      _classRef, "TAGBANWA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock TAGBANWA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get TAGBANWA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_TAGBANWA, jni.JniType.objectType)
          .object);

  /// from: static public final int TAGBANWA_ID
  ///
  ///
  static const TAGBANWA_ID = 101;

  static final _id_TAGS = jniAccessors.getStaticFieldIDOf(
      _classRef, "TAGS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock TAGS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get TAGS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_TAGS, jni.JniType.objectType)
          .object);

  /// from: static public final int TAGS_ID
  ///
  ///
  static const TAGS_ID = 96;

  static final _id_TAI_LE = jniAccessors.getStaticFieldIDOf(
      _classRef, "TAI_LE", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock TAI_LE
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get TAI_LE =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_TAI_LE, jni.JniType.objectType)
          .object);

  /// from: static public final int TAI_LE_ID
  ///
  ///
  static const TAI_LE_ID = 112;

  static final _id_TAI_THAM = jniAccessors.getStaticFieldIDOf(
      _classRef, "TAI_THAM", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock TAI_THAM
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get TAI_THAM =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_TAI_THAM, jni.JniType.objectType)
          .object);

  /// from: static public final int TAI_THAM_ID
  ///
  ///
  static const TAI_THAM_ID = 174;

  static final _id_TAI_VIET = jniAccessors.getStaticFieldIDOf(
      _classRef, "TAI_VIET", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock TAI_VIET
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get TAI_VIET =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_TAI_VIET, jni.JniType.objectType)
          .object);

  /// from: static public final int TAI_VIET_ID
  ///
  ///
  static const TAI_VIET_ID = 183;

  static final _id_TAI_XUAN_JING_SYMBOLS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "TAI_XUAN_JING_SYMBOLS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock TAI_XUAN_JING_SYMBOLS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get TAI_XUAN_JING_SYMBOLS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_TAI_XUAN_JING_SYMBOLS, jni.JniType.objectType)
          .object);

  /// from: static public final int TAI_XUAN_JING_SYMBOLS_ID
  ///
  ///
  static const TAI_XUAN_JING_SYMBOLS_ID = 124;

  static final _id_TAKRI = jniAccessors.getStaticFieldIDOf(
      _classRef, "TAKRI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock TAKRI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get TAKRI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_TAKRI, jni.JniType.objectType)
          .object);

  /// from: static public final int TAKRI_ID
  ///
  ///
  static const TAKRI_ID = 220;

  static final _id_TAMIL = jniAccessors.getStaticFieldIDOf(
      _classRef, "TAMIL", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock TAMIL
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get TAMIL =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_TAMIL, jni.JniType.objectType)
          .object);

  /// from: static public final int TAMIL_ID
  ///
  ///
  static const TAMIL_ID = 20;

  static final _id_TANGUT = jniAccessors.getStaticFieldIDOf(
      _classRef, "TANGUT", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock TANGUT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get TANGUT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_TANGUT, jni.JniType.objectType)
          .object);

  static final _id_TANGUT_COMPONENTS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "TANGUT_COMPONENTS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock TANGUT_COMPONENTS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get TANGUT_COMPONENTS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_TANGUT_COMPONENTS, jni.JniType.objectType)
          .object);

  /// from: static public final int TANGUT_COMPONENTS_ID
  ///
  ///
  static const TANGUT_COMPONENTS_ID = 273;

  /// from: static public final int TANGUT_ID
  ///
  ///
  static const TANGUT_ID = 272;

  static final _id_TELUGU = jniAccessors.getStaticFieldIDOf(
      _classRef, "TELUGU", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock TELUGU
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get TELUGU =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_TELUGU, jni.JniType.objectType)
          .object);

  /// from: static public final int TELUGU_ID
  ///
  ///
  static const TELUGU_ID = 21;

  static final _id_THAANA = jniAccessors.getStaticFieldIDOf(
      _classRef, "THAANA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock THAANA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get THAANA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_THAANA, jni.JniType.objectType)
          .object);

  /// from: static public final int THAANA_ID
  ///
  ///
  static const THAANA_ID = 14;

  static final _id_THAI = jniAccessors.getStaticFieldIDOf(
      _classRef, "THAI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock THAI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get THAI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_THAI, jni.JniType.objectType)
          .object);

  /// from: static public final int THAI_ID
  ///
  ///
  static const THAI_ID = 25;

  static final _id_TIBETAN = jniAccessors.getStaticFieldIDOf(
      _classRef, "TIBETAN", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock TIBETAN
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get TIBETAN =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_TIBETAN, jni.JniType.objectType)
          .object);

  /// from: static public final int TIBETAN_ID
  ///
  ///
  static const TIBETAN_ID = 27;

  static final _id_TIFINAGH = jniAccessors.getStaticFieldIDOf(
      _classRef, "TIFINAGH", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock TIFINAGH
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get TIFINAGH =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_TIFINAGH, jni.JniType.objectType)
          .object);

  /// from: static public final int TIFINAGH_ID
  ///
  ///
  static const TIFINAGH_ID = 144;

  static final _id_TIRHUTA = jniAccessors.getStaticFieldIDOf(
      _classRef, "TIRHUTA", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock TIRHUTA
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get TIRHUTA =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_TIRHUTA, jni.JniType.objectType)
          .object);

  /// from: static public final int TIRHUTA_ID
  ///
  ///
  static const TIRHUTA_ID = 251;

  static final _id_TRANSPORT_AND_MAP_SYMBOLS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "TRANSPORT_AND_MAP_SYMBOLS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock TRANSPORT_AND_MAP_SYMBOLS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get TRANSPORT_AND_MAP_SYMBOLS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_TRANSPORT_AND_MAP_SYMBOLS, jni.JniType.objectType)
          .object);

  /// from: static public final int TRANSPORT_AND_MAP_SYMBOLS_ID
  ///
  ///
  static const TRANSPORT_AND_MAP_SYMBOLS_ID = 207;

  static final _id_UGARITIC = jniAccessors.getStaticFieldIDOf(
      _classRef, "UGARITIC", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock UGARITIC
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get UGARITIC =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_UGARITIC, jni.JniType.objectType)
          .object);

  /// from: static public final int UGARITIC_ID
  ///
  ///
  static const UGARITIC_ID = 120;

  static final _id_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS,
              jni.JniType.objectType)
          .object);

  static final _id_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock
      get UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED =>
          UCharacter_UnicodeBlock.fromRef(jniAccessors
              .getStaticField(
                  _classRef,
                  _id_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED,
                  jni.JniType.objectType)
              .object);

  /// from: static public final int UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_ID
  ///
  ///
  static const UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_ID = 173;

  /// from: static public final int UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_ID
  ///
  ///
  static const UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_ID = 33;

  static final _id_VAI = jniAccessors.getStaticFieldIDOf(
      _classRef, "VAI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock VAI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get VAI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_VAI, jni.JniType.objectType)
          .object);

  /// from: static public final int VAI_ID
  ///
  ///
  static const VAI_ID = 159;

  static final _id_VARIATION_SELECTORS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "VARIATION_SELECTORS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock VARIATION_SELECTORS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get VARIATION_SELECTORS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_VARIATION_SELECTORS, jni.JniType.objectType)
          .object);

  /// from: static public final int VARIATION_SELECTORS_ID
  ///
  ///
  static const VARIATION_SELECTORS_ID = 108;

  static final _id_VARIATION_SELECTORS_SUPPLEMENT =
      jniAccessors.getStaticFieldIDOf(
          _classRef,
          "VARIATION_SELECTORS_SUPPLEMENT",
          "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock VARIATION_SELECTORS_SUPPLEMENT
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get VARIATION_SELECTORS_SUPPLEMENT =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_VARIATION_SELECTORS_SUPPLEMENT,
              jni.JniType.objectType)
          .object);

  /// from: static public final int VARIATION_SELECTORS_SUPPLEMENT_ID
  ///
  ///
  static const VARIATION_SELECTORS_SUPPLEMENT_ID = 125;

  static final _id_VEDIC_EXTENSIONS = jniAccessors.getStaticFieldIDOf(_classRef,
      "VEDIC_EXTENSIONS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock VEDIC_EXTENSIONS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get VEDIC_EXTENSIONS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_VEDIC_EXTENSIONS, jni.JniType.objectType)
          .object);

  /// from: static public final int VEDIC_EXTENSIONS_ID
  ///
  ///
  static const VEDIC_EXTENSIONS_ID = 175;

  static final _id_VERTICAL_FORMS = jniAccessors.getStaticFieldIDOf(_classRef,
      "VERTICAL_FORMS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock VERTICAL_FORMS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get VERTICAL_FORMS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_VERTICAL_FORMS, jni.JniType.objectType)
          .object);

  /// from: static public final int VERTICAL_FORMS_ID
  ///
  ///
  static const VERTICAL_FORMS_ID = 145;

  static final _id_WARANG_CITI = jniAccessors.getStaticFieldIDOf(
      _classRef, "WARANG_CITI", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock WARANG_CITI
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get WARANG_CITI =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_WARANG_CITI, jni.JniType.objectType)
          .object);

  /// from: static public final int WARANG_CITI_ID
  ///
  ///
  static const WARANG_CITI_ID = 252;

  static final _id_YIJING_HEXAGRAM_SYMBOLS = jniAccessors.getStaticFieldIDOf(
      _classRef,
      "YIJING_HEXAGRAM_SYMBOLS",
      "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock YIJING_HEXAGRAM_SYMBOLS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get YIJING_HEXAGRAM_SYMBOLS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_YIJING_HEXAGRAM_SYMBOLS, jni.JniType.objectType)
          .object);

  /// from: static public final int YIJING_HEXAGRAM_SYMBOLS_ID
  ///
  ///
  static const YIJING_HEXAGRAM_SYMBOLS_ID = 116;

  static final _id_YI_RADICALS = jniAccessors.getStaticFieldIDOf(
      _classRef, "YI_RADICALS", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock YI_RADICALS
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get YI_RADICALS =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_YI_RADICALS, jni.JniType.objectType)
          .object);

  /// from: static public final int YI_RADICALS_ID
  ///
  ///
  static const YI_RADICALS_ID = 73;

  static final _id_YI_SYLLABLES = jniAccessors.getStaticFieldIDOf(
      _classRef, "YI_SYLLABLES", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock YI_SYLLABLES
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get YI_SYLLABLES =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(_classRef, _id_YI_SYLLABLES, jni.JniType.objectType)
          .object);

  /// from: static public final int YI_SYLLABLES_ID
  ///
  ///
  static const YI_SYLLABLES_ID = 72;

  static final _id_ZANABAZAR_SQUARE = jniAccessors.getStaticFieldIDOf(_classRef,
      "ZANABAZAR_SQUARE", "Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public final android.icu.lang.UCharacter.UnicodeBlock ZANABAZAR_SQUARE
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  ///
  static UCharacter_UnicodeBlock get ZANABAZAR_SQUARE =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors
          .getStaticField(
              _classRef, _id_ZANABAZAR_SQUARE, jni.JniType.objectType)
          .object);

  /// from: static public final int ZANABAZAR_SQUARE_ID
  ///
  ///
  static const ZANABAZAR_SQUARE_ID = 280;

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(Ljava/lang/String;I)V");

  /// from: void <init>(java.lang.String name, int id)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// UnicodeBlock constructor
  ///@param name name of this UnicodeBlock
  ///@param id unique id of this UnicodeBlock
  ///@exception NullPointerException if name is <code>null</code>
  UCharacter_UnicodeBlock(jni.JniString name, int id)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor, [name.reference, id]).object);

  static final _id_getInstance = jniAccessors.getStaticMethodIDOf(_classRef,
      "getInstance", "(I)Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public android.icu.lang.UCharacter.UnicodeBlock getInstance(int id)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// <strong>[icu]</strong> Returns the only instance of the UnicodeBlock with the argument ID.
  /// If no such ID exists, a INVALID_CODE UnicodeBlock will be returned.
  ///@param id UnicodeBlock ID
  ///@return the only instance of the UnicodeBlock with the argument ID
  ///         if it exists, otherwise a INVALID_CODE UnicodeBlock will be
  ///         returned.
  static UCharacter_UnicodeBlock getInstance(int id) =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_getInstance, jni.JniType.objectType, [id]).object);

  static final _id_of = jniAccessors.getStaticMethodIDOf(
      _classRef, "of", "(I)Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public android.icu.lang.UCharacter.UnicodeBlock of(int ch)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the Unicode allocation block that contains the code point,
  /// or null if the code point is not a member of a defined block.
  ///@param ch code point to be tested
  ///@return the Unicode allocation block that contains the code point
  static UCharacter_UnicodeBlock of(int ch) =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_of, jni.JniType.objectType, [ch]).object);

  static final _id_forName = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "forName",
      "(Ljava/lang/String;)Landroid/icu/lang/UCharacter\$UnicodeBlock;");

  /// from: static public android.icu.lang.UCharacter.UnicodeBlock forName(java.lang.String blockName)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Alternative to the java.lang.Character.UnicodeBlock\#forName(String) method.
  /// Returns the Unicode block with the given name. <strong>[icu] Note:</strong> Unlike
  /// java.lang.Character.UnicodeBlock\#forName(String), this only matches
  /// against the official UCD name and the Java block name
  /// (ignoring case).
  ///@param blockName the name of the block to match
  ///@return the UnicodeBlock with that name
  ///@throws IllegalArgumentException if the blockName could not be matched
  static UCharacter_UnicodeBlock forName(jni.JniString blockName) =>
      UCharacter_UnicodeBlock.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_forName,
          jni.JniType.objectType,
          [blockName.reference]).object);

  static final _id_getID =
      jniAccessors.getMethodIDOf(_classRef, "getID", "()I");

  /// from: public int getID()
  ///
  /// {icu} Returns the type ID of this Unicode block
  ///@return integer type ID of this Unicode block
  int getID() => jniAccessors.callMethodWithArgs(
      reference, _id_getID, jni.JniType.intType, []).integer;
}

/// from: android.icu.lang.UCharacter$SentenceBreak
///
/// Sentence Break constants.
///@see UProperty\#SENTENCE_BREAK
class UCharacter_SentenceBreak extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/icu/lang/UCharacter\$SentenceBreak");
  UCharacter_SentenceBreak.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int ATERM
  ///
  ///
  static const ATERM = 1;

  /// from: static public final int CLOSE
  ///
  ///
  static const CLOSE = 2;

  /// from: static public final int CR
  ///
  ///
  static const CR = 11;

  /// from: static public final int EXTEND
  ///
  ///
  static const EXTEND = 12;

  /// from: static public final int FORMAT
  ///
  ///
  static const FORMAT = 3;

  /// from: static public final int LF
  ///
  ///
  static const LF = 13;

  /// from: static public final int LOWER
  ///
  ///
  static const LOWER = 4;

  /// from: static public final int NUMERIC
  ///
  ///
  static const NUMERIC = 5;

  /// from: static public final int OLETTER
  ///
  ///
  static const OLETTER = 6;

  /// from: static public final int OTHER
  ///
  ///
  static const OTHER = 0;

  /// from: static public final int SCONTINUE
  ///
  ///
  static const SCONTINUE = 14;

  /// from: static public final int SEP
  ///
  ///
  static const SEP = 7;

  /// from: static public final int SP
  ///
  ///
  static const SP = 8;

  /// from: static public final int STERM
  ///
  ///
  static const STERM = 9;

  /// from: static public final int UPPER
  ///
  ///
  static const UPPER = 10;
}

/// from: android.icu.lang.UCharacter$NumericType
///
/// Numeric Type constants.
///@see UProperty\#NUMERIC_TYPE
class UCharacter_NumericType extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/icu/lang/UCharacter\$NumericType");
  UCharacter_NumericType.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int DECIMAL
  ///
  ///
  static const DECIMAL = 1;

  /// from: static public final int DIGIT
  ///
  ///
  static const DIGIT = 2;

  /// from: static public final int NONE
  ///
  ///
  static const NONE = 0;

  /// from: static public final int NUMERIC
  ///
  ///
  static const NUMERIC = 3;
}

/// from: android.icu.lang.UCharacter$LineBreak
///
/// Line Break constants.
///@see UProperty\#LINE_BREAK
class UCharacter_LineBreak extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/icu/lang/UCharacter\$LineBreak");
  UCharacter_LineBreak.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int ALPHABETIC
  ///
  ///
  static const ALPHABETIC = 2;

  /// from: static public final int AMBIGUOUS
  ///
  ///
  static const AMBIGUOUS = 1;

  /// from: static public final int BREAK_AFTER
  ///
  ///
  static const BREAK_AFTER = 4;

  /// from: static public final int BREAK_BEFORE
  ///
  ///
  static const BREAK_BEFORE = 5;

  /// from: static public final int BREAK_BOTH
  ///
  ///
  static const BREAK_BOTH = 3;

  /// from: static public final int BREAK_SYMBOLS
  ///
  ///
  static const BREAK_SYMBOLS = 27;

  /// from: static public final int CARRIAGE_RETURN
  ///
  ///
  static const CARRIAGE_RETURN = 10;

  /// from: static public final int CLOSE_PARENTHESIS
  ///
  ///
  static const CLOSE_PARENTHESIS = 36;

  /// from: static public final int CLOSE_PUNCTUATION
  ///
  ///
  static const CLOSE_PUNCTUATION = 8;

  /// from: static public final int COMBINING_MARK
  ///
  ///
  static const COMBINING_MARK = 9;

  /// from: static public final int COMPLEX_CONTEXT
  ///
  ///
  static const COMPLEX_CONTEXT = 24;

  /// from: static public final int CONDITIONAL_JAPANESE_STARTER
  ///
  ///
  static const CONDITIONAL_JAPANESE_STARTER = 37;

  /// from: static public final int CONTINGENT_BREAK
  ///
  ///
  static const CONTINGENT_BREAK = 7;

  /// from: static public final int EXCLAMATION
  ///
  ///
  static const EXCLAMATION = 11;

  /// from: static public final int E_BASE
  ///
  ///
  static const E_BASE = 40;

  /// from: static public final int E_MODIFIER
  ///
  ///
  static const E_MODIFIER = 41;

  /// from: static public final int GLUE
  ///
  ///
  static const GLUE = 12;

  /// from: static public final int H2
  ///
  ///
  static const H2 = 31;

  /// from: static public final int H3
  ///
  ///
  static const H3 = 32;

  /// from: static public final int HEBREW_LETTER
  ///
  ///
  static const HEBREW_LETTER = 38;

  /// from: static public final int HYPHEN
  ///
  ///
  static const HYPHEN = 13;

  /// from: static public final int IDEOGRAPHIC
  ///
  ///
  static const IDEOGRAPHIC = 14;

  /// from: static public final int INFIX_NUMERIC
  ///
  ///
  static const INFIX_NUMERIC = 16;

  /// from: static public final int INSEPARABLE
  ///
  /// Renamed from the misspelled "inseperable" in Unicode 4.0.1.
  static const INSEPARABLE = 15;

  /// from: static public final int INSEPERABLE
  ///
  /// @see \#INSEPARABLE
  static const INSEPERABLE = 15;

  /// from: static public final int JL
  ///
  ///
  static const JL = 33;

  /// from: static public final int JT
  ///
  ///
  static const JT = 34;

  /// from: static public final int JV
  ///
  ///
  static const JV = 35;

  /// from: static public final int LINE_FEED
  ///
  ///
  static const LINE_FEED = 17;

  /// from: static public final int MANDATORY_BREAK
  ///
  ///
  static const MANDATORY_BREAK = 6;

  /// from: static public final int NEXT_LINE
  ///
  ///
  static const NEXT_LINE = 29;

  /// from: static public final int NONSTARTER
  ///
  ///
  static const NONSTARTER = 18;

  /// from: static public final int NUMERIC
  ///
  ///
  static const NUMERIC = 19;

  /// from: static public final int OPEN_PUNCTUATION
  ///
  ///
  static const OPEN_PUNCTUATION = 20;

  /// from: static public final int POSTFIX_NUMERIC
  ///
  ///
  static const POSTFIX_NUMERIC = 21;

  /// from: static public final int PREFIX_NUMERIC
  ///
  ///
  static const PREFIX_NUMERIC = 22;

  /// from: static public final int QUOTATION
  ///
  ///
  static const QUOTATION = 23;

  /// from: static public final int REGIONAL_INDICATOR
  ///
  ///
  static const REGIONAL_INDICATOR = 39;

  /// from: static public final int SPACE
  ///
  ///
  static const SPACE = 26;

  /// from: static public final int SURROGATE
  ///
  ///
  static const SURROGATE = 25;

  /// from: static public final int UNKNOWN
  ///
  ///
  static const UNKNOWN = 0;

  /// from: static public final int WORD_JOINER
  ///
  ///
  static const WORD_JOINER = 30;

  /// from: static public final int ZWJ
  ///
  ///
  static const ZWJ = 42;

  /// from: static public final int ZWSPACE
  ///
  ///
  static const ZWSPACE = 28;
}

/// from: android.icu.lang.UCharacter$JoiningType
///
/// Joining Type constants.
///@see UProperty\#JOINING_TYPE
class UCharacter_JoiningType extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/icu/lang/UCharacter\$JoiningType");
  UCharacter_JoiningType.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int DUAL_JOINING
  ///
  ///
  static const DUAL_JOINING = 2;

  /// from: static public final int JOIN_CAUSING
  ///
  ///
  static const JOIN_CAUSING = 1;

  /// from: static public final int LEFT_JOINING
  ///
  ///
  static const LEFT_JOINING = 3;

  /// from: static public final int NON_JOINING
  ///
  ///
  static const NON_JOINING = 0;

  /// from: static public final int RIGHT_JOINING
  ///
  ///
  static const RIGHT_JOINING = 4;

  /// from: static public final int TRANSPARENT
  ///
  ///
  static const TRANSPARENT = 5;
}

/// from: android.icu.lang.UCharacter$JoiningGroup
///
/// Joining Group constants.
///@see UProperty\#JOINING_GROUP
class UCharacter_JoiningGroup extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/icu/lang/UCharacter\$JoiningGroup");
  UCharacter_JoiningGroup.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int AFRICAN_FEH
  ///
  ///
  static const AFRICAN_FEH = 86;

  /// from: static public final int AFRICAN_NOON
  ///
  ///
  static const AFRICAN_NOON = 87;

  /// from: static public final int AFRICAN_QAF
  ///
  ///
  static const AFRICAN_QAF = 88;

  /// from: static public final int AIN
  ///
  ///
  static const AIN = 1;

  /// from: static public final int ALAPH
  ///
  ///
  static const ALAPH = 2;

  /// from: static public final int ALEF
  ///
  ///
  static const ALEF = 3;

  /// from: static public final int BEH
  ///
  ///
  static const BEH = 4;

  /// from: static public final int BETH
  ///
  ///
  static const BETH = 5;

  /// from: static public final int BURUSHASKI_YEH_BARREE
  ///
  ///
  static const BURUSHASKI_YEH_BARREE = 54;

  /// from: static public final int DAL
  ///
  ///
  static const DAL = 6;

  /// from: static public final int DALATH_RISH
  ///
  ///
  static const DALATH_RISH = 7;

  /// from: static public final int E
  ///
  ///
  static const E = 8;

  /// from: static public final int FARSI_YEH
  ///
  ///
  static const FARSI_YEH = 55;

  /// from: static public final int FE
  ///
  ///
  static const FE = 51;

  /// from: static public final int FEH
  ///
  ///
  static const FEH = 9;

  /// from: static public final int FINAL_SEMKATH
  ///
  ///
  static const FINAL_SEMKATH = 10;

  /// from: static public final int GAF
  ///
  ///
  static const GAF = 11;

  /// from: static public final int GAMAL
  ///
  ///
  static const GAMAL = 12;

  /// from: static public final int HAH
  ///
  ///
  static const HAH = 13;

  /// from: static public final int HAMZA_ON_HEH_GOAL
  ///
  ///
  static const HAMZA_ON_HEH_GOAL = 14;

  /// from: static public final int HE
  ///
  ///
  static const HE = 15;

  /// from: static public final int HEH
  ///
  ///
  static const HEH = 16;

  /// from: static public final int HEH_GOAL
  ///
  ///
  static const HEH_GOAL = 17;

  /// from: static public final int HETH
  ///
  ///
  static const HETH = 18;

  /// from: static public final int KAF
  ///
  ///
  static const KAF = 19;

  /// from: static public final int KAPH
  ///
  ///
  static const KAPH = 20;

  /// from: static public final int KHAPH
  ///
  ///
  static const KHAPH = 52;

  /// from: static public final int KNOTTED_HEH
  ///
  ///
  static const KNOTTED_HEH = 21;

  /// from: static public final int LAM
  ///
  ///
  static const LAM = 22;

  /// from: static public final int LAMADH
  ///
  ///
  static const LAMADH = 23;

  /// from: static public final int MALAYALAM_BHA
  ///
  ///
  static const MALAYALAM_BHA = 89;

  /// from: static public final int MALAYALAM_JA
  ///
  ///
  static const MALAYALAM_JA = 90;

  /// from: static public final int MALAYALAM_LLA
  ///
  ///
  static const MALAYALAM_LLA = 91;

  /// from: static public final int MALAYALAM_LLLA
  ///
  ///
  static const MALAYALAM_LLLA = 92;

  /// from: static public final int MALAYALAM_NGA
  ///
  ///
  static const MALAYALAM_NGA = 93;

  /// from: static public final int MALAYALAM_NNA
  ///
  ///
  static const MALAYALAM_NNA = 94;

  /// from: static public final int MALAYALAM_NNNA
  ///
  ///
  static const MALAYALAM_NNNA = 95;

  /// from: static public final int MALAYALAM_NYA
  ///
  ///
  static const MALAYALAM_NYA = 96;

  /// from: static public final int MALAYALAM_RA
  ///
  ///
  static const MALAYALAM_RA = 97;

  /// from: static public final int MALAYALAM_SSA
  ///
  ///
  static const MALAYALAM_SSA = 98;

  /// from: static public final int MALAYALAM_TTA
  ///
  ///
  static const MALAYALAM_TTA = 99;

  /// from: static public final int MANICHAEAN_ALEPH
  ///
  ///
  static const MANICHAEAN_ALEPH = 58;

  /// from: static public final int MANICHAEAN_AYIN
  ///
  ///
  static const MANICHAEAN_AYIN = 59;

  /// from: static public final int MANICHAEAN_BETH
  ///
  ///
  static const MANICHAEAN_BETH = 60;

  /// from: static public final int MANICHAEAN_DALETH
  ///
  ///
  static const MANICHAEAN_DALETH = 61;

  /// from: static public final int MANICHAEAN_DHAMEDH
  ///
  ///
  static const MANICHAEAN_DHAMEDH = 62;

  /// from: static public final int MANICHAEAN_FIVE
  ///
  ///
  static const MANICHAEAN_FIVE = 63;

  /// from: static public final int MANICHAEAN_GIMEL
  ///
  ///
  static const MANICHAEAN_GIMEL = 64;

  /// from: static public final int MANICHAEAN_HETH
  ///
  ///
  static const MANICHAEAN_HETH = 65;

  /// from: static public final int MANICHAEAN_HUNDRED
  ///
  ///
  static const MANICHAEAN_HUNDRED = 66;

  /// from: static public final int MANICHAEAN_KAPH
  ///
  ///
  static const MANICHAEAN_KAPH = 67;

  /// from: static public final int MANICHAEAN_LAMEDH
  ///
  ///
  static const MANICHAEAN_LAMEDH = 68;

  /// from: static public final int MANICHAEAN_MEM
  ///
  ///
  static const MANICHAEAN_MEM = 69;

  /// from: static public final int MANICHAEAN_NUN
  ///
  ///
  static const MANICHAEAN_NUN = 70;

  /// from: static public final int MANICHAEAN_ONE
  ///
  ///
  static const MANICHAEAN_ONE = 71;

  /// from: static public final int MANICHAEAN_PE
  ///
  ///
  static const MANICHAEAN_PE = 72;

  /// from: static public final int MANICHAEAN_QOPH
  ///
  ///
  static const MANICHAEAN_QOPH = 73;

  /// from: static public final int MANICHAEAN_RESH
  ///
  ///
  static const MANICHAEAN_RESH = 74;

  /// from: static public final int MANICHAEAN_SADHE
  ///
  ///
  static const MANICHAEAN_SADHE = 75;

  /// from: static public final int MANICHAEAN_SAMEKH
  ///
  ///
  static const MANICHAEAN_SAMEKH = 76;

  /// from: static public final int MANICHAEAN_TAW
  ///
  ///
  static const MANICHAEAN_TAW = 77;

  /// from: static public final int MANICHAEAN_TEN
  ///
  ///
  static const MANICHAEAN_TEN = 78;

  /// from: static public final int MANICHAEAN_TETH
  ///
  ///
  static const MANICHAEAN_TETH = 79;

  /// from: static public final int MANICHAEAN_THAMEDH
  ///
  ///
  static const MANICHAEAN_THAMEDH = 80;

  /// from: static public final int MANICHAEAN_TWENTY
  ///
  ///
  static const MANICHAEAN_TWENTY = 81;

  /// from: static public final int MANICHAEAN_WAW
  ///
  ///
  static const MANICHAEAN_WAW = 82;

  /// from: static public final int MANICHAEAN_YODH
  ///
  ///
  static const MANICHAEAN_YODH = 83;

  /// from: static public final int MANICHAEAN_ZAYIN
  ///
  ///
  static const MANICHAEAN_ZAYIN = 84;

  /// from: static public final int MEEM
  ///
  ///
  static const MEEM = 24;

  /// from: static public final int MIM
  ///
  ///
  static const MIM = 25;

  /// from: static public final int NOON
  ///
  ///
  static const NOON = 26;

  /// from: static public final int NO_JOINING_GROUP
  ///
  ///
  static const NO_JOINING_GROUP = 0;

  /// from: static public final int NUN
  ///
  ///
  static const NUN = 27;

  /// from: static public final int NYA
  ///
  ///
  static const NYA = 56;

  /// from: static public final int PE
  ///
  ///
  static const PE = 28;

  /// from: static public final int QAF
  ///
  ///
  static const QAF = 29;

  /// from: static public final int QAPH
  ///
  ///
  static const QAPH = 30;

  /// from: static public final int REH
  ///
  ///
  static const REH = 31;

  /// from: static public final int REVERSED_PE
  ///
  ///
  static const REVERSED_PE = 32;

  /// from: static public final int ROHINGYA_YEH
  ///
  ///
  static const ROHINGYA_YEH = 57;

  /// from: static public final int SAD
  ///
  ///
  static const SAD = 33;

  /// from: static public final int SADHE
  ///
  ///
  static const SADHE = 34;

  /// from: static public final int SEEN
  ///
  ///
  static const SEEN = 35;

  /// from: static public final int SEMKATH
  ///
  ///
  static const SEMKATH = 36;

  /// from: static public final int SHIN
  ///
  ///
  static const SHIN = 37;

  /// from: static public final int STRAIGHT_WAW
  ///
  ///
  static const STRAIGHT_WAW = 85;

  /// from: static public final int SWASH_KAF
  ///
  ///
  static const SWASH_KAF = 38;

  /// from: static public final int SYRIAC_WAW
  ///
  ///
  static const SYRIAC_WAW = 39;

  /// from: static public final int TAH
  ///
  ///
  static const TAH = 40;

  /// from: static public final int TAW
  ///
  ///
  static const TAW = 41;

  /// from: static public final int TEH_MARBUTA
  ///
  ///
  static const TEH_MARBUTA = 42;

  /// from: static public final int TEH_MARBUTA_GOAL
  ///
  ///
  static const TEH_MARBUTA_GOAL = 14;

  /// from: static public final int TETH
  ///
  ///
  static const TETH = 43;

  /// from: static public final int WAW
  ///
  ///
  static const WAW = 44;

  /// from: static public final int YEH
  ///
  ///
  static const YEH = 45;

  /// from: static public final int YEH_BARREE
  ///
  ///
  static const YEH_BARREE = 46;

  /// from: static public final int YEH_WITH_TAIL
  ///
  ///
  static const YEH_WITH_TAIL = 47;

  /// from: static public final int YUDH
  ///
  ///
  static const YUDH = 48;

  /// from: static public final int YUDH_HE
  ///
  ///
  static const YUDH_HE = 49;

  /// from: static public final int ZAIN
  ///
  ///
  static const ZAIN = 50;

  /// from: static public final int ZHAIN
  ///
  ///
  static const ZHAIN = 53;
}

/// from: android.icu.lang.UCharacter$HangulSyllableType
///
/// Hangul Syllable Type constants.
///@see UProperty\#HANGUL_SYLLABLE_TYPE
class UCharacter_HangulSyllableType extends jni.JniObject {
  static final _classRef = jniAccessors
      .getClassOf("android/icu/lang/UCharacter\$HangulSyllableType");
  UCharacter_HangulSyllableType.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int LEADING_JAMO
  ///
  ///
  static const LEADING_JAMO = 1;

  /// from: static public final int LVT_SYLLABLE
  ///
  ///
  static const LVT_SYLLABLE = 5;

  /// from: static public final int LV_SYLLABLE
  ///
  ///
  static const LV_SYLLABLE = 4;

  /// from: static public final int NOT_APPLICABLE
  ///
  ///
  static const NOT_APPLICABLE = 0;

  /// from: static public final int TRAILING_JAMO
  ///
  ///
  static const TRAILING_JAMO = 3;

  /// from: static public final int VOWEL_JAMO
  ///
  ///
  static const VOWEL_JAMO = 2;
}

/// from: android.icu.lang.UCharacter$GraphemeClusterBreak
///
/// Grapheme Cluster Break constants.
///@see UProperty\#GRAPHEME_CLUSTER_BREAK
class UCharacter_GraphemeClusterBreak extends jni.JniObject {
  static final _classRef = jniAccessors
      .getClassOf("android/icu/lang/UCharacter\$GraphemeClusterBreak");
  UCharacter_GraphemeClusterBreak.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int CONTROL
  ///
  ///
  static const CONTROL = 1;

  /// from: static public final int CR
  ///
  ///
  static const CR = 2;

  /// from: static public final int EXTEND
  ///
  ///
  static const EXTEND = 3;

  /// from: static public final int E_BASE
  ///
  ///
  static const E_BASE = 13;

  /// from: static public final int E_BASE_GAZ
  ///
  ///
  static const E_BASE_GAZ = 14;

  /// from: static public final int E_MODIFIER
  ///
  ///
  static const E_MODIFIER = 15;

  /// from: static public final int GLUE_AFTER_ZWJ
  ///
  ///
  static const GLUE_AFTER_ZWJ = 16;

  /// from: static public final int L
  ///
  ///
  static const L = 4;

  /// from: static public final int LF
  ///
  ///
  static const LF = 5;

  /// from: static public final int LV
  ///
  ///
  static const LV = 6;

  /// from: static public final int LVT
  ///
  ///
  static const LVT = 7;

  /// from: static public final int OTHER
  ///
  ///
  static const OTHER = 0;

  /// from: static public final int PREPEND
  ///
  ///
  static const PREPEND = 11;

  /// from: static public final int REGIONAL_INDICATOR
  ///
  ///
  static const REGIONAL_INDICATOR = 12;

  /// from: static public final int SPACING_MARK
  ///
  ///
  static const SPACING_MARK = 10;

  /// from: static public final int T
  ///
  ///
  static const T = 8;

  /// from: static public final int V
  ///
  ///
  static const V = 9;

  /// from: static public final int ZWJ
  ///
  ///
  static const ZWJ = 17;
}

/// from: android.icu.lang.UCharacter$EastAsianWidth
///
/// East Asian Width constants.
///@see UProperty\#EAST_ASIAN_WIDTH
///@see UCharacter\#getIntPropertyValue
class UCharacter_EastAsianWidth extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/icu/lang/UCharacter\$EastAsianWidth");
  UCharacter_EastAsianWidth.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int AMBIGUOUS
  ///
  ///
  static const AMBIGUOUS = 1;

  /// from: static public final int FULLWIDTH
  ///
  ///
  static const FULLWIDTH = 3;

  /// from: static public final int HALFWIDTH
  ///
  ///
  static const HALFWIDTH = 2;

  /// from: static public final int NARROW
  ///
  ///
  static const NARROW = 4;

  /// from: static public final int NEUTRAL
  ///
  ///
  static const NEUTRAL = 0;

  /// from: static public final int WIDE
  ///
  ///
  static const WIDE = 5;
}

/// from: android.icu.lang.UCharacter$DecompositionType
///
/// Decomposition Type constants.
///@see UProperty\#DECOMPOSITION_TYPE
class UCharacter_DecompositionType extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/icu/lang/UCharacter\$DecompositionType");
  UCharacter_DecompositionType.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int CANONICAL
  ///
  ///
  static const CANONICAL = 1;

  /// from: static public final int CIRCLE
  ///
  ///
  static const CIRCLE = 3;

  /// from: static public final int COMPAT
  ///
  ///
  static const COMPAT = 2;

  /// from: static public final int FINAL
  ///
  ///
  static const FINAL = 4;

  /// from: static public final int FONT
  ///
  ///
  static const FONT = 5;

  /// from: static public final int FRACTION
  ///
  ///
  static const FRACTION = 6;

  /// from: static public final int INITIAL
  ///
  ///
  static const INITIAL = 7;

  /// from: static public final int ISOLATED
  ///
  ///
  static const ISOLATED = 8;

  /// from: static public final int MEDIAL
  ///
  ///
  static const MEDIAL = 9;

  /// from: static public final int NARROW
  ///
  ///
  static const NARROW = 10;

  /// from: static public final int NOBREAK
  ///
  ///
  static const NOBREAK = 11;

  /// from: static public final int NONE
  ///
  ///
  static const NONE = 0;

  /// from: static public final int SMALL
  ///
  ///
  static const SMALL = 12;

  /// from: static public final int SQUARE
  ///
  ///
  static const SQUARE = 13;

  /// from: static public final int SUB
  ///
  ///
  static const SUB = 14;

  /// from: static public final int SUPER
  ///
  ///
  static const SUPER = 15;

  /// from: static public final int VERTICAL
  ///
  ///
  static const VERTICAL = 16;

  /// from: static public final int WIDE
  ///
  ///
  static const WIDE = 17;
}

/// from: android.icu.lang.UCharacter$BidiPairedBracketType
///
/// Bidi Paired Bracket Type constants.
///@see UProperty\#BIDI_PAIRED_BRACKET_TYPE
class UCharacter_BidiPairedBracketType extends jni.JniObject {
  static final _classRef = jniAccessors
      .getClassOf("android/icu/lang/UCharacter\$BidiPairedBracketType");
  UCharacter_BidiPairedBracketType.fromRef(jni.JObject ref)
      : super.fromRef(ref);

  /// from: static public final int CLOSE
  ///
  /// Close paired bracket.
  static const CLOSE = 2;

  /// from: static public final int NONE
  ///
  /// Not a paired bracket.
  static const NONE = 0;

  /// from: static public final int OPEN
  ///
  /// Open paired bracket.
  static const OPEN = 1;
}
