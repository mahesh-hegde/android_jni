// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.icu.lang.UCharacterDirection
///
/// Enumerated Unicode character linguistic direction constants.
/// Used as return results from <a href=UCharacter.html>UCharacter</a>
///
/// This class is not subclassable
///
///
///@author Syn Wee Quek
class UCharacterDirection extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/icu/lang/UCharacterDirection");
  UCharacterDirection.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Private constructor to prevent initialisation
  UCharacterDirection()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_toString1 = jniAccessors.getStaticMethodIDOf(
      _classRef, "toString", "(I)Ljava/lang/String;");

  /// from: static public java.lang.String toString(int dir)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Gets the name of the argument direction
  ///@param dir direction type to retrieve name
  ///@return directional name
  static jni.JniString toString1(int dir) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_toString1, jni.JniType.objectType, [dir]).object);
}
