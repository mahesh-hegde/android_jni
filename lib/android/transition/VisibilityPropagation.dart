// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "TransitionPropagation.dart" as transitionpropagation_;

import "TransitionValues.dart" as transitionvalues_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.transition.VisibilityPropagation
///
/// Base class for <code>TransitionPropagation</code>s that care about
/// View Visibility and the center position of the View.
class VisibilityPropagation
    extends transitionpropagation_.TransitionPropagation {
  static final _classRef =
      jniAccessors.getClassOf("android/transition/VisibilityPropagation");
  VisibilityPropagation.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: public void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  VisibilityPropagation()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_captureValues = jniAccessors.getMethodIDOf(
      _classRef, "captureValues", "(Landroid/transition/TransitionValues;)V");

  /// from: public void captureValues(android.transition.TransitionValues values)
  void captureValues(transitionvalues_.TransitionValues values) =>
      jniAccessors.callMethodWithArgs(reference, _id_captureValues,
          jni.JniType.voidType, [values.reference]).check();

  static final _id_getPropagationProperties = jniAccessors.getMethodIDOf(
      _classRef, "getPropagationProperties", "()[Ljava/lang/String;");

  /// from: public java.lang.String[] getPropagationProperties()
  /// The returned object must be deleted after use, by calling the `delete` method.
  jni.JniObject getPropagationProperties() =>
      jni.JniObject.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_getPropagationProperties, jni.JniType.objectType, []).object);

  static final _id_getViewVisibility = jniAccessors.getMethodIDOf(_classRef,
      "getViewVisibility", "(Landroid/transition/TransitionValues;)I");

  /// from: public int getViewVisibility(android.transition.TransitionValues values)
  ///
  /// Returns android.view.View\#getVisibility() for the View at the time the values
  /// were captured.
  ///@param values The TransitionValues captured at the start or end of the Transition.
  ///@return android.view.View\#getVisibility() for the View at the time the values
  /// were captured.
  int getViewVisibility(transitionvalues_.TransitionValues values) =>
      jniAccessors.callMethodWithArgs(reference, _id_getViewVisibility,
          jni.JniType.intType, [values.reference]).integer;

  static final _id_getViewX = jniAccessors.getMethodIDOf(
      _classRef, "getViewX", "(Landroid/transition/TransitionValues;)I");

  /// from: public int getViewX(android.transition.TransitionValues values)
  ///
  /// Returns the View's center x coordinate, relative to the screen, at the time the values
  /// were captured.
  ///@param values The TransitionValues captured at the start or end of the Transition.
  ///@return the View's center x coordinate, relative to the screen, at the time the values
  /// were captured.
  int getViewX(transitionvalues_.TransitionValues values) =>
      jniAccessors.callMethodWithArgs(reference, _id_getViewX,
          jni.JniType.intType, [values.reference]).integer;

  static final _id_getViewY = jniAccessors.getMethodIDOf(
      _classRef, "getViewY", "(Landroid/transition/TransitionValues;)I");

  /// from: public int getViewY(android.transition.TransitionValues values)
  ///
  /// Returns the View's center y coordinate, relative to the screen, at the time the values
  /// were captured.
  ///@param values The TransitionValues captured at the start or end of the Transition.
  ///@return the View's center y coordinate, relative to the screen, at the time the values
  /// were captured.
  int getViewY(transitionvalues_.TransitionValues values) =>
      jniAccessors.callMethodWithArgs(reference, _id_getViewY,
          jni.JniType.intType, [values.reference]).integer;
}
