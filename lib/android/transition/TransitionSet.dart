// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "Transition.dart" as transition_;

import "../content/Context.dart" as context_;

import "../util/AttributeSet.dart" as attributeset_;

import "../animation/TimeInterpolator.dart" as timeinterpolator_;

import "../view/View.dart" as view_;

import "PathMotion.dart" as pathmotion_;

import "TransitionValues.dart" as transitionvalues_;

import "TransitionPropagation.dart" as transitionpropagation_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.transition.TransitionSet
///
/// A TransitionSet is a parent of child transitions (including other
/// TransitionSets). Using TransitionSets enables more complex
/// choreography of transitions, where some sets play \#ORDERING_TOGETHER and
/// others play \#ORDERING_SEQUENTIAL. For example, AutoTransition
/// uses a TransitionSet to sequentially play a Fade(Fade.OUT), followed by
/// a ChangeBounds, followed by a Fade(Fade.OUT) transition.
///
/// A TransitionSet can be described in a resource file by using the
/// tag <code>transitionSet</code>, along with the standard
/// attributes of android.R.styleable\#TransitionSet and
/// android.R.styleable\#Transition. Child transitions of the
/// TransitionSet object can be loaded by adding those child tags inside the
/// enclosing <code>transitionSet</code> tag. For example, the following xml
/// describes a TransitionSet that plays a Fade and then a ChangeBounds
/// transition on the affected view targets:
///
/// <pre>
///     &lt;transitionSet xmlns:android="http://schemas.android.com/apk/res/android"
///             android:transitionOrdering="sequential"&gt;
///         &lt;fade/&gt;
///         &lt;changeBounds/&gt;
///     &lt;/transitionSet&gt;
/// </pre>
class TransitionSet extends transition_.Transition {
  static final _classRef =
      jniAccessors.getClassOf("android/transition/TransitionSet");
  TransitionSet.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int ORDERING_SEQUENTIAL
  ///
  /// A flag used to indicate that the child transitions of this set should
  /// play in sequence; when one child transition ends, the next child
  /// transition begins. Note that a transition does not end until all
  /// instances of it (which are playing on all applicable targets of the
  /// transition) end.
  static const ORDERING_SEQUENTIAL = 1;

  /// from: static public final int ORDERING_TOGETHER
  ///
  /// A flag used to indicate that the child transitions of this set
  /// should all start at the same time.
  static const ORDERING_TOGETHER = 0;

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: public void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructs an empty transition set. Add child transitions to the
  /// set by calling \#addTransition(Transition) )}. By default,
  /// child transitions will play \#ORDERING_TOGETHER together.
  TransitionSet()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_ctor1 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/util/AttributeSet;)V");

  /// from: public void <init>(android.content.Context context, android.util.AttributeSet attrs)
  /// The returned object must be deleted after use, by calling the `delete` method.
  TransitionSet.ctor1(
      context_.Context context, attributeset_.AttributeSet attrs)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor1, [context.reference, attrs.reference]).object);

  static final _id_setOrdering = jniAccessors.getMethodIDOf(
      _classRef, "setOrdering", "(I)Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet setOrdering(int ordering)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Sets the play order of this set's child transitions.
  ///@param ordering \#ORDERING_TOGETHER to play this set's child
  /// transitions together, \#ORDERING_SEQUENTIAL to play the child
  /// transitions in sequence.
  ///@return This transitionSet object.
  TransitionSet setOrdering(int ordering) =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_setOrdering, jni.JniType.objectType, [ordering]).object);

  static final _id_getOrdering =
      jniAccessors.getMethodIDOf(_classRef, "getOrdering", "()I");

  /// from: public int getOrdering()
  ///
  /// Returns the ordering of this TransitionSet. By default, the value is
  /// \#ORDERING_TOGETHER.
  ///@return \#ORDERING_TOGETHER if child transitions will play at the same
  /// time, \#ORDERING_SEQUENTIAL if they will play in sequence.
  ///@see \#setOrdering(int)
  int getOrdering() => jniAccessors.callMethodWithArgs(
      reference, _id_getOrdering, jni.JniType.intType, []).integer;

  static final _id_addTransition = jniAccessors.getMethodIDOf(
      _classRef,
      "addTransition",
      "(Landroid/transition/Transition;)Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet addTransition(android.transition.Transition transition)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Adds child transition to this set. The order in which this child transition
  /// is added relative to other child transitions that are added, in addition to
  /// the \#getOrdering() ordering property, determines the
  /// order in which the transitions are started.
  ///
  /// If this transitionSet has a \#getDuration() duration set on it, the
  /// child transition will inherit that duration. Transitions are assumed to have
  /// a maximum of one transitionSet parent.
  ///
  ///@param transition A non-null child transition to be added to this set.
  ///@return This transitionSet object.
  TransitionSet addTransition(transition_.Transition transition) =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_addTransition,
          jni.JniType.objectType,
          [transition.reference]).object);

  static final _id_getTransitionCount =
      jniAccessors.getMethodIDOf(_classRef, "getTransitionCount", "()I");

  /// from: public int getTransitionCount()
  ///
  /// Returns the number of child transitions in the TransitionSet.
  ///@return The number of child transitions in the TransitionSet.
  ///@see \#addTransition(Transition)
  ///@see \#getTransitionAt(int)
  int getTransitionCount() => jniAccessors.callMethodWithArgs(
      reference, _id_getTransitionCount, jni.JniType.intType, []).integer;

  static final _id_getTransitionAt = jniAccessors.getMethodIDOf(
      _classRef, "getTransitionAt", "(I)Landroid/transition/Transition;");

  /// from: public android.transition.Transition getTransitionAt(int index)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the child Transition at the specified position in the TransitionSet.
  ///@param index The position of the Transition to retrieve.
  ///@see \#addTransition(Transition)
  ///@see \#getTransitionCount()
  transition_.Transition getTransitionAt(int index) =>
      transition_.Transition.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_getTransitionAt, jni.JniType.objectType, [index]).object);

  static final _id_setDuration1 = jniAccessors.getMethodIDOf(
      _classRef, "setDuration", "(J)Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet setDuration(long duration)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Setting a non-negative duration on a TransitionSet causes all of the child
  /// transitions (current and future) to inherit this duration.
  ///@param duration The length of the animation, in milliseconds.
  ///@return This transitionSet object.
  TransitionSet setDuration1(int duration) =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_setDuration1, jni.JniType.objectType, [duration]).object);

  static final _id_setStartDelay1 = jniAccessors.getMethodIDOf(
      _classRef, "setStartDelay", "(J)Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet setStartDelay(long startDelay)
  /// The returned object must be deleted after use, by calling the `delete` method.
  TransitionSet setStartDelay1(int startDelay) =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_setStartDelay1, jni.JniType.objectType, [startDelay]).object);

  static final _id_setInterpolator1 = jniAccessors.getMethodIDOf(
      _classRef,
      "setInterpolator",
      "(Landroid/animation/TimeInterpolator;)Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator interpolator)
  /// The returned object must be deleted after use, by calling the `delete` method.
  TransitionSet setInterpolator1(
          timeinterpolator_.TimeInterpolator interpolator) =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_setInterpolator1,
          jni.JniType.objectType,
          [interpolator.reference]).object);

  static final _id_addTarget4 = jniAccessors.getMethodIDOf(_classRef,
      "addTarget", "(Landroid/view/View;)Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet addTarget(android.view.View target)
  /// The returned object must be deleted after use, by calling the `delete` method.
  TransitionSet addTarget4(view_.View target) =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_addTarget4, jni.JniType.objectType, [target.reference]).object);

  static final _id_addTarget5 = jniAccessors.getMethodIDOf(
      _classRef, "addTarget", "(I)Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet addTarget(int targetId)
  /// The returned object must be deleted after use, by calling the `delete` method.
  TransitionSet addTarget5(int targetId) =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_addTarget5, jni.JniType.objectType, [targetId]).object);

  static final _id_addTarget6 = jniAccessors.getMethodIDOf(_classRef,
      "addTarget", "(Ljava/lang/String;)Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet addTarget(java.lang.String targetName)
  /// The returned object must be deleted after use, by calling the `delete` method.
  TransitionSet addTarget6(jni.JniString targetName) =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_addTarget6,
          jni.JniType.objectType,
          [targetName.reference]).object);

  static final _id_addTarget7 = jniAccessors.getMethodIDOf(_classRef,
      "addTarget", "(Ljava/lang/Class;)Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet addTarget(java.lang.Class targetType)
  /// The returned object must be deleted after use, by calling the `delete` method.
  TransitionSet addTarget7(jni.JniObject targetType) =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_addTarget7,
          jni.JniType.objectType,
          [targetType.reference]).object);

  static final _id_addListener1 = jniAccessors.getMethodIDOf(
      _classRef,
      "addListener",
      "(Landroid/transition/Transition\$TransitionListener;)Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet addListener(android.transition.Transition.TransitionListener listener)
  /// The returned object must be deleted after use, by calling the `delete` method.
  TransitionSet addListener1(
          transition_.Transition_TransitionListener listener) =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_addListener1,
          jni.JniType.objectType,
          [listener.reference]).object);

  static final _id_removeTarget4 = jniAccessors.getMethodIDOf(
      _classRef, "removeTarget", "(I)Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet removeTarget(int targetId)
  /// The returned object must be deleted after use, by calling the `delete` method.
  TransitionSet removeTarget4(int targetId) =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_removeTarget4, jni.JniType.objectType, [targetId]).object);

  static final _id_removeTarget5 = jniAccessors.getMethodIDOf(
      _classRef,
      "removeTarget",
      "(Landroid/view/View;)Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet removeTarget(android.view.View target)
  /// The returned object must be deleted after use, by calling the `delete` method.
  TransitionSet removeTarget5(view_.View target) =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_removeTarget5,
          jni.JniType.objectType,
          [target.reference]).object);

  static final _id_removeTarget6 = jniAccessors.getMethodIDOf(_classRef,
      "removeTarget", "(Ljava/lang/Class;)Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet removeTarget(java.lang.Class target)
  /// The returned object must be deleted after use, by calling the `delete` method.
  TransitionSet removeTarget6(jni.JniObject target) =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_removeTarget6,
          jni.JniType.objectType,
          [target.reference]).object);

  static final _id_removeTarget7 = jniAccessors.getMethodIDOf(_classRef,
      "removeTarget", "(Ljava/lang/String;)Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet removeTarget(java.lang.String target)
  /// The returned object must be deleted after use, by calling the `delete` method.
  TransitionSet removeTarget7(jni.JniString target) =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_removeTarget7,
          jni.JniType.objectType,
          [target.reference]).object);

  static final _id_excludeTarget2 = jniAccessors.getMethodIDOf(_classRef,
      "excludeTarget", "(Landroid/view/View;Z)Landroid/transition/Transition;");

  /// from: public android.transition.Transition excludeTarget(android.view.View target, boolean exclude)
  /// The returned object must be deleted after use, by calling the `delete` method.
  transition_.Transition excludeTarget2(view_.View target, bool exclude) =>
      transition_.Transition.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_excludeTarget2,
          jni.JniType.objectType,
          [target.reference, exclude]).object);

  static final _id_excludeTarget1 = jniAccessors.getMethodIDOf(_classRef,
      "excludeTarget", "(Ljava/lang/String;Z)Landroid/transition/Transition;");

  /// from: public android.transition.Transition excludeTarget(java.lang.String targetName, boolean exclude)
  /// The returned object must be deleted after use, by calling the `delete` method.
  transition_.Transition excludeTarget1(
          jni.JniString targetName, bool exclude) =>
      transition_.Transition.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_excludeTarget1,
          jni.JniType.objectType,
          [targetName.reference, exclude]).object);

  static final _id_excludeTarget = jniAccessors.getMethodIDOf(
      _classRef, "excludeTarget", "(IZ)Landroid/transition/Transition;");

  /// from: public android.transition.Transition excludeTarget(int targetId, boolean exclude)
  /// The returned object must be deleted after use, by calling the `delete` method.
  transition_.Transition excludeTarget(int targetId, bool exclude) =>
      transition_.Transition.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_excludeTarget,
          jni.JniType.objectType,
          [targetId, exclude]).object);

  static final _id_excludeTarget3 = jniAccessors.getMethodIDOf(_classRef,
      "excludeTarget", "(Ljava/lang/Class;Z)Landroid/transition/Transition;");

  /// from: public android.transition.Transition excludeTarget(java.lang.Class type, boolean exclude)
  /// The returned object must be deleted after use, by calling the `delete` method.
  transition_.Transition excludeTarget3(jni.JniObject type, bool exclude) =>
      transition_.Transition.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_excludeTarget3,
          jni.JniType.objectType,
          [type.reference, exclude]).object);

  static final _id_removeListener1 = jniAccessors.getMethodIDOf(
      _classRef,
      "removeListener",
      "(Landroid/transition/Transition\$TransitionListener;)Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet removeListener(android.transition.Transition.TransitionListener listener)
  /// The returned object must be deleted after use, by calling the `delete` method.
  TransitionSet removeListener1(
          transition_.Transition_TransitionListener listener) =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_removeListener1,
          jni.JniType.objectType,
          [listener.reference]).object);

  static final _id_setPathMotion = jniAccessors.getMethodIDOf(
      _classRef, "setPathMotion", "(Landroid/transition/PathMotion;)V");

  /// from: public void setPathMotion(android.transition.PathMotion pathMotion)
  void setPathMotion(pathmotion_.PathMotion pathMotion) =>
      jniAccessors.callMethodWithArgs(reference, _id_setPathMotion,
          jni.JniType.voidType, [pathMotion.reference]).check();

  static final _id_removeTransition = jniAccessors.getMethodIDOf(
      _classRef,
      "removeTransition",
      "(Landroid/transition/Transition;)Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet removeTransition(android.transition.Transition transition)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Removes the specified child transition from this set.
  ///@param transition The transition to be removed.
  ///@return This transitionSet object.
  TransitionSet removeTransition(transition_.Transition transition) =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_removeTransition,
          jni.JniType.objectType,
          [transition.reference]).object);

  static final _id_captureStartValues = jniAccessors.getMethodIDOf(_classRef,
      "captureStartValues", "(Landroid/transition/TransitionValues;)V");

  /// from: public void captureStartValues(android.transition.TransitionValues transitionValues)
  void captureStartValues(
          transitionvalues_.TransitionValues transitionValues) =>
      jniAccessors.callMethodWithArgs(reference, _id_captureStartValues,
          jni.JniType.voidType, [transitionValues.reference]).check();

  static final _id_captureEndValues = jniAccessors.getMethodIDOf(_classRef,
      "captureEndValues", "(Landroid/transition/TransitionValues;)V");

  /// from: public void captureEndValues(android.transition.TransitionValues transitionValues)
  void captureEndValues(transitionvalues_.TransitionValues transitionValues) =>
      jniAccessors.callMethodWithArgs(reference, _id_captureEndValues,
          jni.JniType.voidType, [transitionValues.reference]).check();

  static final _id_setPropagation = jniAccessors.getMethodIDOf(_classRef,
      "setPropagation", "(Landroid/transition/TransitionPropagation;)V");

  /// from: public void setPropagation(android.transition.TransitionPropagation propagation)
  void setPropagation(
          transitionpropagation_.TransitionPropagation propagation) =>
      jniAccessors.callMethodWithArgs(reference, _id_setPropagation,
          jni.JniType.voidType, [propagation.reference]).check();

  static final _id_setEpicenterCallback = jniAccessors.getMethodIDOf(
      _classRef,
      "setEpicenterCallback",
      "(Landroid/transition/Transition\$EpicenterCallback;)V");

  /// from: public void setEpicenterCallback(android.transition.Transition.EpicenterCallback epicenterCallback)
  void setEpicenterCallback(
          transition_.Transition_EpicenterCallback epicenterCallback) =>
      jniAccessors.callMethodWithArgs(reference, _id_setEpicenterCallback,
          jni.JniType.voidType, [epicenterCallback.reference]).check();

  static final _id_clone1 = jniAccessors.getMethodIDOf(
      _classRef, "clone", "()Landroid/transition/TransitionSet;");

  /// from: public android.transition.TransitionSet clone()
  /// The returned object must be deleted after use, by calling the `delete` method.
  TransitionSet clone1() =>
      TransitionSet.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_clone1, jni.JniType.objectType, []).object);
}
