// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "Visibility.dart" as visibility_;

import "../content/Context.dart" as context_;

import "../util/AttributeSet.dart" as attributeset_;

import "TransitionValues.dart" as transitionvalues_;

import "../animation/Animator.dart" as animator_;

import "../view/ViewGroup.dart" as viewgroup_;

import "../view/View.dart" as view_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.transition.Explode
///
/// This transition tracks changes to the visibility of target views in the
/// start and end scenes and moves views in or out from the edges of the
/// scene. Visibility is determined by both the
/// View\#setVisibility(int) state of the view as well as whether it
/// is parented in the current view hierarchy. Disappearing Views are
/// limited as described in Visibility\#onDisappear(android.view.ViewGroup,
/// TransitionValues, int, TransitionValues, int).
/// Views move away from the focal View or the center of the Scene if
/// no epicenter was provided.
///
class Explode extends visibility_.Visibility {
  static final _classRef =
      jniAccessors.getClassOf("android/transition/Explode");
  Explode.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: public void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  Explode()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_ctor1 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/util/AttributeSet;)V");

  /// from: public void <init>(android.content.Context context, android.util.AttributeSet attrs)
  /// The returned object must be deleted after use, by calling the `delete` method.
  Explode.ctor1(context_.Context context, attributeset_.AttributeSet attrs)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor1, [context.reference, attrs.reference]).object);

  static final _id_captureStartValues = jniAccessors.getMethodIDOf(_classRef,
      "captureStartValues", "(Landroid/transition/TransitionValues;)V");

  /// from: public void captureStartValues(android.transition.TransitionValues transitionValues)
  void captureStartValues(
          transitionvalues_.TransitionValues transitionValues) =>
      jniAccessors.callMethodWithArgs(reference, _id_captureStartValues,
          jni.JniType.voidType, [transitionValues.reference]).check();

  static final _id_captureEndValues = jniAccessors.getMethodIDOf(_classRef,
      "captureEndValues", "(Landroid/transition/TransitionValues;)V");

  /// from: public void captureEndValues(android.transition.TransitionValues transitionValues)
  void captureEndValues(transitionvalues_.TransitionValues transitionValues) =>
      jniAccessors.callMethodWithArgs(reference, _id_captureEndValues,
          jni.JniType.voidType, [transitionValues.reference]).check();

  static final _id_onAppear1 = jniAccessors.getMethodIDOf(_classRef, "onAppear",
      "(Landroid/view/ViewGroup;Landroid/view/View;Landroid/transition/TransitionValues;Landroid/transition/TransitionValues;)Landroid/animation/Animator;");

  /// from: public android.animation.Animator onAppear(android.view.ViewGroup sceneRoot, android.view.View view, android.transition.TransitionValues startValues, android.transition.TransitionValues endValues)
  /// The returned object must be deleted after use, by calling the `delete` method.
  animator_.Animator onAppear1(
          viewgroup_.ViewGroup sceneRoot,
          view_.View view,
          transitionvalues_.TransitionValues startValues,
          transitionvalues_.TransitionValues endValues) =>
      animator_.Animator.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_onAppear1, jni.JniType.objectType, [
        sceneRoot.reference,
        view.reference,
        startValues.reference,
        endValues.reference
      ]).object);

  static final _id_onDisappear1 = jniAccessors.getMethodIDOf(
      _classRef,
      "onDisappear",
      "(Landroid/view/ViewGroup;Landroid/view/View;Landroid/transition/TransitionValues;Landroid/transition/TransitionValues;)Landroid/animation/Animator;");

  /// from: public android.animation.Animator onDisappear(android.view.ViewGroup sceneRoot, android.view.View view, android.transition.TransitionValues startValues, android.transition.TransitionValues endValues)
  /// The returned object must be deleted after use, by calling the `delete` method.
  animator_.Animator onDisappear1(
          viewgroup_.ViewGroup sceneRoot,
          view_.View view,
          transitionvalues_.TransitionValues startValues,
          transitionvalues_.TransitionValues endValues) =>
      animator_.Animator.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_onDisappear1, jni.JniType.objectType, [
        sceneRoot.reference,
        view.reference,
        startValues.reference,
        endValues.reference
      ]).object);
}
