// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "DialogPreference.dart" as dialogpreference_;

import "../content/Context.dart" as context_;

import "../util/AttributeSet.dart" as attributeset_;

import "../app/AlertDialog.dart" as alertdialog_;

import "../content/res/TypedArray.dart" as typedarray_;

import "../os/Parcelable.dart" as parcelable_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.preference.MultiSelectListPreference
///
/// A Preference that displays a list of entries as
/// a dialog.
///
/// This preference will store a set of strings into the SharedPreferences.
/// This set will contain one or more values from the
/// \#setEntryValues(CharSequence[]) array.
///@attr ref android.R.styleable\#MultiSelectListPreference_entries
///@attr ref android.R.styleable\#MultiSelectListPreference_entryValues
class MultiSelectListPreference extends dialogpreference_.DialogPreference {
  static final _classRef =
      jniAccessors.getClassOf("android/preference/MultiSelectListPreference");
  MultiSelectListPreference.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/util/AttributeSet;II)V");

  /// from: public void <init>(android.content.Context context, android.util.AttributeSet attrs, int defStyleAttr, int defStyleRes)
  /// The returned object must be deleted after use, by calling the `delete` method.
  MultiSelectListPreference(context_.Context context,
      attributeset_.AttributeSet attrs, int defStyleAttr, int defStyleRes)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor, [
          context.reference,
          attrs.reference,
          defStyleAttr,
          defStyleRes
        ]).object);

  static final _id_ctor1 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/util/AttributeSet;I)V");

  /// from: public void <init>(android.content.Context context, android.util.AttributeSet attrs, int defStyleAttr)
  /// The returned object must be deleted after use, by calling the `delete` method.
  MultiSelectListPreference.ctor1(context_.Context context,
      attributeset_.AttributeSet attrs, int defStyleAttr)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor1,
            [context.reference, attrs.reference, defStyleAttr]).object);

  static final _id_ctor2 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/util/AttributeSet;)V");

  /// from: public void <init>(android.content.Context context, android.util.AttributeSet attrs)
  /// The returned object must be deleted after use, by calling the `delete` method.
  MultiSelectListPreference.ctor2(
      context_.Context context, attributeset_.AttributeSet attrs)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor2, [context.reference, attrs.reference]).object);

  static final _id_ctor3 = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "(Landroid/content/Context;)V");

  /// from: public void <init>(android.content.Context context)
  /// The returned object must be deleted after use, by calling the `delete` method.
  MultiSelectListPreference.ctor3(context_.Context context)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor3, [context.reference]).object);

  static final _id_setEntries = jniAccessors.getMethodIDOf(
      _classRef, "setEntries", "([Ljava/lang/CharSequence;)V");

  /// from: public void setEntries(java.lang.CharSequence[] entries)
  ///
  /// Sets the human-readable entries to be shown in the list. This will be
  /// shown in subsequent dialogs.
  ///
  /// Each entry must have a corresponding index in
  /// \#setEntryValues(CharSequence[]).
  ///@param entries The entries.
  ///@see \#setEntryValues(CharSequence[])
  void setEntries(jni.JniObject entries) => jniAccessors.callMethodWithArgs(
      reference,
      _id_setEntries,
      jni.JniType.voidType,
      [entries.reference]).check();

  static final _id_setEntries1 =
      jniAccessors.getMethodIDOf(_classRef, "setEntries", "(I)V");

  /// from: public void setEntries(int entriesResId)
  ///
  /// @see \#setEntries(CharSequence[])
  ///@param entriesResId The entries array as a resource.
  void setEntries1(int entriesResId) => jniAccessors.callMethodWithArgs(
      reference, _id_setEntries1, jni.JniType.voidType, [entriesResId]).check();

  static final _id_getEntries = jniAccessors.getMethodIDOf(
      _classRef, "getEntries", "()[Ljava/lang/CharSequence;");

  /// from: public java.lang.CharSequence[] getEntries()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// The list of entries to be shown in the list in subsequent dialogs.
  ///@return The list as an array.
  jni.JniObject getEntries() =>
      jni.JniObject.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getEntries, jni.JniType.objectType, []).object);

  static final _id_setEntryValues = jniAccessors.getMethodIDOf(
      _classRef, "setEntryValues", "([Ljava/lang/CharSequence;)V");

  /// from: public void setEntryValues(java.lang.CharSequence[] entryValues)
  ///
  /// The array to find the value to save for a preference when an entry from
  /// entries is selected. If a user clicks on the second item in entries, the
  /// second item in this array will be saved to the preference.
  ///@param entryValues The array to be used as values to save for the preference.
  void setEntryValues(jni.JniObject entryValues) =>
      jniAccessors.callMethodWithArgs(reference, _id_setEntryValues,
          jni.JniType.voidType, [entryValues.reference]).check();

  static final _id_setEntryValues1 =
      jniAccessors.getMethodIDOf(_classRef, "setEntryValues", "(I)V");

  /// from: public void setEntryValues(int entryValuesResId)
  ///
  /// @see \#setEntryValues(CharSequence[])
  ///@param entryValuesResId The entry values array as a resource.
  void setEntryValues1(int entryValuesResId) => jniAccessors.callMethodWithArgs(
      reference,
      _id_setEntryValues1,
      jni.JniType.voidType,
      [entryValuesResId]).check();

  static final _id_getEntryValues = jniAccessors.getMethodIDOf(
      _classRef, "getEntryValues", "()[Ljava/lang/CharSequence;");

  /// from: public java.lang.CharSequence[] getEntryValues()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the array of values to be saved for the preference.
  ///@return The array of values.
  jni.JniObject getEntryValues() =>
      jni.JniObject.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getEntryValues, jni.JniType.objectType, []).object);

  static final _id_setValues =
      jniAccessors.getMethodIDOf(_classRef, "setValues", "(Ljava/util/Set;)V");

  /// from: public void setValues(java.util.Set<java.lang.String> values)
  ///
  /// Sets the value of the key. This should contain entries in
  /// \#getEntryValues().
  ///@param values The values to set for the key.
  void setValues(jni.JniObject values) => jniAccessors.callMethodWithArgs(
      reference,
      _id_setValues,
      jni.JniType.voidType,
      [values.reference]).check();

  static final _id_getValues =
      jniAccessors.getMethodIDOf(_classRef, "getValues", "()Ljava/util/Set;");

  /// from: public java.util.Set<java.lang.String> getValues()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Retrieves the current value of the key.
  jni.JniObject getValues() =>
      jni.JniObject.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getValues, jni.JniType.objectType, []).object);

  static final _id_findIndexOfValue = jniAccessors.getMethodIDOf(
      _classRef, "findIndexOfValue", "(Ljava/lang/String;)I");

  /// from: public int findIndexOfValue(java.lang.String value)
  ///
  /// Returns the index of the given value (in the entry values array).
  ///@param value The value whose index should be returned.
  ///@return The index of the value, or -1 if not found.
  int findIndexOfValue(jni.JniString value) => jniAccessors.callMethodWithArgs(
      reference,
      _id_findIndexOfValue,
      jni.JniType.intType,
      [value.reference]).integer;

  static final _id_onPrepareDialogBuilder = jniAccessors.getMethodIDOf(
      _classRef,
      "onPrepareDialogBuilder",
      "(Landroid/app/AlertDialog\$Builder;)V");

  /// from: protected void onPrepareDialogBuilder(android.app.AlertDialog.Builder builder)
  void onPrepareDialogBuilder(alertdialog_.AlertDialog_Builder builder) =>
      jniAccessors.callMethodWithArgs(reference, _id_onPrepareDialogBuilder,
          jni.JniType.voidType, [builder.reference]).check();

  static final _id_onDialogClosed =
      jniAccessors.getMethodIDOf(_classRef, "onDialogClosed", "(Z)V");

  /// from: protected void onDialogClosed(boolean positiveResult)
  void onDialogClosed(bool positiveResult) => jniAccessors.callMethodWithArgs(
      reference,
      _id_onDialogClosed,
      jni.JniType.voidType,
      [positiveResult]).check();

  static final _id_onGetDefaultValue1 = jniAccessors.getMethodIDOf(
      _classRef,
      "onGetDefaultValue",
      "(Landroid/content/res/TypedArray;I)Ljava/lang/Object;");

  /// from: protected java.lang.Object onGetDefaultValue(android.content.res.TypedArray a, int index)
  /// The returned object must be deleted after use, by calling the `delete` method.
  jni.JniObject onGetDefaultValue1(typedarray_.TypedArray a, int index) =>
      jni.JniObject.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_onGetDefaultValue1,
          jni.JniType.objectType,
          [a.reference, index]).object);

  static final _id_onSetInitialValue1 = jniAccessors.getMethodIDOf(
      _classRef, "onSetInitialValue", "(ZLjava/lang/Object;)V");

  /// from: protected void onSetInitialValue(boolean restoreValue, java.lang.Object defaultValue)
  void onSetInitialValue1(bool restoreValue, jni.JniObject defaultValue) =>
      jniAccessors.callMethodWithArgs(reference, _id_onSetInitialValue1,
          jni.JniType.voidType, [restoreValue, defaultValue.reference]).check();

  static final _id_onSaveInstanceState = jniAccessors.getMethodIDOf(
      _classRef, "onSaveInstanceState", "()Landroid/os/Parcelable;");

  /// from: protected android.os.Parcelable onSaveInstanceState()
  /// The returned object must be deleted after use, by calling the `delete` method.
  parcelable_.Parcelable onSaveInstanceState() =>
      parcelable_.Parcelable.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_onSaveInstanceState, jni.JniType.objectType, []).object);
}
