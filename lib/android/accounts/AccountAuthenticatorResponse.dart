// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../os/Parcelable.dart" as parcelable_;

import "../os/Parcel.dart" as parcel_;

import "../os/Bundle.dart" as bundle_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.accounts.AccountAuthenticatorResponse
///
/// Object used to communicate responses back to the AccountManager
class AccountAuthenticatorResponse extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/accounts/AccountAuthenticatorResponse");
  AccountAuthenticatorResponse.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_CREATOR = jniAccessors.getStaticFieldIDOf(
      _classRef, "CREATOR", "Landroid/os/Parcelable\$Creator;");

  /// from: static public final android.os.Parcelable.Creator<android.accounts.AccountAuthenticatorResponse> CREATOR
  /// The returned object must be deleted after use, by calling the `delete` method.
  static parcelable_.Parcelable_Creator get CREATOR =>
      parcelable_.Parcelable_Creator.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CREATOR, jni.JniType.objectType)
          .object);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(Landroid/os/Parcel;)V");

  /// from: public void <init>(android.os.Parcel parcel)
  /// The returned object must be deleted after use, by calling the `delete` method.
  AccountAuthenticatorResponse(parcel_.Parcel parcel)
      : super.fromRef(jniAccessors
            .newObjectWithArgs(_classRef, _id_ctor, [parcel.reference]).object);

  static final _id_onResult = jniAccessors.getMethodIDOf(
      _classRef, "onResult", "(Landroid/os/Bundle;)V");

  /// from: public void onResult(android.os.Bundle result)
  void onResult(bundle_.Bundle result) => jniAccessors.callMethodWithArgs(
      reference,
      _id_onResult,
      jni.JniType.voidType,
      [result.reference]).check();

  static final _id_onRequestContinued =
      jniAccessors.getMethodIDOf(_classRef, "onRequestContinued", "()V");

  /// from: public void onRequestContinued()
  void onRequestContinued() => jniAccessors.callMethodWithArgs(
      reference, _id_onRequestContinued, jni.JniType.voidType, []).check();

  static final _id_onError = jniAccessors.getMethodIDOf(
      _classRef, "onError", "(ILjava/lang/String;)V");

  /// from: public void onError(int errorCode, java.lang.String errorMessage)
  void onError(int errorCode, jni.JniString errorMessage) =>
      jniAccessors.callMethodWithArgs(reference, _id_onError,
          jni.JniType.voidType, [errorCode, errorMessage.reference]).check();

  static final _id_describeContents =
      jniAccessors.getMethodIDOf(_classRef, "describeContents", "()I");

  /// from: public int describeContents()
  int describeContents() => jniAccessors.callMethodWithArgs(
      reference, _id_describeContents, jni.JniType.intType, []).integer;

  static final _id_writeToParcel = jniAccessors.getMethodIDOf(
      _classRef, "writeToParcel", "(Landroid/os/Parcel;I)V");

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(parcel_.Parcel dest, int flags) =>
      jniAccessors.callMethodWithArgs(reference, _id_writeToParcel,
          jni.JniType.voidType, [dest.reference, flags]).check();
}
