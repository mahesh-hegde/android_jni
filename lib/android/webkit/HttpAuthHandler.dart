// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../os/Handler.dart" as handler_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.webkit.HttpAuthHandler
///
/// Represents a request for HTTP authentication. Instances of this class are
/// created by the WebView and passed to
/// WebViewClient\#onReceivedHttpAuthRequest. The host application must
/// call either \#proceed or \#cancel to set the WebView's
/// response to the request.
class HttpAuthHandler extends handler_.Handler {
  static final _classRef =
      jniAccessors.getClassOf("android/webkit/HttpAuthHandler");
  HttpAuthHandler.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_useHttpAuthUsernamePassword = jniAccessors.getMethodIDOf(
      _classRef, "useHttpAuthUsernamePassword", "()Z");

  /// from: public boolean useHttpAuthUsernamePassword()
  ///
  /// Gets whether the credentials stored for the current host (i.e. the host
  /// for which WebViewClient\#onReceivedHttpAuthRequest was called)
  /// are suitable for use. Credentials are not suitable if they have
  /// previously been rejected by the server for the current request.
  ///@return whether the credentials are suitable for use
  ///@see WebView\#getHttpAuthUsernamePassword
  bool useHttpAuthUsernamePassword() => jniAccessors.callMethodWithArgs(
      reference,
      _id_useHttpAuthUsernamePassword,
      jni.JniType.booleanType, []).boolean;

  static final _id_cancel =
      jniAccessors.getMethodIDOf(_classRef, "cancel", "()V");

  /// from: public void cancel()
  ///
  /// Instructs the WebView to cancel the authentication request.
  void cancel() => jniAccessors.callMethodWithArgs(
      reference, _id_cancel, jni.JniType.voidType, []).check();

  static final _id_proceed = jniAccessors.getMethodIDOf(
      _classRef, "proceed", "(Ljava/lang/String;Ljava/lang/String;)V");

  /// from: public void proceed(java.lang.String username, java.lang.String password)
  ///
  /// Instructs the WebView to proceed with the authentication with the given
  /// credentials. Credentials for use with this method can be retrieved from
  /// the WebView's store using WebView\#getHttpAuthUsernamePassword.
  void proceed(jni.JniString username, jni.JniString password) =>
      jniAccessors.callMethodWithArgs(
          reference,
          _id_proceed,
          jni.JniType.voidType,
          [username.reference, password.reference]).check();
}
