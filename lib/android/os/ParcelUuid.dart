// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "Parcelable.dart" as parcelable_;

import "Parcel.dart" as parcel_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.os.ParcelUuid
///
/// This class is a Parcelable wrapper around UUID which is an
/// immutable representation of a 128-bit universally unique
/// identifier.
class ParcelUuid extends jni.JniObject {
  static final _classRef = jniAccessors.getClassOf("android/os/ParcelUuid");
  ParcelUuid.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_CREATOR = jniAccessors.getStaticFieldIDOf(
      _classRef, "CREATOR", "Landroid/os/Parcelable\$Creator;");

  /// from: static public final android.os.Parcelable.Creator<android.os.ParcelUuid> CREATOR
  /// The returned object must be deleted after use, by calling the `delete` method.
  static parcelable_.Parcelable_Creator get CREATOR =>
      parcelable_.Parcelable_Creator.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CREATOR, jni.JniType.objectType)
          .object);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(Ljava/util/UUID;)V");

  /// from: public void <init>(java.util.UUID uuid)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructor creates a ParcelUuid instance from the
  /// given UUID.
  ///@param uuid UUID
  ParcelUuid(jni.JniObject uuid)
      : super.fromRef(jniAccessors
            .newObjectWithArgs(_classRef, _id_ctor, [uuid.reference]).object);

  static final _id_fromString = jniAccessors.getStaticMethodIDOf(
      _classRef, "fromString", "(Ljava/lang/String;)Landroid/os/ParcelUuid;");

  /// from: static public android.os.ParcelUuid fromString(java.lang.String uuid)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a new ParcelUuid from a string representation of UUID.
  ///@param uuid the UUID string to parse.
  ///@return a ParcelUuid instance.
  ///@throws NullPointerException if {@code uuid} is {@code null}.
  ///@throws IllegalArgumentException if {@code uuid} is not formatted correctly.
  static ParcelUuid fromString(jni.JniString uuid) =>
      ParcelUuid.fromRef(jniAccessors.callStaticMethodWithArgs(_classRef,
          _id_fromString, jni.JniType.objectType, [uuid.reference]).object);

  static final _id_getUuid =
      jniAccessors.getMethodIDOf(_classRef, "getUuid", "()Ljava/util/UUID;");

  /// from: public java.util.UUID getUuid()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get the UUID represented by the ParcelUuid.
  ///@return UUID contained in the ParcelUuid.
  jni.JniObject getUuid() =>
      jni.JniObject.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getUuid, jni.JniType.objectType, []).object);

  static final _id_toString1 =
      jniAccessors.getMethodIDOf(_classRef, "toString", "()Ljava/lang/String;");

  /// from: public java.lang.String toString()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns a string representation of the ParcelUuid
  /// For example: 0000110B-0000-1000-8000-00805F9B34FB will be the return value.
  ///@return a String instance.
  jni.JniString toString1() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_toString1, jni.JniType.objectType, []).object);

  static final _id_hashCode1 =
      jniAccessors.getMethodIDOf(_classRef, "hashCode", "()I");

  /// from: public int hashCode()
  int hashCode1() => jniAccessors.callMethodWithArgs(
      reference, _id_hashCode1, jni.JniType.intType, []).integer;

  static final _id_equals1 =
      jniAccessors.getMethodIDOf(_classRef, "equals", "(Ljava/lang/Object;)Z");

  /// from: public boolean equals(java.lang.Object object)
  ///
  /// Compares this ParcelUuid to another object for equality. If {@code object}
  /// is not {@code null}, is a ParcelUuid instance, and all bits are equal, then
  /// {@code true} is returned.
  ///@param object the {@code Object} to compare to.
  ///@return {@code true} if this ParcelUuid is equal to {@code object}
  ///         or {@code false} if not.
  bool equals1(jni.JniObject object) => jniAccessors.callMethodWithArgs(
      reference,
      _id_equals1,
      jni.JniType.booleanType,
      [object.reference]).boolean;

  static final _id_describeContents =
      jniAccessors.getMethodIDOf(_classRef, "describeContents", "()I");

  /// from: public int describeContents()
  int describeContents() => jniAccessors.callMethodWithArgs(
      reference, _id_describeContents, jni.JniType.intType, []).integer;

  static final _id_writeToParcel = jniAccessors.getMethodIDOf(
      _classRef, "writeToParcel", "(Landroid/os/Parcel;I)V");

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  void writeToParcel(parcel_.Parcel dest, int flags) =>
      jniAccessors.callMethodWithArgs(reference, _id_writeToParcel,
          jni.JniType.voidType, [dest.reference, flags]).check();
}
