// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.os.health.ProcessHealthStats
///
/// Keys for HealthStats returned from
/// HealthStats\#getStats(int) HealthStats.getStats(int) with the
/// UidHealthStats\#STATS_PROCESSES UidHealthStats.STATS_PROCESSES key.
class ProcessHealthStats extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/os/health/ProcessHealthStats");
  ProcessHealthStats.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int MEASUREMENT_ANR_COUNT
  ///
  /// Key for a measurement of the number of ANRs that happened in this process.
  static const MEASUREMENT_ANR_COUNT = 30005;

  /// from: static public final int MEASUREMENT_CRASHES_COUNT
  ///
  /// Key for a measurement of the number of crashes that happened in this process.
  static const MEASUREMENT_CRASHES_COUNT = 30004;

  /// from: static public final int MEASUREMENT_FOREGROUND_MS
  ///
  /// Key for a measurement of the number of milliseconds this process spent with
  /// an activity in the foreground.
  static const MEASUREMENT_FOREGROUND_MS = 30006;

  /// from: static public final int MEASUREMENT_STARTS_COUNT
  ///
  /// Key for a measurement of the number of times this process was started for any reason.
  static const MEASUREMENT_STARTS_COUNT = 30003;

  /// from: static public final int MEASUREMENT_SYSTEM_TIME_MS
  ///
  /// Key for a measurement of number of millseconds the CPU spent running in kernel space
  /// for this process.
  static const MEASUREMENT_SYSTEM_TIME_MS = 30002;

  /// from: static public final int MEASUREMENT_USER_TIME_MS
  ///
  /// Key for a measurement of number of millseconds the CPU spent running in user space
  /// for this process.
  static const MEASUREMENT_USER_TIME_MS = 30001;

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ProcessHealthStats()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);
}
