// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "Parcelable.dart" as parcelable_;

import "Parcel.dart" as parcel_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.os.LocaleList
///
/// LocaleList is an immutable list of Locales, typically used to keep an ordered list of user
/// preferences for locales.
class LocaleList extends jni.JniObject {
  static final _classRef = jniAccessors.getClassOf("android/os/LocaleList");
  LocaleList.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_CREATOR = jniAccessors.getStaticFieldIDOf(
      _classRef, "CREATOR", "Landroid/os/Parcelable\$Creator;");

  /// from: static public final android.os.Parcelable.Creator<android.os.LocaleList> CREATOR
  /// The returned object must be deleted after use, by calling the `delete` method.
  static parcelable_.Parcelable_Creator get CREATOR =>
      parcelable_.Parcelable_Creator.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CREATOR, jni.JniType.objectType)
          .object);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "([Ljava/util/Locale;)V");

  /// from: public void <init>(java.util.Locale[] list)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a new LocaleList.
  ///
  /// For empty lists of Locale items it is better to use \#getEmptyLocaleList(),
  /// which returns a pre-constructed empty list.
  ///
  ///@throws NullPointerException if any of the input locales is <code>null</code>.
  ///@throws IllegalArgumentException if any of the input locales repeat.
  ///@param list This value must never be {@code null}.
  LocaleList(jni.JniObject list)
      : super.fromRef(jniAccessors
            .newObjectWithArgs(_classRef, _id_ctor, [list.reference]).object);

  static final _id_get0 =
      jniAccessors.getMethodIDOf(_classRef, "get", "(I)Ljava/util/Locale;");

  /// from: public java.util.Locale get(int index)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Retrieves the Locale at the specified index.
  ///@param index The position to retrieve.
  ///@return The Locale in the given index.
  jni.JniObject get0(int index) =>
      jni.JniObject.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_get0, jni.JniType.objectType, [index]).object);

  static final _id_isEmpty =
      jniAccessors.getMethodIDOf(_classRef, "isEmpty", "()Z");

  /// from: public boolean isEmpty()
  ///
  /// Returns whether the LocaleList contains no Locale items.
  ///@return {@code true} if this LocaleList has no Locale items, {@code false}
  ///     otherwise.
  bool isEmpty() => jniAccessors.callMethodWithArgs(
      reference, _id_isEmpty, jni.JniType.booleanType, []).boolean;

  static final _id_size = jniAccessors.getMethodIDOf(_classRef, "size", "()I");

  /// from: public int size()
  ///
  /// Returns the number of Locale items in this LocaleList.
  ///@return Value is 0 or greater
  int size() => jniAccessors
      .callMethodWithArgs(reference, _id_size, jni.JniType.intType, []).integer;

  static final _id_indexOf =
      jniAccessors.getMethodIDOf(_classRef, "indexOf", "(Ljava/util/Locale;)I");

  /// from: public int indexOf(java.util.Locale locale)
  ///
  /// Searches this LocaleList for the specified Locale and returns the index of
  /// the first occurrence.
  ///@param locale The Locale to search for.
  ///@return The index of the first occurrence of the Locale or {@code -1} if the item
  ///     wasn't found.
  ///
  /// Value is -1 or greater
  int indexOf(jni.JniObject locale) => jniAccessors.callMethodWithArgs(
      reference, _id_indexOf, jni.JniType.intType, [locale.reference]).integer;

  static final _id_equals1 =
      jniAccessors.getMethodIDOf(_classRef, "equals", "(Ljava/lang/Object;)Z");

  /// from: public boolean equals(java.lang.Object other)
  bool equals1(jni.JniObject other) => jniAccessors.callMethodWithArgs(
      reference,
      _id_equals1,
      jni.JniType.booleanType,
      [other.reference]).boolean;

  static final _id_hashCode1 =
      jniAccessors.getMethodIDOf(_classRef, "hashCode", "()I");

  /// from: public int hashCode()
  int hashCode1() => jniAccessors.callMethodWithArgs(
      reference, _id_hashCode1, jni.JniType.intType, []).integer;

  static final _id_toString1 =
      jniAccessors.getMethodIDOf(_classRef, "toString", "()Ljava/lang/String;");

  /// from: public java.lang.String toString()
  /// The returned object must be deleted after use, by calling the `delete` method.
  jni.JniString toString1() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_toString1, jni.JniType.objectType, []).object);

  static final _id_describeContents =
      jniAccessors.getMethodIDOf(_classRef, "describeContents", "()I");

  /// from: public int describeContents()
  int describeContents() => jniAccessors.callMethodWithArgs(
      reference, _id_describeContents, jni.JniType.intType, []).integer;

  static final _id_writeToParcel = jniAccessors.getMethodIDOf(
      _classRef, "writeToParcel", "(Landroid/os/Parcel;I)V");

  /// from: public void writeToParcel(android.os.Parcel dest, int parcelableFlags)
  void writeToParcel(parcel_.Parcel dest, int parcelableFlags) =>
      jniAccessors.callMethodWithArgs(reference, _id_writeToParcel,
          jni.JniType.voidType, [dest.reference, parcelableFlags]).check();

  static final _id_toLanguageTags = jniAccessors.getMethodIDOf(
      _classRef, "toLanguageTags", "()Ljava/lang/String;");

  /// from: public java.lang.String toLanguageTags()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Retrieves a String representation of the language tags in this list.
  ///@return This value will never be {@code null}.
  jni.JniString toLanguageTags() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_toLanguageTags, jni.JniType.objectType, []).object);

  static final _id_getEmptyLocaleList = jniAccessors.getStaticMethodIDOf(
      _classRef, "getEmptyLocaleList", "()Landroid/os/LocaleList;");

  /// from: static public android.os.LocaleList getEmptyLocaleList()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Retrieve an empty instance of LocaleList.
  ///@return This value will never be {@code null}.
  static LocaleList getEmptyLocaleList() =>
      LocaleList.fromRef(jniAccessors.callStaticMethodWithArgs(_classRef,
          _id_getEmptyLocaleList, jni.JniType.objectType, []).object);

  static final _id_forLanguageTags = jniAccessors.getStaticMethodIDOf(_classRef,
      "forLanguageTags", "(Ljava/lang/String;)Landroid/os/LocaleList;");

  /// from: static public android.os.LocaleList forLanguageTags(java.lang.String list)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Generates a new LocaleList with the given language tags.
  ///@param list The language tags to be included as a single String separated by commas.
  /// This value may be {@code null}.
  ///@return A new instance with the Locale items identified by the given tags.
  ///
  /// This value will never be {@code null}.
  static LocaleList forLanguageTags(jni.JniString list) =>
      LocaleList.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_forLanguageTags,
          jni.JniType.objectType,
          [list.reference]).object);

  static final _id_getFirstMatch = jniAccessors.getMethodIDOf(
      _classRef, "getFirstMatch", "([Ljava/lang/String;)Ljava/util/Locale;");

  /// from: public java.util.Locale getFirstMatch(java.lang.String[] supportedLocales)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the first match in the locale list given an unordered array of supported locales
  /// in BCP 47 format.
  ///@return The first Locale from this list that appears in the given array, or
  ///     {@code null} if the LocaleList is empty.
  jni.JniObject getFirstMatch(jni.JniObject supportedLocales) =>
      jni.JniObject.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_getFirstMatch,
          jni.JniType.objectType,
          [supportedLocales.reference]).object);

  static final _id_getDefault = jniAccessors.getStaticMethodIDOf(
      _classRef, "getDefault", "()Landroid/os/LocaleList;");

  /// from: static public android.os.LocaleList getDefault()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// The result is guaranteed to include the default Locale returned by Locale.getDefault(), but
  /// not necessarily at the top of the list. The default locale not being at the top of the list
  /// is an indication that the system has set the default locale to one of the user's other
  /// preferred locales, having concluded that the primary preference is not supported but a
  /// secondary preference is.
  ///
  /// Note that the default LocaleList would change if Locale.setDefault() is called. This
  /// method takes that into account by always checking the output of Locale.getDefault() and
  /// recalculating the default LocaleList if needed.
  ///
  ///@return This value will never be {@code null}.
  static LocaleList getDefault() =>
      LocaleList.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_getDefault, jni.JniType.objectType, []).object);

  static final _id_getAdjustedDefault = jniAccessors.getStaticMethodIDOf(
      _classRef, "getAdjustedDefault", "()Landroid/os/LocaleList;");

  /// from: static public android.os.LocaleList getAdjustedDefault()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the default locale list, adjusted by moving the default locale to its first
  /// position.
  ///@return This value will never be {@code null}.
  static LocaleList getAdjustedDefault() =>
      LocaleList.fromRef(jniAccessors.callStaticMethodWithArgs(_classRef,
          _id_getAdjustedDefault, jni.JniType.objectType, []).object);

  static final _id_setDefault = jniAccessors.getStaticMethodIDOf(
      _classRef, "setDefault", "(Landroid/os/LocaleList;)V");

  /// from: static public void setDefault(android.os.LocaleList locales)
  ///
  /// Also sets the default locale by calling Locale.setDefault() with the first locale in the
  /// list.
  ///@throws NullPointerException if the input is <code>null</code>.
  ///@throws IllegalArgumentException if the input is empty.
  ///@param locales This value must never be {@code null}.
  static void setDefault(LocaleList locales) =>
      jniAccessors.callStaticMethodWithArgs(_classRef, _id_setDefault,
          jni.JniType.voidType, [locales.reference]).check();
}
