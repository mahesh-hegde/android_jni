// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../print/PrintDocumentInfo.dart" as printdocumentinfo_;

import "../os/ParcelFileDescriptor.dart" as parcelfiledescriptor_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.printservice.PrintDocument
///
/// This class represents a printed document from the perspective of a print
/// service. It exposes APIs to query the document and obtain its data.
///
/// <strong>Note: </strong> All methods of this class must be executed on the
/// main application thread.
///
///
class PrintDocument extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/printservice/PrintDocument");
  PrintDocument.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  PrintDocument()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_getInfo = jniAccessors.getMethodIDOf(
      _classRef, "getInfo", "()Landroid/print/PrintDocumentInfo;");

  /// from: public android.print.PrintDocumentInfo getInfo()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Gets the PrintDocumentInfo that describes this document.
  ///@return The document info.
  ///
  /// This value will never be {@code null}.
  printdocumentinfo_.PrintDocumentInfo getInfo() =>
      printdocumentinfo_.PrintDocumentInfo.fromRef(jniAccessors
          .callMethodWithArgs(
              reference, _id_getInfo, jni.JniType.objectType, []).object);

  static final _id_getData = jniAccessors.getMethodIDOf(
      _classRef, "getData", "()Landroid/os/ParcelFileDescriptor;");

  /// from: public android.os.ParcelFileDescriptor getData()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Gets the data associated with this document.
  ///
  /// <strong>Note: </strong> It is a responsibility of the client to open a
  /// stream to the returned file descriptor, fully read the data, and close
  /// the file descriptor.
  ///
  ///
  ///@return A file descriptor for reading the data.
  ///
  /// This value may be {@code null}.
  parcelfiledescriptor_.ParcelFileDescriptor getData() =>
      parcelfiledescriptor_.ParcelFileDescriptor.fromRef(jniAccessors
          .callMethodWithArgs(
              reference, _id_getData, jni.JniType.objectType, []).object);
}
