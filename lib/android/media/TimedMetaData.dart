// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.media.TimedMetaData
///
/// Class that embodies one timed metadata access unit, including
///
/// <ul>
/// <li> a time stamp, and </li>
/// <li> raw uninterpreted byte-array extracted directly from the container. </li>
/// </ul>
///@see MediaPlayer\#setOnTimedMetaDataAvailableListener(android.media.MediaPlayer.OnTimedMetaDataListener)
class TimedMetaData extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/media/TimedMetaData");
  TimedMetaData.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_getTimestamp =
      jniAccessors.getMethodIDOf(_classRef, "getTimestamp", "()J");

  /// from: public long getTimestamp()
  ///
  /// @return the timestamp associated with this metadata access unit in microseconds;
  /// 0 denotes playback start.
  int getTimestamp() => jniAccessors.callMethodWithArgs(
      reference, _id_getTimestamp, jni.JniType.longType, []).long;

  static final _id_getMetaData =
      jniAccessors.getMethodIDOf(_classRef, "getMetaData", "()[B");

  /// from: public byte[] getMetaData()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// @return raw, uninterpreted content of this metadata access unit; for ID3 tags this includes
  /// everything starting from the 3 byte signature "ID3".
  jni.JniObject getMetaData() =>
      jni.JniObject.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getMetaData, jni.JniType.objectType, []).object);
}
