// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.media.MediaCasException
///
/// Base class for MediaCas exceptions
class MediaCasException extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/media/MediaCasException");
  MediaCasException.fromRef(jni.JObject ref) : super.fromRef(ref);
}

/// from: android.media.MediaCasException$UnsupportedCasException
///
/// Exception thrown when an attempt is made to construct a MediaCas object
/// using a CA_system_id that is not supported by the device
class MediaCasException_UnsupportedCasException extends MediaCasException {
  static final _classRef = jniAccessors
      .getClassOf("android/media/MediaCasException\$UnsupportedCasException");
  MediaCasException_UnsupportedCasException.fromRef(jni.JObject ref)
      : super.fromRef(ref);
}

/// from: android.media.MediaCasException$ResourceBusyException
///
/// Exception thrown when an operation on a MediaCas object is attempted
/// and hardware resources are not available, due to being in use.
class MediaCasException_ResourceBusyException extends MediaCasException {
  static final _classRef = jniAccessors
      .getClassOf("android/media/MediaCasException\$ResourceBusyException");
  MediaCasException_ResourceBusyException.fromRef(jni.JObject ref)
      : super.fromRef(ref);
}

/// from: android.media.MediaCasException$NotProvisionedException
///
/// Exception thrown when an operation on a MediaCas object is attempted
/// before it's provisioned successfully.
class MediaCasException_NotProvisionedException extends MediaCasException {
  static final _classRef = jniAccessors
      .getClassOf("android/media/MediaCasException\$NotProvisionedException");
  MediaCasException_NotProvisionedException.fromRef(jni.JObject ref)
      : super.fromRef(ref);
}

/// from: android.media.MediaCasException$DeniedByServerException
///
/// Exception thrown when the provisioning server or key server denies a
/// license for a device.
class MediaCasException_DeniedByServerException extends MediaCasException {
  static final _classRef = jniAccessors
      .getClassOf("android/media/MediaCasException\$DeniedByServerException");
  MediaCasException_DeniedByServerException.fromRef(jni.JObject ref)
      : super.fromRef(ref);
}
