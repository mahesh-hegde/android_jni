// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.media.AudioDeviceCallback
///
/// AudioDeviceCallback defines the mechanism by which applications can receive notifications
/// of audio device connection and disconnection events.
///@see AudioManager\#registerAudioDeviceCallback(AudioDeviceCallback, android.os.Handler handler).
class AudioDeviceCallback extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/media/AudioDeviceCallback");
  AudioDeviceCallback.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: public void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  AudioDeviceCallback()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_onAudioDevicesAdded = jniAccessors.getMethodIDOf(
      _classRef, "onAudioDevicesAdded", "([Landroid/media/AudioDeviceInfo;)V");

  /// from: public void onAudioDevicesAdded(android.media.AudioDeviceInfo[] addedDevices)
  ///
  /// Called by the AudioManager to indicate that one or more audio devices have been
  /// connected.
  ///@param addedDevices An array of AudioDeviceInfo objects corresponding to any
  /// newly added audio devices.
  void onAudioDevicesAdded(jni.JniObject addedDevices) =>
      jniAccessors.callMethodWithArgs(reference, _id_onAudioDevicesAdded,
          jni.JniType.voidType, [addedDevices.reference]).check();

  static final _id_onAudioDevicesRemoved = jniAccessors.getMethodIDOf(_classRef,
      "onAudioDevicesRemoved", "([Landroid/media/AudioDeviceInfo;)V");

  /// from: public void onAudioDevicesRemoved(android.media.AudioDeviceInfo[] removedDevices)
  ///
  /// Called by the AudioManager to indicate that one or more audio devices have been
  /// disconnected.
  ///@param removedDevices An array of AudioDeviceInfo objects corresponding to any
  /// newly removed audio devices.
  void onAudioDevicesRemoved(jni.JniObject removedDevices) =>
      jniAccessors.callMethodWithArgs(reference, _id_onAudioDevicesRemoved,
          jni.JniType.voidType, [removedDevices.reference]).check();
}
