// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.media.CameraProfile
///
/// The CameraProfile class is used to retrieve the pre-defined still image
/// capture (jpeg) quality levels (0-100) used for low, medium, and high
/// quality settings in the Camera application.
class CameraProfile extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/media/CameraProfile");
  CameraProfile.fromRef(jni.JObject ref) : super.fromRef(ref);

  /// from: static public final int QUALITY_HIGH
  static const QUALITY_HIGH = 2;

  /// from: static public final int QUALITY_LOW
  ///
  /// Define three quality levels for JPEG image encoding.
  static const QUALITY_LOW = 0;

  /// from: static public final int QUALITY_MEDIUM
  static const QUALITY_MEDIUM = 1;

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: public void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  CameraProfile()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_getJpegEncodingQualityParameter =
      jniAccessors.getStaticMethodIDOf(
          _classRef, "getJpegEncodingQualityParameter", "(I)I");

  /// from: static public int getJpegEncodingQualityParameter(int quality)
  ///
  /// Returns a pre-defined still image capture (jpeg) quality level
  /// used for the given quality level in the Camera application for
  /// the first back-facing camera on the device. If the device has no
  /// back-facing camera, this returns 0.
  ///@param quality The target quality level
  static int getJpegEncodingQualityParameter(int quality) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_getJpegEncodingQualityParameter,
          jni.JniType.intType,
          [quality]).integer;

  static final _id_getJpegEncodingQualityParameter1 =
      jniAccessors.getStaticMethodIDOf(
          _classRef, "getJpegEncodingQualityParameter", "(II)I");

  /// from: static public int getJpegEncodingQualityParameter(int cameraId, int quality)
  ///
  /// Returns a pre-defined still image capture (jpeg) quality level
  /// used for the given quality level in the Camera application for
  /// the specified camera.
  ///@param cameraId The id of the camera
  ///@param quality The target quality level
  static int getJpegEncodingQualityParameter1(int cameraId, int quality) =>
      jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_getJpegEncodingQualityParameter1,
          jni.JniType.intType,
          [cameraId, quality]).integer;
}
