// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.database.sqlite.SQLiteTransactionListener
///
/// A listener for transaction events.
class SQLiteTransactionListener extends jni.JniObject {
  static final _classRef = jniAccessors
      .getClassOf("android/database/sqlite/SQLiteTransactionListener");
  SQLiteTransactionListener.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_onBegin =
      jniAccessors.getMethodIDOf(_classRef, "onBegin", "()V");

  /// from: public abstract void onBegin()
  ///
  /// Called immediately after the transaction begins.
  void onBegin() => jniAccessors.callMethodWithArgs(
      reference, _id_onBegin, jni.JniType.voidType, []).check();

  static final _id_onCommit =
      jniAccessors.getMethodIDOf(_classRef, "onCommit", "()V");

  /// from: public abstract void onCommit()
  ///
  /// Called immediately before commiting the transaction.
  void onCommit() => jniAccessors.callMethodWithArgs(
      reference, _id_onCommit, jni.JniType.voidType, []).check();

  static final _id_onRollback =
      jniAccessors.getMethodIDOf(_classRef, "onRollback", "()V");

  /// from: public abstract void onRollback()
  ///
  /// Called if the transaction is about to be rolled back.
  void onRollback() => jniAccessors.callMethodWithArgs(
      reference, _id_onRollback, jni.JniType.voidType, []).check();
}
