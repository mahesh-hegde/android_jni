// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.database.CharArrayBuffer
///
/// This is used for Cursor\#copyStringToBuffer
class CharArrayBuffer extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/database/CharArrayBuffer");
  CharArrayBuffer.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_data = jniAccessors.getFieldIDOf(_classRef, "data", "[C");

  /// from: public char[] data
  /// The returned object must be deleted after use, by calling the `delete` method.
  jni.JniObject get data => jni.JniObject.fromRef(jniAccessors
      .getField(reference, _id_data, jni.JniType.objectType)
      .object);

  /// from: public char[] data
  /// The returned object must be deleted after use, by calling the `delete` method.
  set data(jni.JniObject value) =>
      jniEnv.SetObjectField(reference, _id_data, value.reference);

  static final _id_sizeCopied =
      jniAccessors.getFieldIDOf(_classRef, "sizeCopied", "I");

  /// from: public int sizeCopied
  int get sizeCopied => jniAccessors
      .getField(reference, _id_sizeCopied, jni.JniType.intType)
      .integer;

  /// from: public int sizeCopied
  set sizeCopied(int value) =>
      jniEnv.SetIntField(reference, _id_sizeCopied, value);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(I)V");

  /// from: public void <init>(int size)
  /// The returned object must be deleted after use, by calling the `delete` method.
  CharArrayBuffer(int size)
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, [size]).object);

  static final _id_ctor1 =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "([C)V");

  /// from: public void <init>(char[] buf)
  /// The returned object must be deleted after use, by calling the `delete` method.
  CharArrayBuffer.ctor1(jni.JniObject buf)
      : super.fromRef(jniAccessors
            .newObjectWithArgs(_classRef, _id_ctor1, [buf.reference]).object);
}
