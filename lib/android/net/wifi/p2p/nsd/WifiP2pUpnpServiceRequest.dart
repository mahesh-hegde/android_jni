// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "WifiP2pServiceRequest.dart" as wifip2pservicerequest_;
import "../../../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest
///
/// A class for creating a Upnp service discovery request for use with
/// WifiP2pManager\#addServiceRequest and WifiP2pManager\#removeServiceRequest
///
/// {@see WifiP2pManager}
/// {@see WifiP2pServiceRequest}
/// {@see WifiP2pDnsSdServiceRequest}
class WifiP2pUpnpServiceRequest
    extends wifip2pservicerequest_.WifiP2pServiceRequest {
  static final _classRef = jniAccessors
      .getClassOf("android/net/wifi/p2p/nsd/WifiP2pUpnpServiceRequest");
  WifiP2pUpnpServiceRequest.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor1 =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// This constructor is only used in newInstance().
  ///@hide
  WifiP2pUpnpServiceRequest.ctor1()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor1, []).object);

  static final _id_newInstance2 = jniAccessors.getStaticMethodIDOf(_classRef,
      "newInstance", "()Landroid/net/wifi/p2p/nsd/WifiP2pUpnpServiceRequest;");

  /// from: static public android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest newInstance()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Create a service discovery request to search all UPnP services.
  ///@return service request for UPnP.
  static WifiP2pUpnpServiceRequest newInstance2() =>
      WifiP2pUpnpServiceRequest.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef, _id_newInstance2, jni.JniType.objectType, []).object);

  static final _id_newInstance3 = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "newInstance",
      "(Ljava/lang/String;)Landroid/net/wifi/p2p/nsd/WifiP2pUpnpServiceRequest;");

  /// from: static public android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest newInstance(java.lang.String st)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Create a service discovery request to search specified UPnP services.
  ///@param st ssdp search target.  Cannot be null.<br>
  /// e.g ) <br>
  /// <ul>
  /// <li>"ssdp:all"
  /// <li>"upnp:rootdevice"
  /// <li>"urn:schemas-upnp-org:device:MediaServer:2"
  /// <li>"urn:schemas-upnp-org:service:ContentDirectory:2"
  /// <li>"uuid:6859dede-8574-59ab-9332-123456789012"
  /// </ul>
  ///@return service request for UPnP.
  static WifiP2pUpnpServiceRequest newInstance3(jni.JniString st) =>
      WifiP2pUpnpServiceRequest.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_newInstance3,
          jni.JniType.objectType,
          [st.reference]).object);
}
