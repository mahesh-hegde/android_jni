// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../../os/Parcelable.dart" as parcelable_;

import "WifiP2pDevice.dart" as wifip2pdevice_;

import "../../../os/Parcel.dart" as parcel_;
import "../../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.net.wifi.p2p.WifiP2pGroup
///
/// A class representing a Wi-Fi P2p group. A p2p group consists of a single group
/// owner and one or more clients. In the case of a group with only two devices, one
/// will be the group owner and the other will be a group client.
///
/// {@see WifiP2pManager}
class WifiP2pGroup extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/net/wifi/p2p/WifiP2pGroup");
  WifiP2pGroup.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_CREATOR = jniAccessors.getStaticFieldIDOf(
      _classRef, "CREATOR", "Landroid/os/Parcelable\$Creator;");

  /// from: static public final android.os.Parcelable.Creator<android.net.wifi.p2p.WifiP2pGroup> CREATOR
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Implement the Parcelable interface
  static parcelable_.Parcelable_Creator get CREATOR =>
      parcelable_.Parcelable_Creator.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CREATOR, jni.JniType.objectType)
          .object);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: public void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  WifiP2pGroup()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_ctor1 = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "(Landroid/net/wifi/p2p/WifiP2pGroup;)V");

  /// from: public void <init>(android.net.wifi.p2p.WifiP2pGroup source)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// copy constructor
  WifiP2pGroup.ctor1(WifiP2pGroup source)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor1, [source.reference]).object);

  static final _id_getNetworkName = jniAccessors.getMethodIDOf(
      _classRef, "getNetworkName", "()Ljava/lang/String;");

  /// from: public java.lang.String getNetworkName()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get the network name (SSID) of the group. Legacy Wi-Fi clients will discover
  /// the p2p group using the network name.
  jni.JniString getNetworkName() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getNetworkName, jni.JniType.objectType, []).object);

  static final _id_isGroupOwner =
      jniAccessors.getMethodIDOf(_classRef, "isGroupOwner", "()Z");

  /// from: public boolean isGroupOwner()
  ///
  /// Check whether this device is the group owner of the created p2p group
  bool isGroupOwner() => jniAccessors.callMethodWithArgs(
      reference, _id_isGroupOwner, jni.JniType.booleanType, []).boolean;

  static final _id_getOwner = jniAccessors.getMethodIDOf(
      _classRef, "getOwner", "()Landroid/net/wifi/p2p/WifiP2pDevice;");

  /// from: public android.net.wifi.p2p.WifiP2pDevice getOwner()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get the details of the group owner as a WifiP2pDevice object
  wifip2pdevice_.WifiP2pDevice getOwner() =>
      wifip2pdevice_.WifiP2pDevice.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getOwner, jni.JniType.objectType, []).object);

  static final _id_getClientList = jniAccessors.getMethodIDOf(
      _classRef, "getClientList", "()Ljava/util/Collection;");

  /// from: public java.util.Collection<android.net.wifi.p2p.WifiP2pDevice> getClientList()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get the list of clients currently part of the p2p group
  jni.JniObject getClientList() =>
      jni.JniObject.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getClientList, jni.JniType.objectType, []).object);

  static final _id_getPassphrase = jniAccessors.getMethodIDOf(
      _classRef, "getPassphrase", "()Ljava/lang/String;");

  /// from: public java.lang.String getPassphrase()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get the passphrase of the group. This function will return a valid passphrase only
  /// at the group owner. Legacy Wi-Fi clients will need this passphrase alongside
  /// network name obtained from \#getNetworkName() to join the group
  jni.JniString getPassphrase() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getPassphrase, jni.JniType.objectType, []).object);

  static final _id_getInterface = jniAccessors.getMethodIDOf(
      _classRef, "getInterface", "()Ljava/lang/String;");

  /// from: public java.lang.String getInterface()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get the interface name on which the group is created
  jni.JniString getInterface() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getInterface, jni.JniType.objectType, []).object);

  static final _id_toString1 =
      jniAccessors.getMethodIDOf(_classRef, "toString", "()Ljava/lang/String;");

  /// from: public java.lang.String toString()
  /// The returned object must be deleted after use, by calling the `delete` method.
  jni.JniString toString1() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_toString1, jni.JniType.objectType, []).object);

  static final _id_describeContents =
      jniAccessors.getMethodIDOf(_classRef, "describeContents", "()I");

  /// from: public int describeContents()
  ///
  /// Implement the Parcelable interface
  int describeContents() => jniAccessors.callMethodWithArgs(
      reference, _id_describeContents, jni.JniType.intType, []).integer;

  static final _id_writeToParcel = jniAccessors.getMethodIDOf(
      _classRef, "writeToParcel", "(Landroid/os/Parcel;I)V");

  /// from: public void writeToParcel(android.os.Parcel dest, int flags)
  ///
  /// Implement the Parcelable interface
  void writeToParcel(parcel_.Parcel dest, int flags) =>
      jniAccessors.callMethodWithArgs(reference, _id_writeToParcel,
          jni.JniType.voidType, [dest.reference, flags]).check();
}
