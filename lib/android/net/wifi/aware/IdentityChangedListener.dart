// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.net.wifi.aware.IdentityChangedListener
///
/// Base class for a listener which is called with the MAC address of the Aware interface whenever
/// it is changed. Change may be due to device joining a cluster, starting a cluster, or discovery
/// interface change (addresses are randomized at regular intervals). The implication is that
/// peers you've been communicating with may no longer recognize you and you need to re-establish
/// your identity - e.g. by starting a discovery session. This actual MAC address of the
/// interface may also be useful if the application uses alternative (non-Aware) discovery but needs
/// to set up a Aware connection. The provided Aware discovery interface MAC address can then be used
/// in WifiAwareSession\#createNetworkSpecifierOpen(int, byte[]) or
/// WifiAwareSession\#createNetworkSpecifierPassphrase(int, byte[], String).
class IdentityChangedListener extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/net/wifi/aware/IdentityChangedListener");
  IdentityChangedListener.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: public void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  IdentityChangedListener()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_onIdentityChanged =
      jniAccessors.getMethodIDOf(_classRef, "onIdentityChanged", "([B)V");

  /// from: public void onIdentityChanged(byte[] mac)
  ///
  /// @param mac The MAC address of the Aware discovery interface. The application must have the
  /// android.Manifest.permission\#ACCESS_COARSE_LOCATION to get the actual MAC address,
  ///            otherwise all 0's will be provided.
  void onIdentityChanged(jni.JniObject mac) => jniAccessors.callMethodWithArgs(
      reference,
      _id_onIdentityChanged,
      jni.JniType.voidType,
      [mac.reference]).check();
}
