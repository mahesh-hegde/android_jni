// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../PasspointConfiguration.dart" as passpointconfiguration_;
import "../../../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.net.wifi.hotspot2.omadm.PpsMoParser
///
/// Utility class for converting OMA-DM (Open Mobile Alliance's Device Management)
/// PPS-MO (PerProviderSubscription Management Object) XML tree to a
/// PasspointConfiguration object.
///
/// Currently this only supports PerProviderSubscription/HomeSP and
/// PerProviderSubscription/Credential subtree for Hotspot 2.0 Release 1 support.
///
/// For more info, refer to Hotspot 2.0 PPS MO defined in section 9.1 of the Hotspot 2.0
/// Release 2 Technical Specification.
///
/// Below is a sample XML string for a Release 1 PPS MO tree:
///
/// <MgmtTree xmlns="syncml:dmddf1.2">
///   <VerDTD>1.2</VerDTD>
///   <Node>
///     <NodeName>PerProviderSubscription</NodeName>
///     <RTProperties>
///       <Type>
///         <DDFName>urn:wfa:mo:hotspot2dot0Â­perprovidersubscription:1.0</DDFName>
///       </Type>
///     </RTProperties>
///     <Node>
///       <NodeName>i001</NodeName>
///       <Node>
///         <NodeName>HomeSP</NodeName>
///         <Node>
///           <NodeName>FriendlyName</NodeName>
///           <Value>Century House</Value>
///         </Node>
///         <Node>
///           <NodeName>FQDN</NodeName>
///           <Value>mi6.co.uk</Value>
///         </Node>
///         <Node>
///           <NodeName>RoamingConsortiumOI</NodeName>
///           <Value>112233,445566</Value>
///         </Node>
///       </Node>
///       <Node>
///         <NodeName>Credential</NodeName>
///         <Node>
///           <NodeName>Realm</NodeName>
///           <Value>shaken.stirred.com</Value>
///         </Node>
///         <Node>
///           <NodeName>UsernamePassword</NodeName>
///           <Node>
///             <NodeName>Username</NodeName>
///             <Value>james</Value>
///           </Node>
///           <Node>
///             <NodeName>Password</NodeName>
///             <Value>Ym9uZDAwNw==</Value>
///           </Node>
///           <Node>
///             <NodeName>EAPMethod</NodeName>
///             <Node>
///               <NodeName>EAPType</NodeName>
///               <Value>21</Value>
///             </Node>
///             <Node>
///               <NodeName>InnerMethod</NodeName>
///               <Value>MS-CHAP-V2</Value>
///             </Node>
///           </Node>
///         </Node>
///       </Node>
///     </Node>
///   </Node>
/// </MgmtTree>
class PpsMoParser extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/net/wifi/hotspot2/omadm/PpsMoParser");
  PpsMoParser.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// @hide
  PpsMoParser()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_parseMoText = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "parseMoText",
      "(Ljava/lang/String;)Landroid/net/wifi/hotspot2/PasspointConfiguration;");

  /// from: static public android.net.wifi.hotspot2.PasspointConfiguration parseMoText(java.lang.String xmlString)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Convert a XML string representation of a PPS MO (PerProviderSubscription
  /// Management Object) tree to a PasspointConfiguration object.
  ///@param xmlString XML string representation of a PPS MO tree
  ///@return PasspointConfiguration or null
  static passpointconfiguration_.PasspointConfiguration parseMoText(
          jni.JniString xmlString) =>
      passpointconfiguration_.PasspointConfiguration.fromRef(jniAccessors
          .callStaticMethodWithArgs(_classRef, _id_parseMoText,
              jni.JniType.objectType, [xmlString.reference]).object);
}
