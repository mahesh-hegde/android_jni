// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.system.StructTimespec
///
/// Corresponds to C's {@code struct timespec} from {@code <time.h>}.
class StructTimespec extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/system/StructTimespec");
  StructTimespec.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_tv_nsec =
      jniAccessors.getFieldIDOf(_classRef, "tv_nsec", "J");

  /// from: public final long tv_nsec
  ///
  /// Nanoseconds (values are [0, 999999999]).
  int get tv_nsec =>
      jniAccessors.getField(reference, _id_tv_nsec, jni.JniType.longType).long;

  static final _id_tv_sec = jniAccessors.getFieldIDOf(_classRef, "tv_sec", "J");

  /// from: public final long tv_sec
  ///
  /// Seconds part of time of last data modification.
  int get tv_sec =>
      jniAccessors.getField(reference, _id_tv_sec, jni.JniType.longType).long;

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(JJ)V");

  /// from: public void <init>(long tv_sec, long tv_nsec)
  /// The returned object must be deleted after use, by calling the `delete` method.
  StructTimespec(int tv_sec, int tv_nsec)
      : super.fromRef(jniAccessors
            .newObjectWithArgs(_classRef, _id_ctor, [tv_sec, tv_nsec]).object);

  static final _id_compareTo = jniAccessors.getMethodIDOf(
      _classRef, "compareTo", "(Landroid/system/StructTimespec;)I");

  /// from: public int compareTo(android.system.StructTimespec other)
  int compareTo(StructTimespec other) => jniAccessors.callMethodWithArgs(
      reference, _id_compareTo, jni.JniType.intType, [other.reference]).integer;

  static final _id_equals1 =
      jniAccessors.getMethodIDOf(_classRef, "equals", "(Ljava/lang/Object;)Z");

  /// from: public boolean equals(java.lang.Object o)
  bool equals1(jni.JniObject o) => jniAccessors.callMethodWithArgs(
      reference, _id_equals1, jni.JniType.booleanType, [o.reference]).boolean;

  static final _id_hashCode1 =
      jniAccessors.getMethodIDOf(_classRef, "hashCode", "()I");

  /// from: public int hashCode()
  int hashCode1() => jniAccessors.callMethodWithArgs(
      reference, _id_hashCode1, jni.JniType.intType, []).integer;

  static final _id_toString1 =
      jniAccessors.getMethodIDOf(_classRef, "toString", "()Ljava/lang/String;");

  /// from: public java.lang.String toString()
  /// The returned object must be deleted after use, by calling the `delete` method.
  jni.JniString toString1() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_toString1, jni.JniType.objectType, []).object);
}
