// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "SyncResult.dart" as syncresult_;

import "../os/IBinder.dart" as ibinder_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.content.SyncContext
class SyncContext extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/content/SyncContext");
  SyncContext.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_onFinished = jniAccessors.getMethodIDOf(
      _classRef, "onFinished", "(Landroid/content/SyncResult;)V");

  /// from: public void onFinished(android.content.SyncResult result)
  void onFinished(syncresult_.SyncResult result) =>
      jniAccessors.callMethodWithArgs(reference, _id_onFinished,
          jni.JniType.voidType, [result.reference]).check();

  static final _id_getSyncContextBinder = jniAccessors.getMethodIDOf(
      _classRef, "getSyncContextBinder", "()Landroid/os/IBinder;");

  /// from: public android.os.IBinder getSyncContextBinder()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ibinder_.IBinder getSyncContextBinder() =>
      ibinder_.IBinder.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_getSyncContextBinder, jni.JniType.objectType, []).object);
}
