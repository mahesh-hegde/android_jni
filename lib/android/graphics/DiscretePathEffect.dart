// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "PathEffect.dart" as patheffect_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.graphics.DiscretePathEffect
class DiscretePathEffect extends patheffect_.PathEffect {
  static final _classRef =
      jniAccessors.getClassOf("android/graphics/DiscretePathEffect");
  DiscretePathEffect.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor1 =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(FF)V");

  /// from: public void <init>(float segmentLength, float deviation)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Chop the path into lines of segmentLength, randomly deviating from the
  /// original path by deviation.
  DiscretePathEffect.ctor1(double segmentLength, double deviation)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor1, [segmentLength, deviation]).object);
}
