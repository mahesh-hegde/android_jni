// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "Shader.dart" as shader_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.graphics.SweepGradient
class SweepGradient extends shader_.Shader {
  static final _classRef =
      jniAccessors.getClassOf("android/graphics/SweepGradient");
  SweepGradient.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor1 =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(FF[I[F)V");

  /// from: public void <init>(float cx, float cy, int[] colors, float[] positions)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// A Shader that draws a sweep gradient around a center point.
  ///@param cx The x-coordinate of the center
  ///@param cy The y-coordinate of the center
  ///@param colors The colors to be distributed between around the center.
  ///                 There must be at least 2 colors in the array.
  /// This value must never be {@code null}.
  ///@param positions May be NULL. The relative position of
  ///                 each corresponding color in the colors array, beginning
  ///                 with 0 and ending with 1.0. If the values are not
  ///                 monotonic, the drawing may produce unexpected results.
  ///                 If positions is NULL, then the colors are automatically
  ///                 spaced evenly.
  ///
  /// This value may be {@code null}.
  SweepGradient.ctor1(
      double cx, double cy, jni.JniObject colors, jni.JniObject positions)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor1,
            [cx, cy, colors.reference, positions.reference]).object);

  static final _id_ctor2 =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(FFII)V");

  /// from: public void <init>(float cx, float cy, int color0, int color1)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// A Shader that draws a sweep gradient around a center point.
  ///@param cx The x-coordinate of the center
  ///@param cy The y-coordinate of the center
  ///@param color0 The color to use at the start of the sweep
  ///@param color1 The color to use at the end of the sweep
  SweepGradient.ctor2(double cx, double cy, int color0, int color1)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor2, [cx, cy, color0, color1]).object);
}
