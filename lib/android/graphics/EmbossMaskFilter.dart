// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "MaskFilter.dart" as maskfilter_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.graphics.EmbossMaskFilter
class EmbossMaskFilter extends maskfilter_.MaskFilter {
  static final _classRef =
      jniAccessors.getClassOf("android/graphics/EmbossMaskFilter");
  EmbossMaskFilter.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor1 =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "([FFFF)V");

  /// from: public void <init>(float[] direction, float ambient, float specular, float blurRadius)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Create an emboss maskfilter
  ///@deprecated This subclass is not supported and should not be instantiated.
  ///@param direction array of 3 scalars [x, y, z] specifying the direction of the light source
  ///@param ambient 0...1 amount of ambient light
  ///@param specular coefficient for specular highlights (e.g. 8)
  ///@param blurRadius amount to blur before applying lighting (e.g. 3)
  ///@return the emboss maskfilter
  EmbossMaskFilter.ctor1(jni.JniObject direction, double ambient,
      double specular, double blurRadius)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor1,
            [direction.reference, ambient, specular, blurRadius]).object);
}
