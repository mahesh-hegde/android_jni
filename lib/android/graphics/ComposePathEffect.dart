// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "PathEffect.dart" as patheffect_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.graphics.ComposePathEffect
class ComposePathEffect extends patheffect_.PathEffect {
  static final _classRef =
      jniAccessors.getClassOf("android/graphics/ComposePathEffect");
  ComposePathEffect.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor1 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/graphics/PathEffect;Landroid/graphics/PathEffect;)V");

  /// from: public void <init>(android.graphics.PathEffect outerpe, android.graphics.PathEffect innerpe)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Construct a PathEffect whose effect is to apply first the inner effect
  /// and the the outer pathEffect (e.g.&nbsp;outer(inner(path))).
  ComposePathEffect.ctor1(
      patheffect_.PathEffect outerpe, patheffect_.PathEffect innerpe)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor1,
            [outerpe.reference, innerpe.reference]).object);
}
