// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "PathEffect.dart" as patheffect_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.graphics.DashPathEffect
class DashPathEffect extends patheffect_.PathEffect {
  static final _classRef =
      jniAccessors.getClassOf("android/graphics/DashPathEffect");
  DashPathEffect.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor1 =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "([FF)V");

  /// from: public void <init>(float[] intervals, float phase)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// The intervals array must contain an even number of entries (>=2), with
  /// the even indices specifying the "on" intervals, and the odd indices
  /// specifying the "off" intervals. phase is an offset into the intervals
  /// array (mod the sum of all of the intervals). The intervals array
  /// controls the length of the dashes. The paint's strokeWidth controls the
  /// thickness of the dashes.
  /// Note: this patheffect only affects drawing with the paint's style is set
  /// to STROKE or FILL_AND_STROKE. It is ignored if the drawing is done with
  /// style == FILL.
  ///@param intervals array of ON and OFF distances
  ///@param phase offset into the intervals array
  DashPathEffect.ctor1(jni.JniObject intervals, double phase)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor1, [intervals.reference, phase]).object);
}
