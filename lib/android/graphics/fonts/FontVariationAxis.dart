// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.graphics.fonts.FontVariationAxis
///
/// Class that holds information about single font variation axis.
class FontVariationAxis extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/graphics/fonts/FontVariationAxis");
  FontVariationAxis.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(Ljava/lang/String;F)V");

  /// from: public void <init>(java.lang.String tagString, float styleValue)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Construct FontVariationAxis.
  ///
  /// The axis tag must contain four ASCII characters. Tag string that are longer or shorter than
  /// four characters, or contains characters outside of U+0020..U+007E are invalid.
  ///@throws IllegalArgumentException If given tag string is invalid.
  ///@param tagString This value must never be {@code null}.
  FontVariationAxis(jni.JniString tagString, double styleValue)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor, [tagString.reference, styleValue]).object);

  static final _id_getTag =
      jniAccessors.getMethodIDOf(_classRef, "getTag", "()Ljava/lang/String;");

  /// from: public java.lang.String getTag()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns the variable font axis tag associated to this axis.
  jni.JniString getTag() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getTag, jni.JniType.objectType, []).object);

  static final _id_getStyleValue =
      jniAccessors.getMethodIDOf(_classRef, "getStyleValue", "()F");

  /// from: public float getStyleValue()
  ///
  /// Returns the style value associated to the given axis for this font.
  double getStyleValue() => jniAccessors.callMethodWithArgs(
      reference, _id_getStyleValue, jni.JniType.floatType, []).float;

  static final _id_toString1 =
      jniAccessors.getMethodIDOf(_classRef, "toString", "()Ljava/lang/String;");

  /// from: public java.lang.String toString()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Returns a valid font variation setting string for this object.
  ///@return This value will never be {@code null}.
  jni.JniString toString1() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_toString1, jni.JniType.objectType, []).object);

  static final _id_fromFontVariationSettings = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "fromFontVariationSettings",
      "(Ljava/lang/String;)[Landroid/graphics/fonts/FontVariationAxis;");

  /// from: static public android.graphics.fonts.FontVariationAxis[] fromFontVariationSettings(java.lang.String settings)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Construct FontVariationAxis array from font variation settings.
  ///
  /// The settings string is constructed from multiple pairs of axis tag and style values. The axis
  /// tag must contain four ASCII characters and must be wrapped with single quotes (U+0027) or
  /// double quotes (U+0022). Axis strings that are longer or shorter than four characters, or
  /// contain characters outside of U+0020..U+007E are invalid. If a specified axis name is not
  /// defined in the font, the settings will be ignored.
  ///
  /// <pre>
  ///   FontVariationAxis.fromFontVariationSettings("'wdth' 1.0");
  ///   FontVariationAxis.fromFontVariationSettings("'AX  ' 1.0, 'FB  ' 2.0");
  /// </pre>
  ///@param settings font variation settings.
  /// This value may be {@code null}.
  ///@return FontVariationAxis[] the array of parsed font variation axis. {@code null} if settings
  ///                             has no font variation settings.
  ///@throws IllegalArgumentException If given string is not a valid font variation settings
  ///                                  format.
  static jni.JniObject fromFontVariationSettings(jni.JniString settings) =>
      jni.JniObject.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_fromFontVariationSettings,
          jni.JniType.objectType,
          [settings.reference]).object);

  static final _id_toFontVariationSettings = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "toFontVariationSettings",
      "([Landroid/graphics/fonts/FontVariationAxis;)Ljava/lang/String;");

  /// from: static public java.lang.String toFontVariationSettings(android.graphics.fonts.FontVariationAxis[] axes)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Stringify the array of FontVariationAxis.
  ///@param axes an array of FontVariationAxis.
  /// This value may be {@code null}.
  ///@return String a valid font variation settings string.
  ///
  /// This value will never be {@code null}.
  static jni.JniString toFontVariationSettings(jni.JniObject axes) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_toFontVariationSettings,
          jni.JniType.objectType,
          [axes.reference]).object);
}
