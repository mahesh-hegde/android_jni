// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../graphics/Canvas.dart" as canvas_;

import "../../graphics/Paint.dart" as paint_;
import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.text.style.LineBackgroundSpan
class LineBackgroundSpan extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/text/style/LineBackgroundSpan");
  LineBackgroundSpan.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_drawBackground = jniAccessors.getMethodIDOf(
      _classRef,
      "drawBackground",
      "(Landroid/graphics/Canvas;Landroid/graphics/Paint;IIIIILjava/lang/CharSequence;III)V");

  /// from: public abstract void drawBackground(android.graphics.Canvas c, android.graphics.Paint p, int left, int right, int top, int baseline, int bottom, java.lang.CharSequence text, int start, int end, int lnum)
  void drawBackground(
          canvas_.Canvas c,
          paint_.Paint p,
          int left,
          int right,
          int top,
          int baseline,
          int bottom,
          jni.JniObject text,
          int start,
          int end,
          int lnum) =>
      jniAccessors.callMethodWithArgs(
          reference, _id_drawBackground, jni.JniType.voidType, [
        c.reference,
        p.reference,
        left,
        right,
        top,
        baseline,
        bottom,
        text.reference,
        start,
        end,
        lnum
      ]).check();
}
