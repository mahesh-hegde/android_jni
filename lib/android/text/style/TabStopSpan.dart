// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.text.style.TabStopSpan
///
/// Paragraph affecting span that changes the position of the tab with respect to
/// the leading margin of the line. <code>TabStopSpan</code> will only affect the first tab
/// encountered on the first line of the text.
class TabStopSpan extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/text/style/TabStopSpan");
  TabStopSpan.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_getTabStop =
      jniAccessors.getMethodIDOf(_classRef, "getTabStop", "()I");

  /// from: public abstract int getTabStop()
  ///
  /// Returns the offset of the tab stop from the leading margin of the line, in pixels.
  ///@return the offset, in pixels
  int getTabStop() => jniAccessors.callMethodWithArgs(
      reference, _id_getTabStop, jni.JniType.intType, []).integer;
}

/// from: android.text.style.TabStopSpan$Standard
///
/// The default implementation of TabStopSpan that allows setting the offset of the tab stop
/// from the leading margin of the first line of text.
///
/// Let's consider that we have the following text: <i>"\tParagraph text beginning with tab."</i>
/// and we want to move the tab stop with 100px. This can be achieved like this:
/// <pre>
/// SpannableString string = new SpannableString("\tParagraph text beginning with tab.");
/// string.setSpan(new TabStopSpan.Standard(100), 0, string.length(),
/// Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</pre>
/// <img src="{@docRoot}reference/android/images/text/style/tabstopspan.png"/>
/// <figcaption>Text with a tab stop and a <code>TabStopSpan</code></figcaption>
class TabStopSpan_Standard extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/text/style/TabStopSpan\$Standard");
  TabStopSpan_Standard.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "(I)V");

  /// from: public void <init>(int offset)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructs a TabStopSpan.Standard based on an offset.
  ///@param offset the offset of the tab stop from the leading margin of
  ///               the line, in pixels
  ///
  /// Value is 0 or greater
  TabStopSpan_Standard(int offset)
      : super.fromRef(jniAccessors
            .newObjectWithArgs(_classRef, _id_ctor, [offset]).object);

  static final _id_getTabStop =
      jniAccessors.getMethodIDOf(_classRef, "getTabStop", "()I");

  /// from: public int getTabStop()
  int getTabStop() => jniAccessors.callMethodWithArgs(
      reference, _id_getTabStop, jni.JniType.intType, []).integer;
}
