// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../app/Dialog.dart" as dialog_;

import "../../content/Context.dart" as context_;

import "../../view/View.dart" as view_;

import "../Editable.dart" as editable_;

import "../../os/Bundle.dart" as bundle_;

import "../../widget/AdapterView.dart" as adapterview_;
import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.text.method.CharacterPickerDialog
///
/// Dialog for choosing accented characters related to a base character.
class CharacterPickerDialog extends dialog_.Dialog {
  static final _classRef =
      jniAccessors.getClassOf("android/text/method/CharacterPickerDialog");
  CharacterPickerDialog.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor3 = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Landroid/content/Context;Landroid/view/View;Landroid/text/Editable;Ljava/lang/String;Z)V");

  /// from: public void <init>(android.content.Context context, android.view.View view, android.text.Editable text, java.lang.String options, boolean insert)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a new CharacterPickerDialog that presents the specified
  /// <code>options</code> for insertion or replacement (depending on
  /// the sense of <code>insert</code>) into <code>text</code>.
  CharacterPickerDialog.ctor3(context_.Context context, view_.View view,
      editable_.Editable text, jni.JniString options, bool insert)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor3, [
          context.reference,
          view.reference,
          text.reference,
          options.reference,
          insert
        ]).object);

  static final _id_onCreate = jniAccessors.getMethodIDOf(
      _classRef, "onCreate", "(Landroid/os/Bundle;)V");

  /// from: protected void onCreate(android.os.Bundle savedInstanceState)
  void onCreate(bundle_.Bundle savedInstanceState) =>
      jniAccessors.callMethodWithArgs(reference, _id_onCreate,
          jni.JniType.voidType, [savedInstanceState.reference]).check();

  static final _id_onItemClick = jniAccessors.getMethodIDOf(_classRef,
      "onItemClick", "(Landroid/widget/AdapterView;Landroid/view/View;IJ)V");

  /// from: public void onItemClick(android.widget.AdapterView parent, android.view.View view, int position, long id)
  ///
  /// Handles clicks on the character buttons.
  void onItemClick(adapterview_.AdapterView parent, view_.View view,
          int position, int id) =>
      jniAccessors.callMethodWithArgs(
          reference,
          _id_onItemClick,
          jni.JniType.voidType,
          [parent.reference, view.reference, position, id]).check();

  static final _id_onClick = jniAccessors.getMethodIDOf(
      _classRef, "onClick", "(Landroid/view/View;)V");

  /// from: public void onClick(android.view.View v)
  ///
  /// Handles clicks on the Cancel button.
  void onClick(view_.View v) => jniAccessors.callMethodWithArgs(
      reference, _id_onClick, jni.JniType.voidType, [v.reference]).check();
}
