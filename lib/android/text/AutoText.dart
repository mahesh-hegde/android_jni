// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../content/res/Resources.dart" as resources_;

import "../view/View.dart" as view_;
import "../../_init.dart" show jniEnv, jniAccessors;

/// from: android.text.AutoText
///
/// This class accesses a dictionary of corrections to frequent misspellings.
class AutoText extends jni.JniObject {
  static final _classRef = jniAccessors.getClassOf("android/text/AutoText");
  AutoText.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "(Landroid/content/res/Resources;)V");

  /// from: void <init>(android.content.res.Resources resources)
  /// The returned object must be deleted after use, by calling the `delete` method.
  AutoText(resources_.Resources resources)
      : super.fromRef(jniAccessors.newObjectWithArgs(
            _classRef, _id_ctor, [resources.reference]).object);

  static final _id_get0 = jniAccessors.getStaticMethodIDOf(_classRef, "get",
      "(Ljava/lang/CharSequence;IILandroid/view/View;)Ljava/lang/String;");

  /// from: static public java.lang.String get(java.lang.CharSequence src, int start, int end, android.view.View view)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Retrieves a possible spelling correction for the specified range
  /// of text.  Returns null if no correction can be found.
  /// The View is used to get the current Locale and Resources.
  static jni.JniString get0(
          jni.JniObject src, int start, int end, view_.View view) =>
      jni.JniString.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_get0,
          jni.JniType.objectType,
          [src.reference, start, end, view.reference]).object);

  static final _id_getSize = jniAccessors.getStaticMethodIDOf(
      _classRef, "getSize", "(Landroid/view/View;)I");

  /// from: static public int getSize(android.view.View view)
  ///
  /// Returns the size of the auto text dictionary. The return value can be zero if there is
  /// no auto correction data available for the current locale.
  ///@param view used to retrieve the current Locale and Resources.
  ///@return the number of entries in the auto text dictionary
  static int getSize(view_.View view) => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_getSize, jni.JniType.intType, [view.reference]).integer;
}
