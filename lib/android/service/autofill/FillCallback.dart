// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "FillResponse.dart" as fillresponse_;
import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.service.autofill.FillCallback
///
/// Handles autofill requests from the AutofillService into the Activity being
/// autofilled.
class FillCallback extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/service/autofill/FillCallback");
  FillCallback.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor =
      jniAccessors.getMethodIDOf(_classRef, "<init>", "()V");

  /// from: void <init>()
  /// The returned object must be deleted after use, by calling the `delete` method.
  FillCallback()
      : super.fromRef(
            jniAccessors.newObjectWithArgs(_classRef, _id_ctor, []).object);

  static final _id_onSuccess = jniAccessors.getMethodIDOf(
      _classRef, "onSuccess", "(Landroid/service/autofill/FillResponse;)V");

  /// from: public void onSuccess(android.service.autofill.FillResponse response)
  ///
  /// Notifies the Android System that an
  /// AutofillService\#onFillRequest(FillRequest, android.os.CancellationSignal,
  /// FillCallback) was successfully fulfilled by the service.
  ///@param response autofill information for that activity, or {@code null} when the activity
  /// cannot be autofilled (for example, if it only contains read-only fields). See
  /// FillResponse for examples.
  ///
  /// This value may be {@code null}.
  void onSuccess(fillresponse_.FillResponse response) =>
      jniAccessors.callMethodWithArgs(reference, _id_onSuccess,
          jni.JniType.voidType, [response.reference]).check();

  static final _id_onFailure = jniAccessors.getMethodIDOf(
      _classRef, "onFailure", "(Ljava/lang/CharSequence;)V");

  /// from: public void onFailure(java.lang.CharSequence message)
  ///
  /// Notifies the Android System that an
  /// AutofillService\#onFillRequest(FillRequest, android.os.CancellationSignal,
  /// FillCallback) could not be fulfilled by the service.
  ///@param message error message to be displayed to the user.
  ///
  /// This value may be {@code null}.
  void onFailure(jni.JniObject message) => jniAccessors.callMethodWithArgs(
      reference,
      _id_onFailure,
      jni.JniType.voidType,
      [message.reference]).check();
}
