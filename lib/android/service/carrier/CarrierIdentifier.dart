// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: camel_case_types
// ignore_for_file: file_names
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: constant_identifier_names
// ignore_for_file: unused_shown_name
// ignore_for_file: annotate_overrides
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: unused_import
// ignore_for_file: unused_element
// ignore_for_file: unused_field

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../os/Parcelable.dart" as parcelable_;

import "../../os/Parcel.dart" as parcel_;
import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.service.carrier.CarrierIdentifier
///
/// Used to pass info to CarrierConfigService implementations so they can decide what values to
/// return.
class CarrierIdentifier extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/service/carrier/CarrierIdentifier");
  CarrierIdentifier.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_CREATOR = jniAccessors.getStaticFieldIDOf(
      _classRef, "CREATOR", "Landroid/os/Parcelable\$Creator;");

  /// from: static public final android.os.Parcelable.Creator<android.service.carrier.CarrierIdentifier> CREATOR
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Used to create a CarrierIdentifier from a Parcel.
  static parcelable_.Parcelable_Creator get CREATOR =>
      parcelable_.Parcelable_Creator.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CREATOR, jni.JniType.objectType)
          .object);

  static final _id_ctor = jniAccessors.getMethodIDOf(_classRef, "<init>",
      "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V");

  /// from: public void <init>(java.lang.String mcc, java.lang.String mnc, java.lang.String spn, java.lang.String imsi, java.lang.String gid1, java.lang.String gid2)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// @param spn This value may be {@code null}.
  ///@param imsi This value may be {@code null}.
  ///@param gid1 This value may be {@code null}.
  ///@param gid2 This value may be {@code null}.
  CarrierIdentifier(jni.JniString mcc, jni.JniString mnc, jni.JniString spn,
      jni.JniString imsi, jni.JniString gid1, jni.JniString gid2)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor, [
          mcc.reference,
          mnc.reference,
          spn.reference,
          imsi.reference,
          gid1.reference,
          gid2.reference
        ]).object);

  static final _id_ctor1 = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "([BLjava/lang/String;Ljava/lang/String;)V");

  /// from: public void <init>(byte[] mccMnc, java.lang.String gid1, java.lang.String gid2)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Creates a carrier identifier instance.
  ///@param mccMnc A 3-byte array as defined by 3GPP TS 24.008.
  ///@param gid1 The group identifier level 1.
  /// This value may be {@code null}.
  ///@param gid2 The group identifier level 2.
  /// This value may be {@code null}.
  ///@throws IllegalArgumentException If the length of {@code mccMnc} is not 3.
  CarrierIdentifier.ctor1(
      jni.JniObject mccMnc, jni.JniString gid1, jni.JniString gid2)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor1,
            [mccMnc.reference, gid1.reference, gid2.reference]).object);

  static final _id_getMcc =
      jniAccessors.getMethodIDOf(_classRef, "getMcc", "()Ljava/lang/String;");

  /// from: public java.lang.String getMcc()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get the mobile country code.
  jni.JniString getMcc() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getMcc, jni.JniType.objectType, []).object);

  static final _id_getMnc =
      jniAccessors.getMethodIDOf(_classRef, "getMnc", "()Ljava/lang/String;");

  /// from: public java.lang.String getMnc()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get the mobile network code.
  jni.JniString getMnc() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getMnc, jni.JniType.objectType, []).object);

  static final _id_getSpn =
      jniAccessors.getMethodIDOf(_classRef, "getSpn", "()Ljava/lang/String;");

  /// from: public java.lang.String getSpn()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get the service provider name.
  ///@return This value may be {@code null}.
  jni.JniString getSpn() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getSpn, jni.JniType.objectType, []).object);

  static final _id_getImsi =
      jniAccessors.getMethodIDOf(_classRef, "getImsi", "()Ljava/lang/String;");

  /// from: public java.lang.String getImsi()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get the international mobile subscriber identity.
  ///@return This value may be {@code null}.
  jni.JniString getImsi() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getImsi, jni.JniType.objectType, []).object);

  static final _id_getGid1 =
      jniAccessors.getMethodIDOf(_classRef, "getGid1", "()Ljava/lang/String;");

  /// from: public java.lang.String getGid1()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get the group identifier level 1.
  ///@return This value may be {@code null}.
  jni.JniString getGid1() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getGid1, jni.JniType.objectType, []).object);

  static final _id_getGid2 =
      jniAccessors.getMethodIDOf(_classRef, "getGid2", "()Ljava/lang/String;");

  /// from: public java.lang.String getGid2()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Get the group identifier level 2.
  ///@return This value may be {@code null}.
  jni.JniString getGid2() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getGid2, jni.JniType.objectType, []).object);

  static final _id_equals1 =
      jniAccessors.getMethodIDOf(_classRef, "equals", "(Ljava/lang/Object;)Z");

  /// from: public boolean equals(java.lang.Object obj)
  bool equals1(jni.JniObject obj) => jniAccessors.callMethodWithArgs(
      reference, _id_equals1, jni.JniType.booleanType, [obj.reference]).boolean;

  static final _id_hashCode1 =
      jniAccessors.getMethodIDOf(_classRef, "hashCode", "()I");

  /// from: public int hashCode()
  int hashCode1() => jniAccessors.callMethodWithArgs(
      reference, _id_hashCode1, jni.JniType.intType, []).integer;

  static final _id_describeContents =
      jniAccessors.getMethodIDOf(_classRef, "describeContents", "()I");

  /// from: public int describeContents()
  int describeContents() => jniAccessors.callMethodWithArgs(
      reference, _id_describeContents, jni.JniType.intType, []).integer;

  static final _id_writeToParcel = jniAccessors.getMethodIDOf(
      _classRef, "writeToParcel", "(Landroid/os/Parcel;I)V");

  /// from: public void writeToParcel(android.os.Parcel out, int flags)
  void writeToParcel(parcel_.Parcel out, int flags) =>
      jniAccessors.callMethodWithArgs(reference, _id_writeToParcel,
          jni.JniType.voidType, [out.reference, flags]).check();

  static final _id_toString1 =
      jniAccessors.getMethodIDOf(_classRef, "toString", "()Ljava/lang/String;");

  /// from: public java.lang.String toString()
  /// The returned object must be deleted after use, by calling the `delete` method.
  jni.JniString toString1() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_toString1, jni.JniType.objectType, []).object);
}
