// Autogenerated by jnigen. DO NOT EDIT!

// ignore_for_file: annotate_overrides
// ignore_for_file: camel_case_types
// ignore_for_file: constant_identifier_names
// ignore_for_file: file_names
// ignore_for_file: no_leading_underscores_for_local_identifiers
// ignore_for_file: non_constant_identifier_names
// ignore_for_file: unused_element
// ignore_for_file: unused_field
// ignore_for_file: unused_import
// ignore_for_file: unused_shown_name

import "package:jni/jni.dart" as jni;

import "package:jni/internal_helpers_for_jnigen.dart";

import "../../os/Parcelable.dart" as parcelable_;

import "../../os/Parcel.dart" as parcel_;

import "../../net/Uri.dart" as uri_;

import "FileServiceInfo.dart" as fileserviceinfo_;

import "../../content/Intent.dart" as intent_;
import "../../../_init.dart" show jniEnv, jniAccessors;

/// from: android.telephony.mbms.DownloadRequest
///
/// Describes a request to download files over cell-broadcast. Instances of this class should be
/// created by the app when requesting a download, and instances of this class will be passed back
/// to the app when the middleware updates the status of the download.
class DownloadRequest extends jni.JniObject {
  static final _classRef =
      jniAccessors.getClassOf("android/telephony/mbms/DownloadRequest");
  DownloadRequest.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_CREATOR = jniAccessors.getStaticFieldIDOf(
      _classRef, "CREATOR", "Landroid/os/Parcelable\$Creator;");

  /// from: static public final android.os.Parcelable.Creator<android.telephony.mbms.DownloadRequest> CREATOR
  /// The returned object must be deleted after use, by calling the `delete` method.
  static parcelable_.Parcelable_Creator get CREATOR =>
      parcelable_.Parcelable_Creator.fromRef(jniAccessors
          .getStaticField(_classRef, _id_CREATOR, jni.JniType.objectType)
          .object);

  static final _id_describeContents =
      jniAccessors.getMethodIDOf(_classRef, "describeContents", "()I");

  /// from: public int describeContents()
  int describeContents() => jniAccessors.callMethodWithArgs(
      reference, _id_describeContents, jni.JniType.intType, []).integer;

  static final _id_writeToParcel = jniAccessors.getMethodIDOf(
      _classRef, "writeToParcel", "(Landroid/os/Parcel;I)V");

  /// from: public void writeToParcel(android.os.Parcel out, int flags)
  void writeToParcel(parcel_.Parcel out, int flags) =>
      jniAccessors.callMethodWithArgs(reference, _id_writeToParcel,
          jni.JniType.voidType, [out.reference, flags]).check();

  static final _id_getFileServiceId = jniAccessors.getMethodIDOf(
      _classRef, "getFileServiceId", "()Ljava/lang/String;");

  /// from: public java.lang.String getFileServiceId()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// @return The ID of the file service to download from.
  jni.JniString getFileServiceId() =>
      jni.JniString.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getFileServiceId, jni.JniType.objectType, []).object);

  static final _id_getSourceUri = jniAccessors.getMethodIDOf(
      _classRef, "getSourceUri", "()Landroid/net/Uri;");

  /// from: public android.net.Uri getSourceUri()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// @return The source URI to download from
  uri_.Uri getSourceUri() => uri_.Uri.fromRef(jniAccessors.callMethodWithArgs(
      reference, _id_getSourceUri, jni.JniType.objectType, []).object);

  static final _id_getDestinationUri = jniAccessors.getMethodIDOf(
      _classRef, "getDestinationUri", "()Landroid/net/Uri;");

  /// from: public android.net.Uri getDestinationUri()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// @return The destination Uri of the downloaded file.
  uri_.Uri getDestinationUri() =>
      uri_.Uri.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_getDestinationUri, jni.JniType.objectType, []).object);

  static final _id_getSubscriptionId =
      jniAccessors.getMethodIDOf(_classRef, "getSubscriptionId", "()I");

  /// from: public int getSubscriptionId()
  ///
  /// @return The subscription ID on which to perform MBMS operations.
  int getSubscriptionId() => jniAccessors.callMethodWithArgs(
      reference, _id_getSubscriptionId, jni.JniType.intType, []).integer;

  static final _id_toByteArray =
      jniAccessors.getMethodIDOf(_classRef, "toByteArray", "()[B");

  /// from: public byte[] toByteArray()
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// This method returns a byte array that may be persisted to disk and restored to a
  /// DownloadRequest. The instance of DownloadRequest persisted by this method
  /// may be recovered via Builder\#fromSerializedRequest(byte[]).
  ///@return A byte array of data to persist.
  jni.JniObject toByteArray() =>
      jni.JniObject.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_toByteArray, jni.JniType.objectType, []).object);

  static final _id_getMaxAppIntentSize =
      jniAccessors.getStaticMethodIDOf(_classRef, "getMaxAppIntentSize", "()I");

  /// from: static public int getMaxAppIntentSize()
  ///
  /// Maximum permissible length for the app's destination path, when serialized via
  /// Uri\#toString().
  static int getMaxAppIntentSize() => jniAccessors.callStaticMethodWithArgs(
      _classRef, _id_getMaxAppIntentSize, jni.JniType.intType, []).integer;

  static final _id_getMaxDestinationUriSize = jniAccessors.getStaticMethodIDOf(
      _classRef, "getMaxDestinationUriSize", "()I");

  /// from: static public int getMaxDestinationUriSize()
  ///
  /// Maximum permissible length for the app's download-completion intent, when serialized via
  /// Intent\#toUri(int).
  static int getMaxDestinationUriSize() =>
      jniAccessors.callStaticMethodWithArgs(_classRef,
          _id_getMaxDestinationUriSize, jni.JniType.intType, []).integer;

  static final _id_equals1 =
      jniAccessors.getMethodIDOf(_classRef, "equals", "(Ljava/lang/Object;)Z");

  /// from: public boolean equals(java.lang.Object o)
  bool equals1(jni.JniObject o) => jniAccessors.callMethodWithArgs(
      reference, _id_equals1, jni.JniType.booleanType, [o.reference]).boolean;

  static final _id_hashCode1 =
      jniAccessors.getMethodIDOf(_classRef, "hashCode", "()I");

  /// from: public int hashCode()
  int hashCode1() => jniAccessors.callMethodWithArgs(
      reference, _id_hashCode1, jni.JniType.intType, []).integer;
}

/// from: android.telephony.mbms.DownloadRequest$Builder
class DownloadRequest_Builder extends jni.JniObject {
  static final _classRef = jniAccessors
      .getClassOf("android/telephony/mbms/DownloadRequest\$Builder");
  DownloadRequest_Builder.fromRef(jni.JObject ref) : super.fromRef(ref);

  static final _id_ctor = jniAccessors.getMethodIDOf(
      _classRef, "<init>", "(Landroid/net/Uri;Landroid/net/Uri;)V");

  /// from: public void <init>(android.net.Uri sourceUri, android.net.Uri destinationUri)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Builds a new DownloadRequest.
  ///@param sourceUri the source URI for the DownloadRequest to be built. This URI should
  ///     never be null.
  /// This value must never be {@code null}.
  ///@param destinationUri The final location for the file(s) that are to be downloaded. It
  ///     must be on the same filesystem as the temp file directory set via
  ///     android.telephony.MbmsDownloadSession\#setTempFileRootDirectory(File).
  ///     The provided path must be a directory that exists. An
  ///     IllegalArgumentException will be thrown otherwise.
  ///
  /// This value must never be {@code null}.
  DownloadRequest_Builder(uri_.Uri sourceUri, uri_.Uri destinationUri)
      : super.fromRef(jniAccessors.newObjectWithArgs(_classRef, _id_ctor,
            [sourceUri.reference, destinationUri.reference]).object);

  static final _id_fromDownloadRequest = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "fromDownloadRequest",
      "(Landroid/telephony/mbms/DownloadRequest;)Landroid/telephony/mbms/DownloadRequest\$Builder;");

  /// from: static public android.telephony.mbms.DownloadRequest.Builder fromDownloadRequest(android.telephony.mbms.DownloadRequest other)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Constructs a Builder from a DownloadRequest
  ///@param other The DownloadRequest from which the data for the Builder
  ///              should come.
  ///@return An instance of Builder pre-populated with data from the provided
  ///         DownloadRequest.
  static DownloadRequest_Builder fromDownloadRequest(DownloadRequest other) =>
      DownloadRequest_Builder.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_fromDownloadRequest,
          jni.JniType.objectType,
          [other.reference]).object);

  static final _id_fromSerializedRequest = jniAccessors.getStaticMethodIDOf(
      _classRef,
      "fromSerializedRequest",
      "([B)Landroid/telephony/mbms/DownloadRequest\$Builder;");

  /// from: static public android.telephony.mbms.DownloadRequest.Builder fromSerializedRequest(byte[] data)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// This method constructs a new instance of Builder based on the serialized data
  /// passed in.
  ///@param data A byte array, the contents of which should have been originally obtained
  ///             from DownloadRequest\#toByteArray().
  static DownloadRequest_Builder fromSerializedRequest(jni.JniObject data) =>
      DownloadRequest_Builder.fromRef(jniAccessors.callStaticMethodWithArgs(
          _classRef,
          _id_fromSerializedRequest,
          jni.JniType.objectType,
          [data.reference]).object);

  static final _id_setServiceInfo = jniAccessors.getMethodIDOf(
      _classRef,
      "setServiceInfo",
      "(Landroid/telephony/mbms/FileServiceInfo;)Landroid/telephony/mbms/DownloadRequest\$Builder;");

  /// from: public android.telephony.mbms.DownloadRequest.Builder setServiceInfo(android.telephony.mbms.FileServiceInfo serviceInfo)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Sets the service from which the download request to be built will download from.
  ///@param serviceInfo
  ///@return
  DownloadRequest_Builder setServiceInfo(
          fileserviceinfo_.FileServiceInfo serviceInfo) =>
      DownloadRequest_Builder.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_setServiceInfo,
          jni.JniType.objectType,
          [serviceInfo.reference]).object);

  static final _id_setSubscriptionId = jniAccessors.getMethodIDOf(
      _classRef,
      "setSubscriptionId",
      "(I)Landroid/telephony/mbms/DownloadRequest\$Builder;");

  /// from: public android.telephony.mbms.DownloadRequest.Builder setSubscriptionId(int subscriptionId)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Set the subscription ID on which the file(s) should be downloaded.
  ///@param subscriptionId
  DownloadRequest_Builder setSubscriptionId(int subscriptionId) =>
      DownloadRequest_Builder.fromRef(jniAccessors.callMethodWithArgs(
          reference,
          _id_setSubscriptionId,
          jni.JniType.objectType,
          [subscriptionId]).object);

  static final _id_setAppIntent = jniAccessors.getMethodIDOf(
      _classRef,
      "setAppIntent",
      "(Landroid/content/Intent;)Landroid/telephony/mbms/DownloadRequest\$Builder;");

  /// from: public android.telephony.mbms.DownloadRequest.Builder setAppIntent(android.content.Intent intent)
  /// The returned object must be deleted after use, by calling the `delete` method.
  ///
  /// Set the Intent that should be sent when the download completes or fails. This
  /// should be an intent with a explicit android.content.ComponentName targeted to a
  /// android.content.BroadcastReceiver in the app's package.
  ///
  /// The middleware should not use this method.
  ///@param intent
  DownloadRequest_Builder setAppIntent(intent_.Intent intent) =>
      DownloadRequest_Builder.fromRef(jniAccessors.callMethodWithArgs(reference,
          _id_setAppIntent, jni.JniType.objectType, [intent.reference]).object);

  static final _id_build = jniAccessors.getMethodIDOf(
      _classRef, "build", "()Landroid/telephony/mbms/DownloadRequest;");

  /// from: public android.telephony.mbms.DownloadRequest build()
  /// The returned object must be deleted after use, by calling the `delete` method.
  DownloadRequest build() =>
      DownloadRequest.fromRef(jniAccessors.callMethodWithArgs(
          reference, _id_build, jni.JniType.objectType, []).object);
}
